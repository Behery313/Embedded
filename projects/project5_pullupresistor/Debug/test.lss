
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000007ec  00000000  00000000  00000740  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007f7  00000000  00000000  00000f2c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4f 03 	call	0x69e	; 0x69e <main>
  64:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPinDir>:

/*****************Interfaces*******************/
/****************DIO_SetPinDir*****************/
/*Set Pin Direction*/
void DIO_SetPinDir(u8 Port_ID, u8 Pin_no, u8 Pin_Dir)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	27 97       	sbiw	r28, 0x07	; 7
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	89 83       	std	Y+1, r24	; 0x01
  82:	6a 83       	std	Y+2, r22	; 0x02
  84:	4b 83       	std	Y+3, r20	; 0x03
	/*Check the Port ID and Pin value are valid*/
	if((Port_ID <= PORTD)&&(Pin_no <= PIN_7))
  86:	89 81       	ldd	r24, Y+1	; 0x01
  88:	84 30       	cpi	r24, 0x04	; 4
  8a:	08 f0       	brcs	.+2      	; 0x8e <DIO_SetPinDir+0x22>
  8c:	ee c0       	rjmp	.+476    	; 0x26a <DIO_SetPinDir+0x1fe>
  8e:	8a 81       	ldd	r24, Y+2	; 0x02
  90:	88 30       	cpi	r24, 0x08	; 8
  92:	08 f0       	brcs	.+2      	; 0x96 <DIO_SetPinDir+0x2a>
  94:	ea c0       	rjmp	.+468    	; 0x26a <DIO_SetPinDir+0x1fe>
	{
		/*The ID is valid check the Pin Direction*/
		if(Pin_Dir == INPUT)
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	88 23       	and	r24, r24
  9a:	09 f0       	breq	.+2      	; 0x9e <DIO_SetPinDir+0x32>
  9c:	74 c0       	rjmp	.+232    	; 0x186 <DIO_SetPinDir+0x11a>
		{
			/*Configure Pin as Input*/
			switch(Port_ID)
  9e:	89 81       	ldd	r24, Y+1	; 0x01
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3f 83       	std	Y+7, r19	; 0x07
  a6:	2e 83       	std	Y+6, r18	; 0x06
  a8:	8e 81       	ldd	r24, Y+6	; 0x06
  aa:	9f 81       	ldd	r25, Y+7	; 0x07
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	91 05       	cpc	r25, r1
  b0:	59 f1       	breq	.+86     	; 0x108 <DIO_SetPinDir+0x9c>
  b2:	2e 81       	ldd	r18, Y+6	; 0x06
  b4:	3f 81       	ldd	r19, Y+7	; 0x07
  b6:	22 30       	cpi	r18, 0x02	; 2
  b8:	31 05       	cpc	r19, r1
  ba:	2c f4       	brge	.+10     	; 0xc6 <DIO_SetPinDir+0x5a>
  bc:	8e 81       	ldd	r24, Y+6	; 0x06
  be:	9f 81       	ldd	r25, Y+7	; 0x07
  c0:	00 97       	sbiw	r24, 0x00	; 0
  c2:	69 f0       	breq	.+26     	; 0xde <DIO_SetPinDir+0x72>
  c4:	d2 c0       	rjmp	.+420    	; 0x26a <DIO_SetPinDir+0x1fe>
  c6:	2e 81       	ldd	r18, Y+6	; 0x06
  c8:	3f 81       	ldd	r19, Y+7	; 0x07
  ca:	22 30       	cpi	r18, 0x02	; 2
  cc:	31 05       	cpc	r19, r1
  ce:	89 f1       	breq	.+98     	; 0x132 <DIO_SetPinDir+0xc6>
  d0:	8e 81       	ldd	r24, Y+6	; 0x06
  d2:	9f 81       	ldd	r25, Y+7	; 0x07
  d4:	83 30       	cpi	r24, 0x03	; 3
  d6:	91 05       	cpc	r25, r1
  d8:	09 f4       	brne	.+2      	; 0xdc <DIO_SetPinDir+0x70>
  da:	40 c0       	rjmp	.+128    	; 0x15c <DIO_SetPinDir+0xf0>
  dc:	c6 c0       	rjmp	.+396    	; 0x26a <DIO_SetPinDir+0x1fe>
			case PORTA:

				/*Configure the required Pin in PORTA*/
				/* as input in PORTA*/
				/*Add your code here*/
				CLR_BIT(DDRA_REG,Pin_no);
  de:	aa e3       	ldi	r26, 0x3A	; 58
  e0:	b0 e0       	ldi	r27, 0x00	; 0
  e2:	ea e3       	ldi	r30, 0x3A	; 58
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	48 2f       	mov	r20, r24
  ea:	8a 81       	ldd	r24, Y+2	; 0x02
  ec:	28 2f       	mov	r18, r24
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 2e       	mov	r0, r18
  f6:	02 c0       	rjmp	.+4      	; 0xfc <DIO_SetPinDir+0x90>
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	0a 94       	dec	r0
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <DIO_SetPinDir+0x8c>
 100:	80 95       	com	r24
 102:	84 23       	and	r24, r20
 104:	8c 93       	st	X, r24
 106:	b1 c0       	rjmp	.+354    	; 0x26a <DIO_SetPinDir+0x1fe>
				break;
			case PORTB:
				/*Configure the required Pin in PORTA*/
				/* as input in PORTB*/
				/*Add your code here*/
				CLR_BIT(DDRB_REG,Pin_no);
 108:	a7 e3       	ldi	r26, 0x37	; 55
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	e7 e3       	ldi	r30, 0x37	; 55
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	48 2f       	mov	r20, r24
 114:	8a 81       	ldd	r24, Y+2	; 0x02
 116:	28 2f       	mov	r18, r24
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 2e       	mov	r0, r18
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_SetPinDir+0xba>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	0a 94       	dec	r0
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_SetPinDir+0xb6>
 12a:	80 95       	com	r24
 12c:	84 23       	and	r24, r20
 12e:	8c 93       	st	X, r24
 130:	9c c0       	rjmp	.+312    	; 0x26a <DIO_SetPinDir+0x1fe>
				break;
			case PORTC:
				/*Configure the required Pin in PORTA*/
				/* as input in PORTC*/
				/*Add your code here*/
				CLR_BIT(DDRC_REG,Pin_no);
 132:	a4 e3       	ldi	r26, 0x34	; 52
 134:	b0 e0       	ldi	r27, 0x00	; 0
 136:	e4 e3       	ldi	r30, 0x34	; 52
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	48 2f       	mov	r20, r24
 13e:	8a 81       	ldd	r24, Y+2	; 0x02
 140:	28 2f       	mov	r18, r24
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	02 2e       	mov	r0, r18
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_SetPinDir+0xe4>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	0a 94       	dec	r0
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_SetPinDir+0xe0>
 154:	80 95       	com	r24
 156:	84 23       	and	r24, r20
 158:	8c 93       	st	X, r24
 15a:	87 c0       	rjmp	.+270    	; 0x26a <DIO_SetPinDir+0x1fe>
				break;
			case PORTD:
				/*Configure the required Pin in PORTA*/
				/* as input in PORTD*/
				/*Add your code here*/
				CLR_BIT(DDRD_REG,Pin_no);
 15c:	a1 e3       	ldi	r26, 0x31	; 49
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e1 e3       	ldi	r30, 0x31	; 49
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	48 2f       	mov	r20, r24
 168:	8a 81       	ldd	r24, Y+2	; 0x02
 16a:	28 2f       	mov	r18, r24
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 2e       	mov	r0, r18
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_SetPinDir+0x10e>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	0a 94       	dec	r0
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_SetPinDir+0x10a>
 17e:	80 95       	com	r24
 180:	84 23       	and	r24, r20
 182:	8c 93       	st	X, r24
 184:	72 c0       	rjmp	.+228    	; 0x26a <DIO_SetPinDir+0x1fe>
				break;
			}

		}
		else if(Pin_Dir == OUTPUT)
 186:	8b 81       	ldd	r24, Y+3	; 0x03
 188:	81 30       	cpi	r24, 0x01	; 1
 18a:	09 f0       	breq	.+2      	; 0x18e <DIO_SetPinDir+0x122>
 18c:	6e c0       	rjmp	.+220    	; 0x26a <DIO_SetPinDir+0x1fe>
		{
			/*Configure Pin as Output*/
			/*Configure Pin as Input*/
			switch(Port_ID)
 18e:	89 81       	ldd	r24, Y+1	; 0x01
 190:	28 2f       	mov	r18, r24
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	3d 83       	std	Y+5, r19	; 0x05
 196:	2c 83       	std	Y+4, r18	; 0x04
 198:	8c 81       	ldd	r24, Y+4	; 0x04
 19a:	9d 81       	ldd	r25, Y+5	; 0x05
 19c:	81 30       	cpi	r24, 0x01	; 1
 19e:	91 05       	cpc	r25, r1
 1a0:	49 f1       	breq	.+82     	; 0x1f4 <DIO_SetPinDir+0x188>
 1a2:	2c 81       	ldd	r18, Y+4	; 0x04
 1a4:	3d 81       	ldd	r19, Y+5	; 0x05
 1a6:	22 30       	cpi	r18, 0x02	; 2
 1a8:	31 05       	cpc	r19, r1
 1aa:	2c f4       	brge	.+10     	; 0x1b6 <DIO_SetPinDir+0x14a>
 1ac:	8c 81       	ldd	r24, Y+4	; 0x04
 1ae:	9d 81       	ldd	r25, Y+5	; 0x05
 1b0:	00 97       	sbiw	r24, 0x00	; 0
 1b2:	61 f0       	breq	.+24     	; 0x1cc <DIO_SetPinDir+0x160>
 1b4:	5a c0       	rjmp	.+180    	; 0x26a <DIO_SetPinDir+0x1fe>
 1b6:	2c 81       	ldd	r18, Y+4	; 0x04
 1b8:	3d 81       	ldd	r19, Y+5	; 0x05
 1ba:	22 30       	cpi	r18, 0x02	; 2
 1bc:	31 05       	cpc	r19, r1
 1be:	71 f1       	breq	.+92     	; 0x21c <DIO_SetPinDir+0x1b0>
 1c0:	8c 81       	ldd	r24, Y+4	; 0x04
 1c2:	9d 81       	ldd	r25, Y+5	; 0x05
 1c4:	83 30       	cpi	r24, 0x03	; 3
 1c6:	91 05       	cpc	r25, r1
 1c8:	e9 f1       	breq	.+122    	; 0x244 <DIO_SetPinDir+0x1d8>
 1ca:	4f c0       	rjmp	.+158    	; 0x26a <DIO_SetPinDir+0x1fe>
			{
			case PORTA:
				/*Configure the required Pin in PORTA*/
				/* as output in PORTA*/
				/*Add your code here*/
				SET_BIT(DDRA_REG,Pin_no);
 1cc:	aa e3       	ldi	r26, 0x3A	; 58
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	ea e3       	ldi	r30, 0x3A	; 58
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	48 2f       	mov	r20, r24
 1d8:	8a 81       	ldd	r24, Y+2	; 0x02
 1da:	28 2f       	mov	r18, r24
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	02 2e       	mov	r0, r18
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_SetPinDir+0x17e>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	0a 94       	dec	r0
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_SetPinDir+0x17a>
 1ee:	84 2b       	or	r24, r20
 1f0:	8c 93       	st	X, r24
 1f2:	3b c0       	rjmp	.+118    	; 0x26a <DIO_SetPinDir+0x1fe>
				break;
			case PORTB:
				/*Configure the required Pin in PORTA*/
				/* as output in PORTB*/
				/*Add your code here*/
				SET_BIT(DDRB_REG,Pin_no);
 1f4:	a7 e3       	ldi	r26, 0x37	; 55
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	e7 e3       	ldi	r30, 0x37	; 55
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	48 2f       	mov	r20, r24
 200:	8a 81       	ldd	r24, Y+2	; 0x02
 202:	28 2f       	mov	r18, r24
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 2e       	mov	r0, r18
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_SetPinDir+0x1a6>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	0a 94       	dec	r0
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_SetPinDir+0x1a2>
 216:	84 2b       	or	r24, r20
 218:	8c 93       	st	X, r24
 21a:	27 c0       	rjmp	.+78     	; 0x26a <DIO_SetPinDir+0x1fe>
				break;
			case PORTC:
				/*Configure the required Pin in PORTA*/
				/* as output in PORTC*/
				/*Add your code here*/
				SET_BIT(DDRC_REG,Pin_no);
 21c:	a4 e3       	ldi	r26, 0x34	; 52
 21e:	b0 e0       	ldi	r27, 0x00	; 0
 220:	e4 e3       	ldi	r30, 0x34	; 52
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	48 2f       	mov	r20, r24
 228:	8a 81       	ldd	r24, Y+2	; 0x02
 22a:	28 2f       	mov	r18, r24
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 2e       	mov	r0, r18
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_SetPinDir+0x1ce>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	0a 94       	dec	r0
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_SetPinDir+0x1ca>
 23e:	84 2b       	or	r24, r20
 240:	8c 93       	st	X, r24
 242:	13 c0       	rjmp	.+38     	; 0x26a <DIO_SetPinDir+0x1fe>
				break;
			case PORTD:
				/*Configure the required Pin in PORTA*/
				/* as output in PORTD*/
				/*Add your code here*/
				SET_BIT(DDRD_REG,Pin_no);
 244:	a1 e3       	ldi	r26, 0x31	; 49
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	e1 e3       	ldi	r30, 0x31	; 49
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	80 81       	ld	r24, Z
 24e:	48 2f       	mov	r20, r24
 250:	8a 81       	ldd	r24, Y+2	; 0x02
 252:	28 2f       	mov	r18, r24
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	02 2e       	mov	r0, r18
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_SetPinDir+0x1f6>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	0a 94       	dec	r0
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_SetPinDir+0x1f2>
 266:	84 2b       	or	r24, r20
 268:	8c 93       	st	X, r24
	}
	else
	{
		/*Do nothing Wrong Port ID or Pin no*/
	}
}
 26a:	27 96       	adiw	r28, 0x07	; 7
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
 276:	cf 91       	pop	r28
 278:	df 91       	pop	r29
 27a:	08 95       	ret

0000027c <DIO_SetPinVal>:
/*************End of DIO_SetPinDir**************/

/****************DIO_SetPinVal******************/
/*Set Pin Value*/
void DIO_SetPinVal(u8 Port_ID, u8 Pin_no, u8 Pin_Val)
{
 27c:	df 93       	push	r29
 27e:	cf 93       	push	r28
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	27 97       	sbiw	r28, 0x07	; 7
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	6a 83       	std	Y+2, r22	; 0x02
 294:	4b 83       	std	Y+3, r20	; 0x03
	/*Check the Port ID and Pin value are valid*/
	if((Port_ID <= PORTD)&&(Pin_no <= PIN_7))
 296:	89 81       	ldd	r24, Y+1	; 0x01
 298:	84 30       	cpi	r24, 0x04	; 4
 29a:	08 f0       	brcs	.+2      	; 0x29e <DIO_SetPinVal+0x22>
 29c:	ee c0       	rjmp	.+476    	; 0x47a <DIO_SetPinVal+0x1fe>
 29e:	8a 81       	ldd	r24, Y+2	; 0x02
 2a0:	88 30       	cpi	r24, 0x08	; 8
 2a2:	08 f0       	brcs	.+2      	; 0x2a6 <DIO_SetPinVal+0x2a>
 2a4:	ea c0       	rjmp	.+468    	; 0x47a <DIO_SetPinVal+0x1fe>
	{
		/*Set the Pin value*/
		if(Pin_Val==LOW)
 2a6:	8b 81       	ldd	r24, Y+3	; 0x03
 2a8:	88 23       	and	r24, r24
 2aa:	09 f0       	breq	.+2      	; 0x2ae <DIO_SetPinVal+0x32>
 2ac:	74 c0       	rjmp	.+232    	; 0x396 <DIO_SetPinVal+0x11a>
		{
			/*Set The corresponding Pin value to Low*/
			switch(Port_ID)
 2ae:	89 81       	ldd	r24, Y+1	; 0x01
 2b0:	28 2f       	mov	r18, r24
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	3f 83       	std	Y+7, r19	; 0x07
 2b6:	2e 83       	std	Y+6, r18	; 0x06
 2b8:	8e 81       	ldd	r24, Y+6	; 0x06
 2ba:	9f 81       	ldd	r25, Y+7	; 0x07
 2bc:	81 30       	cpi	r24, 0x01	; 1
 2be:	91 05       	cpc	r25, r1
 2c0:	59 f1       	breq	.+86     	; 0x318 <DIO_SetPinVal+0x9c>
 2c2:	2e 81       	ldd	r18, Y+6	; 0x06
 2c4:	3f 81       	ldd	r19, Y+7	; 0x07
 2c6:	22 30       	cpi	r18, 0x02	; 2
 2c8:	31 05       	cpc	r19, r1
 2ca:	2c f4       	brge	.+10     	; 0x2d6 <DIO_SetPinVal+0x5a>
 2cc:	8e 81       	ldd	r24, Y+6	; 0x06
 2ce:	9f 81       	ldd	r25, Y+7	; 0x07
 2d0:	00 97       	sbiw	r24, 0x00	; 0
 2d2:	69 f0       	breq	.+26     	; 0x2ee <DIO_SetPinVal+0x72>
 2d4:	d2 c0       	rjmp	.+420    	; 0x47a <DIO_SetPinVal+0x1fe>
 2d6:	2e 81       	ldd	r18, Y+6	; 0x06
 2d8:	3f 81       	ldd	r19, Y+7	; 0x07
 2da:	22 30       	cpi	r18, 0x02	; 2
 2dc:	31 05       	cpc	r19, r1
 2de:	89 f1       	breq	.+98     	; 0x342 <DIO_SetPinVal+0xc6>
 2e0:	8e 81       	ldd	r24, Y+6	; 0x06
 2e2:	9f 81       	ldd	r25, Y+7	; 0x07
 2e4:	83 30       	cpi	r24, 0x03	; 3
 2e6:	91 05       	cpc	r25, r1
 2e8:	09 f4       	brne	.+2      	; 0x2ec <DIO_SetPinVal+0x70>
 2ea:	40 c0       	rjmp	.+128    	; 0x36c <DIO_SetPinVal+0xf0>
 2ec:	c6 c0       	rjmp	.+396    	; 0x47a <DIO_SetPinVal+0x1fe>
			{
			case PORTA:
				/*Set the required pin in PortA to low*/
				/*Add your code here*/
				CLR_BIT(PORTA_REG,Pin_no);
 2ee:	ab e3       	ldi	r26, 0x3B	; 59
 2f0:	b0 e0       	ldi	r27, 0x00	; 0
 2f2:	eb e3       	ldi	r30, 0x3B	; 59
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	80 81       	ld	r24, Z
 2f8:	48 2f       	mov	r20, r24
 2fa:	8a 81       	ldd	r24, Y+2	; 0x02
 2fc:	28 2f       	mov	r18, r24
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	02 2e       	mov	r0, r18
 306:	02 c0       	rjmp	.+4      	; 0x30c <DIO_SetPinVal+0x90>
 308:	88 0f       	add	r24, r24
 30a:	99 1f       	adc	r25, r25
 30c:	0a 94       	dec	r0
 30e:	e2 f7       	brpl	.-8      	; 0x308 <DIO_SetPinVal+0x8c>
 310:	80 95       	com	r24
 312:	84 23       	and	r24, r20
 314:	8c 93       	st	X, r24
 316:	b1 c0       	rjmp	.+354    	; 0x47a <DIO_SetPinVal+0x1fe>
				break;
			case PORTB:
				/*Set the required pin in PortB to low*/
				/*Add your code here*/
				CLR_BIT(PORTB_REG,Pin_no);
 318:	a8 e3       	ldi	r26, 0x38	; 56
 31a:	b0 e0       	ldi	r27, 0x00	; 0
 31c:	e8 e3       	ldi	r30, 0x38	; 56
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	80 81       	ld	r24, Z
 322:	48 2f       	mov	r20, r24
 324:	8a 81       	ldd	r24, Y+2	; 0x02
 326:	28 2f       	mov	r18, r24
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	02 2e       	mov	r0, r18
 330:	02 c0       	rjmp	.+4      	; 0x336 <DIO_SetPinVal+0xba>
 332:	88 0f       	add	r24, r24
 334:	99 1f       	adc	r25, r25
 336:	0a 94       	dec	r0
 338:	e2 f7       	brpl	.-8      	; 0x332 <DIO_SetPinVal+0xb6>
 33a:	80 95       	com	r24
 33c:	84 23       	and	r24, r20
 33e:	8c 93       	st	X, r24
 340:	9c c0       	rjmp	.+312    	; 0x47a <DIO_SetPinVal+0x1fe>
				break;
			case PORTC:
				/*Set the required pin in PortC to low*/
				/*Add your code here*/
				CLR_BIT(PORTC_REG,Pin_no);
 342:	a5 e3       	ldi	r26, 0x35	; 53
 344:	b0 e0       	ldi	r27, 0x00	; 0
 346:	e5 e3       	ldi	r30, 0x35	; 53
 348:	f0 e0       	ldi	r31, 0x00	; 0
 34a:	80 81       	ld	r24, Z
 34c:	48 2f       	mov	r20, r24
 34e:	8a 81       	ldd	r24, Y+2	; 0x02
 350:	28 2f       	mov	r18, r24
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	02 2e       	mov	r0, r18
 35a:	02 c0       	rjmp	.+4      	; 0x360 <DIO_SetPinVal+0xe4>
 35c:	88 0f       	add	r24, r24
 35e:	99 1f       	adc	r25, r25
 360:	0a 94       	dec	r0
 362:	e2 f7       	brpl	.-8      	; 0x35c <DIO_SetPinVal+0xe0>
 364:	80 95       	com	r24
 366:	84 23       	and	r24, r20
 368:	8c 93       	st	X, r24
 36a:	87 c0       	rjmp	.+270    	; 0x47a <DIO_SetPinVal+0x1fe>
				break;
			case PORTD:
				/*Set the required pin in PortD to low*/
				/*Add your code here*/
				CLR_BIT(PORTD_REG,Pin_no);
 36c:	a2 e3       	ldi	r26, 0x32	; 50
 36e:	b0 e0       	ldi	r27, 0x00	; 0
 370:	e2 e3       	ldi	r30, 0x32	; 50
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	80 81       	ld	r24, Z
 376:	48 2f       	mov	r20, r24
 378:	8a 81       	ldd	r24, Y+2	; 0x02
 37a:	28 2f       	mov	r18, r24
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	02 2e       	mov	r0, r18
 384:	02 c0       	rjmp	.+4      	; 0x38a <DIO_SetPinVal+0x10e>
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	0a 94       	dec	r0
 38c:	e2 f7       	brpl	.-8      	; 0x386 <DIO_SetPinVal+0x10a>
 38e:	80 95       	com	r24
 390:	84 23       	and	r24, r20
 392:	8c 93       	st	X, r24
 394:	72 c0       	rjmp	.+228    	; 0x47a <DIO_SetPinVal+0x1fe>
				break;
			}
		}
		else if(Pin_Val==HIGH)
 396:	8b 81       	ldd	r24, Y+3	; 0x03
 398:	81 30       	cpi	r24, 0x01	; 1
 39a:	09 f0       	breq	.+2      	; 0x39e <DIO_SetPinVal+0x122>
 39c:	6e c0       	rjmp	.+220    	; 0x47a <DIO_SetPinVal+0x1fe>
		{
			/*Set The corresponding Pin value to High*/
			switch(Port_ID)
 39e:	89 81       	ldd	r24, Y+1	; 0x01
 3a0:	28 2f       	mov	r18, r24
 3a2:	30 e0       	ldi	r19, 0x00	; 0
 3a4:	3d 83       	std	Y+5, r19	; 0x05
 3a6:	2c 83       	std	Y+4, r18	; 0x04
 3a8:	8c 81       	ldd	r24, Y+4	; 0x04
 3aa:	9d 81       	ldd	r25, Y+5	; 0x05
 3ac:	81 30       	cpi	r24, 0x01	; 1
 3ae:	91 05       	cpc	r25, r1
 3b0:	49 f1       	breq	.+82     	; 0x404 <DIO_SetPinVal+0x188>
 3b2:	2c 81       	ldd	r18, Y+4	; 0x04
 3b4:	3d 81       	ldd	r19, Y+5	; 0x05
 3b6:	22 30       	cpi	r18, 0x02	; 2
 3b8:	31 05       	cpc	r19, r1
 3ba:	2c f4       	brge	.+10     	; 0x3c6 <DIO_SetPinVal+0x14a>
 3bc:	8c 81       	ldd	r24, Y+4	; 0x04
 3be:	9d 81       	ldd	r25, Y+5	; 0x05
 3c0:	00 97       	sbiw	r24, 0x00	; 0
 3c2:	61 f0       	breq	.+24     	; 0x3dc <DIO_SetPinVal+0x160>
 3c4:	5a c0       	rjmp	.+180    	; 0x47a <DIO_SetPinVal+0x1fe>
 3c6:	2c 81       	ldd	r18, Y+4	; 0x04
 3c8:	3d 81       	ldd	r19, Y+5	; 0x05
 3ca:	22 30       	cpi	r18, 0x02	; 2
 3cc:	31 05       	cpc	r19, r1
 3ce:	71 f1       	breq	.+92     	; 0x42c <DIO_SetPinVal+0x1b0>
 3d0:	8c 81       	ldd	r24, Y+4	; 0x04
 3d2:	9d 81       	ldd	r25, Y+5	; 0x05
 3d4:	83 30       	cpi	r24, 0x03	; 3
 3d6:	91 05       	cpc	r25, r1
 3d8:	e9 f1       	breq	.+122    	; 0x454 <DIO_SetPinVal+0x1d8>
 3da:	4f c0       	rjmp	.+158    	; 0x47a <DIO_SetPinVal+0x1fe>
			{
			case PORTA:
				/*Set the required pin in PortA to high*/
				/*Add your code here*/
				SET_BIT(PORTA_REG,Pin_no);
 3dc:	ab e3       	ldi	r26, 0x3B	; 59
 3de:	b0 e0       	ldi	r27, 0x00	; 0
 3e0:	eb e3       	ldi	r30, 0x3B	; 59
 3e2:	f0 e0       	ldi	r31, 0x00	; 0
 3e4:	80 81       	ld	r24, Z
 3e6:	48 2f       	mov	r20, r24
 3e8:	8a 81       	ldd	r24, Y+2	; 0x02
 3ea:	28 2f       	mov	r18, r24
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	02 2e       	mov	r0, r18
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <DIO_SetPinVal+0x17e>
 3f6:	88 0f       	add	r24, r24
 3f8:	99 1f       	adc	r25, r25
 3fa:	0a 94       	dec	r0
 3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <DIO_SetPinVal+0x17a>
 3fe:	84 2b       	or	r24, r20
 400:	8c 93       	st	X, r24
 402:	3b c0       	rjmp	.+118    	; 0x47a <DIO_SetPinVal+0x1fe>
				break;
			case PORTB:
				/*Set the required pin in PortB to high*/
				/*Add your code here*/
				SET_BIT(PORTB_REG,Pin_no);
 404:	a8 e3       	ldi	r26, 0x38	; 56
 406:	b0 e0       	ldi	r27, 0x00	; 0
 408:	e8 e3       	ldi	r30, 0x38	; 56
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	48 2f       	mov	r20, r24
 410:	8a 81       	ldd	r24, Y+2	; 0x02
 412:	28 2f       	mov	r18, r24
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	02 2e       	mov	r0, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <DIO_SetPinVal+0x1a6>
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	0a 94       	dec	r0
 424:	e2 f7       	brpl	.-8      	; 0x41e <DIO_SetPinVal+0x1a2>
 426:	84 2b       	or	r24, r20
 428:	8c 93       	st	X, r24
 42a:	27 c0       	rjmp	.+78     	; 0x47a <DIO_SetPinVal+0x1fe>
				break;
			case PORTC:
				/*Set the required pin in PortC to high*/
				/*Add your code here*/
				SET_BIT(PORTC_REG,Pin_no);
 42c:	a5 e3       	ldi	r26, 0x35	; 53
 42e:	b0 e0       	ldi	r27, 0x00	; 0
 430:	e5 e3       	ldi	r30, 0x35	; 53
 432:	f0 e0       	ldi	r31, 0x00	; 0
 434:	80 81       	ld	r24, Z
 436:	48 2f       	mov	r20, r24
 438:	8a 81       	ldd	r24, Y+2	; 0x02
 43a:	28 2f       	mov	r18, r24
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	02 2e       	mov	r0, r18
 444:	02 c0       	rjmp	.+4      	; 0x44a <DIO_SetPinVal+0x1ce>
 446:	88 0f       	add	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	0a 94       	dec	r0
 44c:	e2 f7       	brpl	.-8      	; 0x446 <DIO_SetPinVal+0x1ca>
 44e:	84 2b       	or	r24, r20
 450:	8c 93       	st	X, r24
 452:	13 c0       	rjmp	.+38     	; 0x47a <DIO_SetPinVal+0x1fe>
				break;
			case PORTD:
				/*Set the required pin in PortD to high*/
				/*Add your code here*/
				SET_BIT(PORTD_REG,Pin_no);
 454:	a2 e3       	ldi	r26, 0x32	; 50
 456:	b0 e0       	ldi	r27, 0x00	; 0
 458:	e2 e3       	ldi	r30, 0x32	; 50
 45a:	f0 e0       	ldi	r31, 0x00	; 0
 45c:	80 81       	ld	r24, Z
 45e:	48 2f       	mov	r20, r24
 460:	8a 81       	ldd	r24, Y+2	; 0x02
 462:	28 2f       	mov	r18, r24
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	02 2e       	mov	r0, r18
 46c:	02 c0       	rjmp	.+4      	; 0x472 <DIO_SetPinVal+0x1f6>
 46e:	88 0f       	add	r24, r24
 470:	99 1f       	adc	r25, r25
 472:	0a 94       	dec	r0
 474:	e2 f7       	brpl	.-8      	; 0x46e <DIO_SetPinVal+0x1f2>
 476:	84 2b       	or	r24, r20
 478:	8c 93       	st	X, r24
	}
	else
	{
		/*Do nothing wrong Port ID or Pin no*/
	}
}
 47a:	27 96       	adiw	r28, 0x07	; 7
 47c:	0f b6       	in	r0, 0x3f	; 63
 47e:	f8 94       	cli
 480:	de bf       	out	0x3e, r29	; 62
 482:	0f be       	out	0x3f, r0	; 63
 484:	cd bf       	out	0x3d, r28	; 61
 486:	cf 91       	pop	r28
 488:	df 91       	pop	r29
 48a:	08 95       	ret

0000048c <DIO_GetPinVal>:
/**************End of DIO_SetPinVal***************/

/*****************DIO_GetPinVal*******************/
u8 DIO_GetPinVal(u8 Port_ID, u8 Pin_no)
{
 48c:	df 93       	push	r29
 48e:	cf 93       	push	r28
 490:	00 d0       	rcall	.+0      	; 0x492 <DIO_GetPinVal+0x6>
 492:	00 d0       	rcall	.+0      	; 0x494 <DIO_GetPinVal+0x8>
 494:	0f 92       	push	r0
 496:	cd b7       	in	r28, 0x3d	; 61
 498:	de b7       	in	r29, 0x3e	; 62
 49a:	8a 83       	std	Y+2, r24	; 0x02
 49c:	6b 83       	std	Y+3, r22	; 0x03
	/*Set the return value to 0xFF in case */
	/*of wrong PORT or PIN*/
	/*Add your code here*/
	/*Check the Port ID and Pin value are valid*/
	
	if((Port_ID <= PORTD)&&(Pin_no <= PIN_7))
 49e:	8a 81       	ldd	r24, Y+2	; 0x02
 4a0:	84 30       	cpi	r24, 0x04	; 4
 4a2:	08 f0       	brcs	.+2      	; 0x4a6 <DIO_GetPinVal+0x1a>
 4a4:	6b c0       	rjmp	.+214    	; 0x57c <DIO_GetPinVal+0xf0>
 4a6:	8b 81       	ldd	r24, Y+3	; 0x03
 4a8:	88 30       	cpi	r24, 0x08	; 8
 4aa:	08 f0       	brcs	.+2      	; 0x4ae <DIO_GetPinVal+0x22>
 4ac:	67 c0       	rjmp	.+206    	; 0x57c <DIO_GetPinVal+0xf0>
	{

		switch(Port_ID)
 4ae:	8a 81       	ldd	r24, Y+2	; 0x02
 4b0:	28 2f       	mov	r18, r24
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	3d 83       	std	Y+5, r19	; 0x05
 4b6:	2c 83       	std	Y+4, r18	; 0x04
 4b8:	4c 81       	ldd	r20, Y+4	; 0x04
 4ba:	5d 81       	ldd	r21, Y+5	; 0x05
 4bc:	41 30       	cpi	r20, 0x01	; 1
 4be:	51 05       	cpc	r21, r1
 4c0:	41 f1       	breq	.+80     	; 0x512 <DIO_GetPinVal+0x86>
 4c2:	8c 81       	ldd	r24, Y+4	; 0x04
 4c4:	9d 81       	ldd	r25, Y+5	; 0x05
 4c6:	82 30       	cpi	r24, 0x02	; 2
 4c8:	91 05       	cpc	r25, r1
 4ca:	34 f4       	brge	.+12     	; 0x4d8 <DIO_GetPinVal+0x4c>
 4cc:	2c 81       	ldd	r18, Y+4	; 0x04
 4ce:	3d 81       	ldd	r19, Y+5	; 0x05
 4d0:	21 15       	cp	r18, r1
 4d2:	31 05       	cpc	r19, r1
 4d4:	61 f0       	breq	.+24     	; 0x4ee <DIO_GetPinVal+0x62>
 4d6:	52 c0       	rjmp	.+164    	; 0x57c <DIO_GetPinVal+0xf0>
 4d8:	4c 81       	ldd	r20, Y+4	; 0x04
 4da:	5d 81       	ldd	r21, Y+5	; 0x05
 4dc:	42 30       	cpi	r20, 0x02	; 2
 4de:	51 05       	cpc	r21, r1
 4e0:	51 f1       	breq	.+84     	; 0x536 <DIO_GetPinVal+0xaa>
 4e2:	8c 81       	ldd	r24, Y+4	; 0x04
 4e4:	9d 81       	ldd	r25, Y+5	; 0x05
 4e6:	83 30       	cpi	r24, 0x03	; 3
 4e8:	91 05       	cpc	r25, r1
 4ea:	b9 f1       	breq	.+110    	; 0x55a <DIO_GetPinVal+0xce>
 4ec:	47 c0       	rjmp	.+142    	; 0x57c <DIO_GetPinVal+0xf0>
		{
		case PORTA:
			/*Get the Pin value from Port A*/
			/*Add your code here*/
			pin_value = GET_BIT(PINA_REG,Pin_no);
 4ee:	e9 e3       	ldi	r30, 0x39	; 57
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	80 81       	ld	r24, Z
 4f4:	28 2f       	mov	r18, r24
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	8b 81       	ldd	r24, Y+3	; 0x03
 4fa:	88 2f       	mov	r24, r24
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	a9 01       	movw	r20, r18
 500:	02 c0       	rjmp	.+4      	; 0x506 <DIO_GetPinVal+0x7a>
 502:	55 95       	asr	r21
 504:	47 95       	ror	r20
 506:	8a 95       	dec	r24
 508:	e2 f7       	brpl	.-8      	; 0x502 <DIO_GetPinVal+0x76>
 50a:	ca 01       	movw	r24, r20
 50c:	81 70       	andi	r24, 0x01	; 1
 50e:	89 83       	std	Y+1, r24	; 0x01
 510:	35 c0       	rjmp	.+106    	; 0x57c <DIO_GetPinVal+0xf0>
			break;
		case PORTB:
			/*Get the Pin value from Port B*/
			/*Add your code here*/
			pin_value = GET_BIT(PINB_REG,Pin_no);
 512:	e6 e3       	ldi	r30, 0x36	; 54
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	80 81       	ld	r24, Z
 518:	28 2f       	mov	r18, r24
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	8b 81       	ldd	r24, Y+3	; 0x03
 51e:	88 2f       	mov	r24, r24
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	a9 01       	movw	r20, r18
 524:	02 c0       	rjmp	.+4      	; 0x52a <DIO_GetPinVal+0x9e>
 526:	55 95       	asr	r21
 528:	47 95       	ror	r20
 52a:	8a 95       	dec	r24
 52c:	e2 f7       	brpl	.-8      	; 0x526 <DIO_GetPinVal+0x9a>
 52e:	ca 01       	movw	r24, r20
 530:	81 70       	andi	r24, 0x01	; 1
 532:	89 83       	std	Y+1, r24	; 0x01
 534:	23 c0       	rjmp	.+70     	; 0x57c <DIO_GetPinVal+0xf0>
			break;
		case PORTC:
			/*Get the Pin value from Port C*/
			/*Add your code here*/
			pin_value = GET_BIT(PINC_REG,Pin_no);
 536:	e3 e3       	ldi	r30, 0x33	; 51
 538:	f0 e0       	ldi	r31, 0x00	; 0
 53a:	80 81       	ld	r24, Z
 53c:	28 2f       	mov	r18, r24
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	8b 81       	ldd	r24, Y+3	; 0x03
 542:	88 2f       	mov	r24, r24
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	a9 01       	movw	r20, r18
 548:	02 c0       	rjmp	.+4      	; 0x54e <DIO_GetPinVal+0xc2>
 54a:	55 95       	asr	r21
 54c:	47 95       	ror	r20
 54e:	8a 95       	dec	r24
 550:	e2 f7       	brpl	.-8      	; 0x54a <DIO_GetPinVal+0xbe>
 552:	ca 01       	movw	r24, r20
 554:	81 70       	andi	r24, 0x01	; 1
 556:	89 83       	std	Y+1, r24	; 0x01
 558:	11 c0       	rjmp	.+34     	; 0x57c <DIO_GetPinVal+0xf0>
			break;
		case PORTD:
			/*Get the Pin value from Port D*/
			/*Add your code here*/
			pin_value = GET_BIT(PIND_REG,Pin_no);
 55a:	e0 e3       	ldi	r30, 0x30	; 48
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	80 81       	ld	r24, Z
 560:	28 2f       	mov	r18, r24
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	8b 81       	ldd	r24, Y+3	; 0x03
 566:	88 2f       	mov	r24, r24
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	a9 01       	movw	r20, r18
 56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_GetPinVal+0xe6>
 56e:	55 95       	asr	r21
 570:	47 95       	ror	r20
 572:	8a 95       	dec	r24
 574:	e2 f7       	brpl	.-8      	; 0x56e <DIO_GetPinVal+0xe2>
 576:	ca 01       	movw	r24, r20
 578:	81 70       	andi	r24, 0x01	; 1
 57a:	89 83       	std	Y+1, r24	; 0x01
	else
	{
		/*Do nothing wrong Port ID or Pin no*/
	}
/*Reurn the Pin value*/
return pin_value;
 57c:	89 81       	ldd	r24, Y+1	; 0x01
}
 57e:	0f 90       	pop	r0
 580:	0f 90       	pop	r0
 582:	0f 90       	pop	r0
 584:	0f 90       	pop	r0
 586:	0f 90       	pop	r0
 588:	cf 91       	pop	r28
 58a:	df 91       	pop	r29
 58c:	08 95       	ret

0000058e <DIO_SetPortDir>:
/**************End of DIO_GetPinVal***************/

/*****************DIO_SetPortDir******************/
void DIO_SetPortDir(u8 Port_ID, u8 Port_Dir)
{
 58e:	df 93       	push	r29
 590:	cf 93       	push	r28
 592:	00 d0       	rcall	.+0      	; 0x594 <DIO_SetPortDir+0x6>
 594:	00 d0       	rcall	.+0      	; 0x596 <DIO_SetPortDir+0x8>
 596:	cd b7       	in	r28, 0x3d	; 61
 598:	de b7       	in	r29, 0x3e	; 62
 59a:	89 83       	std	Y+1, r24	; 0x01
 59c:	6a 83       	std	Y+2, r22	; 0x02
	/*Check the Port ID and Pin value are valid*/
	if(Port_ID <= PORTD)
 59e:	89 81       	ldd	r24, Y+1	; 0x01
 5a0:	84 30       	cpi	r24, 0x04	; 4
 5a2:	90 f5       	brcc	.+100    	; 0x608 <DIO_SetPortDir+0x7a>
	{
		switch(Port_ID)
 5a4:	89 81       	ldd	r24, Y+1	; 0x01
 5a6:	28 2f       	mov	r18, r24
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	3c 83       	std	Y+4, r19	; 0x04
 5ac:	2b 83       	std	Y+3, r18	; 0x03
 5ae:	8b 81       	ldd	r24, Y+3	; 0x03
 5b0:	9c 81       	ldd	r25, Y+4	; 0x04
 5b2:	81 30       	cpi	r24, 0x01	; 1
 5b4:	91 05       	cpc	r25, r1
 5b6:	d1 f0       	breq	.+52     	; 0x5ec <DIO_SetPortDir+0x5e>
 5b8:	2b 81       	ldd	r18, Y+3	; 0x03
 5ba:	3c 81       	ldd	r19, Y+4	; 0x04
 5bc:	22 30       	cpi	r18, 0x02	; 2
 5be:	31 05       	cpc	r19, r1
 5c0:	2c f4       	brge	.+10     	; 0x5cc <DIO_SetPortDir+0x3e>
 5c2:	8b 81       	ldd	r24, Y+3	; 0x03
 5c4:	9c 81       	ldd	r25, Y+4	; 0x04
 5c6:	00 97       	sbiw	r24, 0x00	; 0
 5c8:	61 f0       	breq	.+24     	; 0x5e2 <DIO_SetPortDir+0x54>
 5ca:	1e c0       	rjmp	.+60     	; 0x608 <DIO_SetPortDir+0x7a>
 5cc:	2b 81       	ldd	r18, Y+3	; 0x03
 5ce:	3c 81       	ldd	r19, Y+4	; 0x04
 5d0:	22 30       	cpi	r18, 0x02	; 2
 5d2:	31 05       	cpc	r19, r1
 5d4:	81 f0       	breq	.+32     	; 0x5f6 <DIO_SetPortDir+0x68>
 5d6:	8b 81       	ldd	r24, Y+3	; 0x03
 5d8:	9c 81       	ldd	r25, Y+4	; 0x04
 5da:	83 30       	cpi	r24, 0x03	; 3
 5dc:	91 05       	cpc	r25, r1
 5de:	81 f0       	breq	.+32     	; 0x600 <DIO_SetPortDir+0x72>
 5e0:	13 c0       	rjmp	.+38     	; 0x608 <DIO_SetPortDir+0x7a>
		{
		case PORTA:
			/*Set whole PortA direction*/
			/*Add your code here*/
			DDRA_REG=Port_Dir;
 5e2:	ea e3       	ldi	r30, 0x3A	; 58
 5e4:	f0 e0       	ldi	r31, 0x00	; 0
 5e6:	8a 81       	ldd	r24, Y+2	; 0x02
 5e8:	80 83       	st	Z, r24
 5ea:	0e c0       	rjmp	.+28     	; 0x608 <DIO_SetPortDir+0x7a>
			break;
		case PORTB:
			/*Set whole PortB direction*/
			/*Add your code here*/
			DDRB_REG=Port_Dir;
 5ec:	e7 e3       	ldi	r30, 0x37	; 55
 5ee:	f0 e0       	ldi	r31, 0x00	; 0
 5f0:	8a 81       	ldd	r24, Y+2	; 0x02
 5f2:	80 83       	st	Z, r24
 5f4:	09 c0       	rjmp	.+18     	; 0x608 <DIO_SetPortDir+0x7a>
			break;
		case PORTC:
			/*Set whole PortC direction*/
			/*Add your code here*/
			DDRC_REG=Port_Dir;
 5f6:	e4 e3       	ldi	r30, 0x34	; 52
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	8a 81       	ldd	r24, Y+2	; 0x02
 5fc:	80 83       	st	Z, r24
 5fe:	04 c0       	rjmp	.+8      	; 0x608 <DIO_SetPortDir+0x7a>
			break;
		case PORTD:
			/*Set whole PortD direction*/
			/*Add your code here*/
			DDRD_REG=Port_Dir;
 600:	e1 e3       	ldi	r30, 0x31	; 49
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	8a 81       	ldd	r24, Y+2	; 0x02
 606:	80 83       	st	Z, r24
	}
	else
	{
		/*Do nothing wrong Port ID*/
	}
}
 608:	0f 90       	pop	r0
 60a:	0f 90       	pop	r0
 60c:	0f 90       	pop	r0
 60e:	0f 90       	pop	r0
 610:	cf 91       	pop	r28
 612:	df 91       	pop	r29
 614:	08 95       	ret

00000616 <DIO_SetPortVal>:
/**************End of DIO_SetPortDir************/

/*****************DIO_SetPortVal******************/
void DIO_SetPortVal(u8 Port_ID, u8 Port_val)
{
 616:	df 93       	push	r29
 618:	cf 93       	push	r28
 61a:	00 d0       	rcall	.+0      	; 0x61c <DIO_SetPortVal+0x6>
 61c:	00 d0       	rcall	.+0      	; 0x61e <DIO_SetPortVal+0x8>
 61e:	cd b7       	in	r28, 0x3d	; 61
 620:	de b7       	in	r29, 0x3e	; 62
 622:	89 83       	std	Y+1, r24	; 0x01
 624:	6a 83       	std	Y+2, r22	; 0x02
	/*Check the Port ID and Pin value are valid*/
	if((Port_ID <= PORTD)/*&&(Port_val == (u8)0||Port_val == (u8)1)*/)
 626:	89 81       	ldd	r24, Y+1	; 0x01
 628:	84 30       	cpi	r24, 0x04	; 4
 62a:	90 f5       	brcc	.+100    	; 0x690 <DIO_SetPortVal+0x7a>
	{
		switch(Port_ID)
 62c:	89 81       	ldd	r24, Y+1	; 0x01
 62e:	28 2f       	mov	r18, r24
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	3c 83       	std	Y+4, r19	; 0x04
 634:	2b 83       	std	Y+3, r18	; 0x03
 636:	8b 81       	ldd	r24, Y+3	; 0x03
 638:	9c 81       	ldd	r25, Y+4	; 0x04
 63a:	81 30       	cpi	r24, 0x01	; 1
 63c:	91 05       	cpc	r25, r1
 63e:	d1 f0       	breq	.+52     	; 0x674 <DIO_SetPortVal+0x5e>
 640:	2b 81       	ldd	r18, Y+3	; 0x03
 642:	3c 81       	ldd	r19, Y+4	; 0x04
 644:	22 30       	cpi	r18, 0x02	; 2
 646:	31 05       	cpc	r19, r1
 648:	2c f4       	brge	.+10     	; 0x654 <DIO_SetPortVal+0x3e>
 64a:	8b 81       	ldd	r24, Y+3	; 0x03
 64c:	9c 81       	ldd	r25, Y+4	; 0x04
 64e:	00 97       	sbiw	r24, 0x00	; 0
 650:	61 f0       	breq	.+24     	; 0x66a <DIO_SetPortVal+0x54>
 652:	1e c0       	rjmp	.+60     	; 0x690 <DIO_SetPortVal+0x7a>
 654:	2b 81       	ldd	r18, Y+3	; 0x03
 656:	3c 81       	ldd	r19, Y+4	; 0x04
 658:	22 30       	cpi	r18, 0x02	; 2
 65a:	31 05       	cpc	r19, r1
 65c:	81 f0       	breq	.+32     	; 0x67e <DIO_SetPortVal+0x68>
 65e:	8b 81       	ldd	r24, Y+3	; 0x03
 660:	9c 81       	ldd	r25, Y+4	; 0x04
 662:	83 30       	cpi	r24, 0x03	; 3
 664:	91 05       	cpc	r25, r1
 666:	81 f0       	breq	.+32     	; 0x688 <DIO_SetPortVal+0x72>
 668:	13 c0       	rjmp	.+38     	; 0x690 <DIO_SetPortVal+0x7a>
		{
		case PORTA:
			/*Set whole PortA value*/
			/*Add your code here*/
			PORTA_REG=Port_val;
 66a:	eb e3       	ldi	r30, 0x3B	; 59
 66c:	f0 e0       	ldi	r31, 0x00	; 0
 66e:	8a 81       	ldd	r24, Y+2	; 0x02
 670:	80 83       	st	Z, r24
 672:	0e c0       	rjmp	.+28     	; 0x690 <DIO_SetPortVal+0x7a>
			break;
		case PORTB:
			/*Set whole PortB value*/
			/*Add your code here*/
			PORTB_REG=Port_val;
 674:	e8 e3       	ldi	r30, 0x38	; 56
 676:	f0 e0       	ldi	r31, 0x00	; 0
 678:	8a 81       	ldd	r24, Y+2	; 0x02
 67a:	80 83       	st	Z, r24
 67c:	09 c0       	rjmp	.+18     	; 0x690 <DIO_SetPortVal+0x7a>
			break;
		case PORTC:
			/*Set whole PortC value*/
			/*Add your code here*/
			PORTC_REG=Port_val;
 67e:	e5 e3       	ldi	r30, 0x35	; 53
 680:	f0 e0       	ldi	r31, 0x00	; 0
 682:	8a 81       	ldd	r24, Y+2	; 0x02
 684:	80 83       	st	Z, r24
 686:	04 c0       	rjmp	.+8      	; 0x690 <DIO_SetPortVal+0x7a>
			break;
		case PORTD:
			/*Set whole PortD value*/
			/*Add your code here*/
			PORTD_REG=Port_val;
 688:	e2 e3       	ldi	r30, 0x32	; 50
 68a:	f0 e0       	ldi	r31, 0x00	; 0
 68c:	8a 81       	ldd	r24, Y+2	; 0x02
 68e:	80 83       	st	Z, r24
	}
	else
	{
		/*Do nothing wrong Port ID*/
	}
}
 690:	0f 90       	pop	r0
 692:	0f 90       	pop	r0
 694:	0f 90       	pop	r0
 696:	0f 90       	pop	r0
 698:	cf 91       	pop	r28
 69a:	df 91       	pop	r29
 69c:	08 95       	ret

0000069e <main>:

#include"DIO_Int.h"
//#include<avr/io.h>

void main()
{
 69e:	df 93       	push	r29
 6a0:	cf 93       	push	r28
 6a2:	cd b7       	in	r28, 0x3d	; 61
 6a4:	de b7       	in	r29, 0x3e	; 62

	DIO_SetPinDir(PORTD,7,INPUT);//make input
 6a6:	83 e0       	ldi	r24, 0x03	; 3
 6a8:	67 e0       	ldi	r22, 0x07	; 7
 6aa:	40 e0       	ldi	r20, 0x00	; 0
 6ac:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
	DIO_SetPinDir(PORTD,0,OUTPUT);
 6b0:	83 e0       	ldi	r24, 0x03	; 3
 6b2:	60 e0       	ldi	r22, 0x00	; 0
 6b4:	41 e0       	ldi	r20, 0x01	; 1
 6b6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDir>
	DIO_SetPinVal(PORTD,7,HIGH);//make pin7 internal pull up
 6ba:	83 e0       	ldi	r24, 0x03	; 3
 6bc:	67 e0       	ldi	r22, 0x07	; 7
 6be:	41 e0       	ldi	r20, 0x01	; 1
 6c0:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_SetPinVal>
	while(1)
	{
		if ( DIO_GetPinVal(PORTD, 7))
 6c4:	83 e0       	ldi	r24, 0x03	; 3
 6c6:	67 e0       	ldi	r22, 0x07	; 7
 6c8:	0e 94 46 02 	call	0x48c	; 0x48c <DIO_GetPinVal>
 6cc:	88 23       	and	r24, r24
 6ce:	31 f0       	breq	.+12     	; 0x6dc <main+0x3e>
		{
			DIO_SetPinVal(PORTD,0,HIGH);
 6d0:	83 e0       	ldi	r24, 0x03	; 3
 6d2:	60 e0       	ldi	r22, 0x00	; 0
 6d4:	41 e0       	ldi	r20, 0x01	; 1
 6d6:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_SetPinVal>
 6da:	f4 cf       	rjmp	.-24     	; 0x6c4 <main+0x26>
		}
		else
			{DIO_SetPinVal(PORTD,0,LOW);}
 6dc:	83 e0       	ldi	r24, 0x03	; 3
 6de:	60 e0       	ldi	r22, 0x00	; 0
 6e0:	40 e0       	ldi	r20, 0x00	; 0
 6e2:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_SetPinVal>
 6e6:	ee cf       	rjmp	.-36     	; 0x6c4 <main+0x26>

000006e8 <_exit>:
 6e8:	f8 94       	cli

000006ea <__stop_program>:
 6ea:	ff cf       	rjmp	.-2      	; 0x6ea <__stop_program>
