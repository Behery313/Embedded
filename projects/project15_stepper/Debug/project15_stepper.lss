
project15_stepper.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002312  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002312  000023a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800068  00800068  000023ae  2**0
                  ALLOC
  3 .stab         00001758  00000000  00000000  000023b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008f9  00000000  00000000  00003b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00004401  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  00004561  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  000046f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  00006735  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  00007836  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  000087b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  00008938  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  00008bfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009488  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a9 36       	cpi	r26, 0x69	; 105
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e2 e1       	ldi	r30, 0x12	; 18
      78:	f3 e2       	ldi	r31, 0x23	; 35
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 99 0e 	call	0x1d32	; 0x1d32 <main>
      8a:	0c 94 87 11 	jmp	0x230e	; 0x230e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 50 11 	jmp	0x22a0	; 0x22a0 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 5c 11 	jmp	0x22b8	; 0x22b8 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 78 11 	jmp	0x22f0	; 0x22f0 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 5c 11 	jmp	0x22b8	; 0x22b8 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 78 11 	jmp	0x22f0	; 0x22f0 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 50 11 	jmp	0x22a0	; 0x22a0 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 58 11 	jmp	0x22b0	; 0x22b0 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 74 11 	jmp	0x22e8	; 0x22e8 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 5c 11 	jmp	0x22b8	; 0x22b8 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 78 11 	jmp	0x22f0	; 0x22f0 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 5c 11 	jmp	0x22b8	; 0x22b8 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 78 11 	jmp	0x22f0	; 0x22f0 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 5c 11 	jmp	0x22b8	; 0x22b8 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 78 11 	jmp	0x22f0	; 0x22f0 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 60 11 	jmp	0x22c0	; 0x22c0 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 7c 11 	jmp	0x22f8	; 0x22f8 <__epilogue_restores__+0x20>

00000952 <__pack_f>:
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	fc 01       	movw	r30, r24
     95e:	e4 80       	ldd	r14, Z+4	; 0x04
     960:	f5 80       	ldd	r15, Z+5	; 0x05
     962:	06 81       	ldd	r16, Z+6	; 0x06
     964:	17 81       	ldd	r17, Z+7	; 0x07
     966:	d1 80       	ldd	r13, Z+1	; 0x01
     968:	80 81       	ld	r24, Z
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	48 f4       	brcc	.+18     	; 0x980 <__pack_f+0x2e>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	a0 e1       	ldi	r26, 0x10	; 16
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	e8 2a       	or	r14, r24
     978:	f9 2a       	or	r15, r25
     97a:	0a 2b       	or	r16, r26
     97c:	1b 2b       	or	r17, r27
     97e:	a5 c0       	rjmp	.+330    	; 0xaca <__pack_f+0x178>
     980:	84 30       	cpi	r24, 0x04	; 4
     982:	09 f4       	brne	.+2      	; 0x986 <__pack_f+0x34>
     984:	9f c0       	rjmp	.+318    	; 0xac4 <__pack_f+0x172>
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	21 f4       	brne	.+8      	; 0x992 <__pack_f+0x40>
     98a:	ee 24       	eor	r14, r14
     98c:	ff 24       	eor	r15, r15
     98e:	87 01       	movw	r16, r14
     990:	05 c0       	rjmp	.+10     	; 0x99c <__pack_f+0x4a>
     992:	e1 14       	cp	r14, r1
     994:	f1 04       	cpc	r15, r1
     996:	01 05       	cpc	r16, r1
     998:	11 05       	cpc	r17, r1
     99a:	19 f4       	brne	.+6      	; 0x9a2 <__pack_f+0x50>
     99c:	e0 e0       	ldi	r30, 0x00	; 0
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	96 c0       	rjmp	.+300    	; 0xace <__pack_f+0x17c>
     9a2:	62 81       	ldd	r22, Z+2	; 0x02
     9a4:	73 81       	ldd	r23, Z+3	; 0x03
     9a6:	9f ef       	ldi	r25, 0xFF	; 255
     9a8:	62 38       	cpi	r22, 0x82	; 130
     9aa:	79 07       	cpc	r23, r25
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <__pack_f+0x5e>
     9ae:	5b c0       	rjmp	.+182    	; 0xa66 <__pack_f+0x114>
     9b0:	22 e8       	ldi	r18, 0x82	; 130
     9b2:	3f ef       	ldi	r19, 0xFF	; 255
     9b4:	26 1b       	sub	r18, r22
     9b6:	37 0b       	sbc	r19, r23
     9b8:	2a 31       	cpi	r18, 0x1A	; 26
     9ba:	31 05       	cpc	r19, r1
     9bc:	2c f0       	brlt	.+10     	; 0x9c8 <__pack_f+0x76>
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	2a c0       	rjmp	.+84     	; 0xa1c <__pack_f+0xca>
     9c8:	b8 01       	movw	r22, r16
     9ca:	a7 01       	movw	r20, r14
     9cc:	02 2e       	mov	r0, r18
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__pack_f+0x86>
     9d0:	76 95       	lsr	r23
     9d2:	67 95       	ror	r22
     9d4:	57 95       	ror	r21
     9d6:	47 95       	ror	r20
     9d8:	0a 94       	dec	r0
     9da:	d2 f7       	brpl	.-12     	; 0x9d0 <__pack_f+0x7e>
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	a0 e0       	ldi	r26, 0x00	; 0
     9e2:	b0 e0       	ldi	r27, 0x00	; 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__pack_f+0x9c>
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	aa 1f       	adc	r26, r26
     9ec:	bb 1f       	adc	r27, r27
     9ee:	2a 95       	dec	r18
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <__pack_f+0x94>
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	a1 09       	sbc	r26, r1
     9f6:	b1 09       	sbc	r27, r1
     9f8:	8e 21       	and	r24, r14
     9fa:	9f 21       	and	r25, r15
     9fc:	a0 23       	and	r26, r16
     9fe:	b1 23       	and	r27, r17
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	a1 05       	cpc	r26, r1
     a04:	b1 05       	cpc	r27, r1
     a06:	21 f0       	breq	.+8      	; 0xa10 <__pack_f+0xbe>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	a0 e0       	ldi	r26, 0x00	; 0
     a0e:	b0 e0       	ldi	r27, 0x00	; 0
     a10:	9a 01       	movw	r18, r20
     a12:	ab 01       	movw	r20, r22
     a14:	28 2b       	or	r18, r24
     a16:	39 2b       	or	r19, r25
     a18:	4a 2b       	or	r20, r26
     a1a:	5b 2b       	or	r21, r27
     a1c:	da 01       	movw	r26, r20
     a1e:	c9 01       	movw	r24, r18
     a20:	8f 77       	andi	r24, 0x7F	; 127
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	a0 70       	andi	r26, 0x00	; 0
     a26:	b0 70       	andi	r27, 0x00	; 0
     a28:	80 34       	cpi	r24, 0x40	; 64
     a2a:	91 05       	cpc	r25, r1
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	39 f4       	brne	.+14     	; 0xa40 <__pack_f+0xee>
     a32:	27 ff       	sbrs	r18, 7
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__pack_f+0xf6>
     a36:	20 5c       	subi	r18, 0xC0	; 192
     a38:	3f 4f       	sbci	r19, 0xFF	; 255
     a3a:	4f 4f       	sbci	r20, 0xFF	; 255
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <__pack_f+0xf6>
     a40:	21 5c       	subi	r18, 0xC1	; 193
     a42:	3f 4f       	sbci	r19, 0xFF	; 255
     a44:	4f 4f       	sbci	r20, 0xFF	; 255
     a46:	5f 4f       	sbci	r21, 0xFF	; 255
     a48:	e0 e0       	ldi	r30, 0x00	; 0
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	20 30       	cpi	r18, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	3a 07       	cpc	r19, r26
     a52:	a0 e0       	ldi	r26, 0x00	; 0
     a54:	4a 07       	cpc	r20, r26
     a56:	a0 e4       	ldi	r26, 0x40	; 64
     a58:	5a 07       	cpc	r21, r26
     a5a:	10 f0       	brcs	.+4      	; 0xa60 <__pack_f+0x10e>
     a5c:	e1 e0       	ldi	r30, 0x01	; 1
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	79 01       	movw	r14, r18
     a62:	8a 01       	movw	r16, r20
     a64:	27 c0       	rjmp	.+78     	; 0xab4 <__pack_f+0x162>
     a66:	60 38       	cpi	r22, 0x80	; 128
     a68:	71 05       	cpc	r23, r1
     a6a:	64 f5       	brge	.+88     	; 0xac4 <__pack_f+0x172>
     a6c:	fb 01       	movw	r30, r22
     a6e:	e1 58       	subi	r30, 0x81	; 129
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	d8 01       	movw	r26, r16
     a74:	c7 01       	movw	r24, r14
     a76:	8f 77       	andi	r24, 0x7F	; 127
     a78:	90 70       	andi	r25, 0x00	; 0
     a7a:	a0 70       	andi	r26, 0x00	; 0
     a7c:	b0 70       	andi	r27, 0x00	; 0
     a7e:	80 34       	cpi	r24, 0x40	; 64
     a80:	91 05       	cpc	r25, r1
     a82:	a1 05       	cpc	r26, r1
     a84:	b1 05       	cpc	r27, r1
     a86:	39 f4       	brne	.+14     	; 0xa96 <__pack_f+0x144>
     a88:	e7 fe       	sbrs	r14, 7
     a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <__pack_f+0x154>
     a8c:	80 e4       	ldi	r24, 0x40	; 64
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	a0 e0       	ldi	r26, 0x00	; 0
     a92:	b0 e0       	ldi	r27, 0x00	; 0
     a94:	04 c0       	rjmp	.+8      	; 0xa9e <__pack_f+0x14c>
     a96:	8f e3       	ldi	r24, 0x3F	; 63
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e8 0e       	add	r14, r24
     aa0:	f9 1e       	adc	r15, r25
     aa2:	0a 1f       	adc	r16, r26
     aa4:	1b 1f       	adc	r17, r27
     aa6:	17 ff       	sbrs	r17, 7
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <__pack_f+0x162>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	31 96       	adiw	r30, 0x01	; 1
     ab4:	87 e0       	ldi	r24, 0x07	; 7
     ab6:	16 95       	lsr	r17
     ab8:	07 95       	ror	r16
     aba:	f7 94       	ror	r15
     abc:	e7 94       	ror	r14
     abe:	8a 95       	dec	r24
     ac0:	d1 f7       	brne	.-12     	; 0xab6 <__pack_f+0x164>
     ac2:	05 c0       	rjmp	.+10     	; 0xace <__pack_f+0x17c>
     ac4:	ee 24       	eor	r14, r14
     ac6:	ff 24       	eor	r15, r15
     ac8:	87 01       	movw	r16, r14
     aca:	ef ef       	ldi	r30, 0xFF	; 255
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	6e 2f       	mov	r22, r30
     ad0:	67 95       	ror	r22
     ad2:	66 27       	eor	r22, r22
     ad4:	67 95       	ror	r22
     ad6:	90 2f       	mov	r25, r16
     ad8:	9f 77       	andi	r25, 0x7F	; 127
     ada:	d7 94       	ror	r13
     adc:	dd 24       	eor	r13, r13
     ade:	d7 94       	ror	r13
     ae0:	8e 2f       	mov	r24, r30
     ae2:	86 95       	lsr	r24
     ae4:	49 2f       	mov	r20, r25
     ae6:	46 2b       	or	r20, r22
     ae8:	58 2f       	mov	r21, r24
     aea:	5d 29       	or	r21, r13
     aec:	b7 01       	movw	r22, r14
     aee:	ca 01       	movw	r24, r20
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	df 90       	pop	r13
     afa:	08 95       	ret

00000afc <__unpack_f>:
     afc:	fc 01       	movw	r30, r24
     afe:	db 01       	movw	r26, r22
     b00:	40 81       	ld	r20, Z
     b02:	51 81       	ldd	r21, Z+1	; 0x01
     b04:	22 81       	ldd	r18, Z+2	; 0x02
     b06:	62 2f       	mov	r22, r18
     b08:	6f 77       	andi	r22, 0x7F	; 127
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	22 1f       	adc	r18, r18
     b0e:	22 27       	eor	r18, r18
     b10:	22 1f       	adc	r18, r18
     b12:	93 81       	ldd	r25, Z+3	; 0x03
     b14:	89 2f       	mov	r24, r25
     b16:	88 0f       	add	r24, r24
     b18:	82 2b       	or	r24, r18
     b1a:	28 2f       	mov	r18, r24
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	99 1f       	adc	r25, r25
     b20:	99 27       	eor	r25, r25
     b22:	99 1f       	adc	r25, r25
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	9c 93       	st	X, r25
     b28:	11 97       	sbiw	r26, 0x01	; 1
     b2a:	21 15       	cp	r18, r1
     b2c:	31 05       	cpc	r19, r1
     b2e:	a9 f5       	brne	.+106    	; 0xb9a <__unpack_f+0x9e>
     b30:	41 15       	cp	r20, r1
     b32:	51 05       	cpc	r21, r1
     b34:	61 05       	cpc	r22, r1
     b36:	71 05       	cpc	r23, r1
     b38:	11 f4       	brne	.+4      	; 0xb3e <__unpack_f+0x42>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	37 c0       	rjmp	.+110    	; 0xbac <__unpack_f+0xb0>
     b3e:	82 e8       	ldi	r24, 0x82	; 130
     b40:	9f ef       	ldi	r25, 0xFF	; 255
     b42:	13 96       	adiw	r26, 0x03	; 3
     b44:	9c 93       	st	X, r25
     b46:	8e 93       	st	-X, r24
     b48:	12 97       	sbiw	r26, 0x02	; 2
     b4a:	9a 01       	movw	r18, r20
     b4c:	ab 01       	movw	r20, r22
     b4e:	67 e0       	ldi	r22, 0x07	; 7
     b50:	22 0f       	add	r18, r18
     b52:	33 1f       	adc	r19, r19
     b54:	44 1f       	adc	r20, r20
     b56:	55 1f       	adc	r21, r21
     b58:	6a 95       	dec	r22
     b5a:	d1 f7       	brne	.-12     	; 0xb50 <__unpack_f+0x54>
     b5c:	83 e0       	ldi	r24, 0x03	; 3
     b5e:	8c 93       	st	X, r24
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <__unpack_f+0x80>
     b62:	22 0f       	add	r18, r18
     b64:	33 1f       	adc	r19, r19
     b66:	44 1f       	adc	r20, r20
     b68:	55 1f       	adc	r21, r21
     b6a:	12 96       	adiw	r26, 0x02	; 2
     b6c:	8d 91       	ld	r24, X+
     b6e:	9c 91       	ld	r25, X
     b70:	13 97       	sbiw	r26, 0x03	; 3
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	13 96       	adiw	r26, 0x03	; 3
     b76:	9c 93       	st	X, r25
     b78:	8e 93       	st	-X, r24
     b7a:	12 97       	sbiw	r26, 0x02	; 2
     b7c:	20 30       	cpi	r18, 0x00	; 0
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	38 07       	cpc	r19, r24
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	48 07       	cpc	r20, r24
     b86:	80 e4       	ldi	r24, 0x40	; 64
     b88:	58 07       	cpc	r21, r24
     b8a:	58 f3       	brcs	.-42     	; 0xb62 <__unpack_f+0x66>
     b8c:	14 96       	adiw	r26, 0x04	; 4
     b8e:	2d 93       	st	X+, r18
     b90:	3d 93       	st	X+, r19
     b92:	4d 93       	st	X+, r20
     b94:	5c 93       	st	X, r21
     b96:	17 97       	sbiw	r26, 0x07	; 7
     b98:	08 95       	ret
     b9a:	2f 3f       	cpi	r18, 0xFF	; 255
     b9c:	31 05       	cpc	r19, r1
     b9e:	79 f4       	brne	.+30     	; 0xbbe <__unpack_f+0xc2>
     ba0:	41 15       	cp	r20, r1
     ba2:	51 05       	cpc	r21, r1
     ba4:	61 05       	cpc	r22, r1
     ba6:	71 05       	cpc	r23, r1
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <__unpack_f+0xb4>
     baa:	84 e0       	ldi	r24, 0x04	; 4
     bac:	8c 93       	st	X, r24
     bae:	08 95       	ret
     bb0:	64 ff       	sbrs	r22, 4
     bb2:	03 c0       	rjmp	.+6      	; 0xbba <__unpack_f+0xbe>
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	8c 93       	st	X, r24
     bb8:	12 c0       	rjmp	.+36     	; 0xbde <__unpack_f+0xe2>
     bba:	1c 92       	st	X, r1
     bbc:	10 c0       	rjmp	.+32     	; 0xbde <__unpack_f+0xe2>
     bbe:	2f 57       	subi	r18, 0x7F	; 127
     bc0:	30 40       	sbci	r19, 0x00	; 0
     bc2:	13 96       	adiw	r26, 0x03	; 3
     bc4:	3c 93       	st	X, r19
     bc6:	2e 93       	st	-X, r18
     bc8:	12 97       	sbiw	r26, 0x02	; 2
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	8c 93       	st	X, r24
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	44 0f       	add	r20, r20
     bd2:	55 1f       	adc	r21, r21
     bd4:	66 1f       	adc	r22, r22
     bd6:	77 1f       	adc	r23, r23
     bd8:	8a 95       	dec	r24
     bda:	d1 f7       	brne	.-12     	; 0xbd0 <__unpack_f+0xd4>
     bdc:	70 64       	ori	r23, 0x40	; 64
     bde:	14 96       	adiw	r26, 0x04	; 4
     be0:	4d 93       	st	X+, r20
     be2:	5d 93       	st	X+, r21
     be4:	6d 93       	st	X+, r22
     be6:	7c 93       	st	X, r23
     be8:	17 97       	sbiw	r26, 0x07	; 7
     bea:	08 95       	ret

00000bec <__fpcmp_parts_f>:
     bec:	1f 93       	push	r17
     bee:	dc 01       	movw	r26, r24
     bf0:	fb 01       	movw	r30, r22
     bf2:	9c 91       	ld	r25, X
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	08 f4       	brcc	.+2      	; 0xbfa <__fpcmp_parts_f+0xe>
     bf8:	47 c0       	rjmp	.+142    	; 0xc88 <__fpcmp_parts_f+0x9c>
     bfa:	80 81       	ld	r24, Z
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	08 f4       	brcc	.+2      	; 0xc02 <__fpcmp_parts_f+0x16>
     c00:	43 c0       	rjmp	.+134    	; 0xc88 <__fpcmp_parts_f+0x9c>
     c02:	94 30       	cpi	r25, 0x04	; 4
     c04:	51 f4       	brne	.+20     	; 0xc1a <__fpcmp_parts_f+0x2e>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	1c 91       	ld	r17, X
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	99 f5       	brne	.+102    	; 0xc74 <__fpcmp_parts_f+0x88>
     c0e:	81 81       	ldd	r24, Z+1	; 0x01
     c10:	68 2f       	mov	r22, r24
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	61 1b       	sub	r22, r17
     c16:	71 09       	sbc	r23, r1
     c18:	3f c0       	rjmp	.+126    	; 0xc98 <__fpcmp_parts_f+0xac>
     c1a:	84 30       	cpi	r24, 0x04	; 4
     c1c:	21 f0       	breq	.+8      	; 0xc26 <__fpcmp_parts_f+0x3a>
     c1e:	92 30       	cpi	r25, 0x02	; 2
     c20:	31 f4       	brne	.+12     	; 0xc2e <__fpcmp_parts_f+0x42>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	b9 f1       	breq	.+110    	; 0xc94 <__fpcmp_parts_f+0xa8>
     c26:	81 81       	ldd	r24, Z+1	; 0x01
     c28:	88 23       	and	r24, r24
     c2a:	89 f1       	breq	.+98     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c2c:	2d c0       	rjmp	.+90     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	11 97       	sbiw	r26, 0x01	; 1
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	f1 f0       	breq	.+60     	; 0xc74 <__fpcmp_parts_f+0x88>
     c38:	81 81       	ldd	r24, Z+1	; 0x01
     c3a:	18 17       	cp	r17, r24
     c3c:	d9 f4       	brne	.+54     	; 0xc74 <__fpcmp_parts_f+0x88>
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	2d 91       	ld	r18, X+
     c42:	3c 91       	ld	r19, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	82 81       	ldd	r24, Z+2	; 0x02
     c48:	93 81       	ldd	r25, Z+3	; 0x03
     c4a:	82 17       	cp	r24, r18
     c4c:	93 07       	cpc	r25, r19
     c4e:	94 f0       	brlt	.+36     	; 0xc74 <__fpcmp_parts_f+0x88>
     c50:	28 17       	cp	r18, r24
     c52:	39 07       	cpc	r19, r25
     c54:	bc f0       	brlt	.+46     	; 0xc84 <__fpcmp_parts_f+0x98>
     c56:	14 96       	adiw	r26, 0x04	; 4
     c58:	8d 91       	ld	r24, X+
     c5a:	9d 91       	ld	r25, X+
     c5c:	0d 90       	ld	r0, X+
     c5e:	bc 91       	ld	r27, X
     c60:	a0 2d       	mov	r26, r0
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	28 17       	cp	r18, r24
     c6c:	39 07       	cpc	r19, r25
     c6e:	4a 07       	cpc	r20, r26
     c70:	5b 07       	cpc	r21, r27
     c72:	18 f4       	brcc	.+6      	; 0xc7a <__fpcmp_parts_f+0x8e>
     c74:	11 23       	and	r17, r17
     c76:	41 f0       	breq	.+16     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c78:	0a c0       	rjmp	.+20     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c7a:	82 17       	cp	r24, r18
     c7c:	93 07       	cpc	r25, r19
     c7e:	a4 07       	cpc	r26, r20
     c80:	b5 07       	cpc	r27, r21
     c82:	40 f4       	brcc	.+16     	; 0xc94 <__fpcmp_parts_f+0xa8>
     c84:	11 23       	and	r17, r17
     c86:	19 f0       	breq	.+6      	; 0xc8e <__fpcmp_parts_f+0xa2>
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <__fpcmp_parts_f+0xac>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <__fpcmp_parts_f+0xac>
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	cb 01       	movw	r24, r22
     c9a:	1f 91       	pop	r17
     c9c:	08 95       	ret

00000c9e <DIO_u8SetPinValue>:
/******************************************************************************/
/***********************Setting pin value**************************************/
/******************************************************************************/

u8 DIO_u8SetPinValue(u8 Copy_u8Port ,u8 Copy_u8Pin,u8 Copy_u8Value)
{
     c9e:	df 93       	push	r29
     ca0:	cf 93       	push	r28
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	28 97       	sbiw	r28, 0x08	; 8
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	f8 94       	cli
     cac:	de bf       	out	0x3e, r29	; 62
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	cd bf       	out	0x3d, r28	; 61
     cb2:	8a 83       	std	Y+2, r24	; 0x02
     cb4:	6b 83       	std	Y+3, r22	; 0x03
     cb6:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;//error state initially zero
     cb8:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8Pin<=DIO_u8PIN_7)
     cba:	8b 81       	ldd	r24, Y+3	; 0x03
     cbc:	88 30       	cpi	r24, 0x08	; 8
     cbe:	08 f0       	brcs	.+2      	; 0xcc2 <DIO_u8SetPinValue+0x24>
     cc0:	ed c0       	rjmp	.+474    	; 0xe9c <DIO_u8SetPinValue+0x1fe>
	{
		if (Copy_u8Value)//if value is 1 SET the required PIN
     cc2:	8c 81       	ldd	r24, Y+4	; 0x04
     cc4:	88 23       	and	r24, r24
     cc6:	09 f4       	brne	.+2      	; 0xcca <DIO_u8SetPinValue+0x2c>
     cc8:	72 c0       	rjmp	.+228    	; 0xdae <DIO_u8SetPinValue+0x110>
		{
			switch(Copy_u8Port)
     cca:	8a 81       	ldd	r24, Y+2	; 0x02
     ccc:	28 2f       	mov	r18, r24
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	38 87       	std	Y+8, r19	; 0x08
     cd2:	2f 83       	std	Y+7, r18	; 0x07
     cd4:	8f 81       	ldd	r24, Y+7	; 0x07
     cd6:	98 85       	ldd	r25, Y+8	; 0x08
     cd8:	81 30       	cpi	r24, 0x01	; 1
     cda:	91 05       	cpc	r25, r1
     cdc:	49 f1       	breq	.+82     	; 0xd30 <DIO_u8SetPinValue+0x92>
     cde:	2f 81       	ldd	r18, Y+7	; 0x07
     ce0:	38 85       	ldd	r19, Y+8	; 0x08
     ce2:	22 30       	cpi	r18, 0x02	; 2
     ce4:	31 05       	cpc	r19, r1
     ce6:	2c f4       	brge	.+10     	; 0xcf2 <DIO_u8SetPinValue+0x54>
     ce8:	8f 81       	ldd	r24, Y+7	; 0x07
     cea:	98 85       	ldd	r25, Y+8	; 0x08
     cec:	00 97       	sbiw	r24, 0x00	; 0
     cee:	61 f0       	breq	.+24     	; 0xd08 <DIO_u8SetPinValue+0x6a>
     cf0:	5b c0       	rjmp	.+182    	; 0xda8 <DIO_u8SetPinValue+0x10a>
     cf2:	2f 81       	ldd	r18, Y+7	; 0x07
     cf4:	38 85       	ldd	r19, Y+8	; 0x08
     cf6:	22 30       	cpi	r18, 0x02	; 2
     cf8:	31 05       	cpc	r19, r1
     cfa:	71 f1       	breq	.+92     	; 0xd58 <DIO_u8SetPinValue+0xba>
     cfc:	8f 81       	ldd	r24, Y+7	; 0x07
     cfe:	98 85       	ldd	r25, Y+8	; 0x08
     d00:	83 30       	cpi	r24, 0x03	; 3
     d02:	91 05       	cpc	r25, r1
     d04:	e9 f1       	breq	.+122    	; 0xd80 <DIO_u8SetPinValue+0xe2>
     d06:	50 c0       	rjmp	.+160    	; 0xda8 <DIO_u8SetPinValue+0x10a>
			{
				case DIO_u8PORTA:
				SET_BIT(PORTA_reg,Copy_u8Pin);
     d08:	ab e3       	ldi	r26, 0x3B	; 59
     d0a:	b0 e0       	ldi	r27, 0x00	; 0
     d0c:	eb e3       	ldi	r30, 0x3B	; 59
     d0e:	f0 e0       	ldi	r31, 0x00	; 0
     d10:	80 81       	ld	r24, Z
     d12:	48 2f       	mov	r20, r24
     d14:	8b 81       	ldd	r24, Y+3	; 0x03
     d16:	28 2f       	mov	r18, r24
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	02 2e       	mov	r0, r18
     d20:	02 c0       	rjmp	.+4      	; 0xd26 <DIO_u8SetPinValue+0x88>
     d22:	88 0f       	add	r24, r24
     d24:	99 1f       	adc	r25, r25
     d26:	0a 94       	dec	r0
     d28:	e2 f7       	brpl	.-8      	; 0xd22 <DIO_u8SetPinValue+0x84>
     d2a:	84 2b       	or	r24, r20
     d2c:	8c 93       	st	X, r24
     d2e:	b8 c0       	rjmp	.+368    	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
				
				case DIO_u8PORTB:
				SET_BIT(PORTB_reg,Copy_u8Pin);
     d30:	a8 e3       	ldi	r26, 0x38	; 56
     d32:	b0 e0       	ldi	r27, 0x00	; 0
     d34:	e8 e3       	ldi	r30, 0x38	; 56
     d36:	f0 e0       	ldi	r31, 0x00	; 0
     d38:	80 81       	ld	r24, Z
     d3a:	48 2f       	mov	r20, r24
     d3c:	8b 81       	ldd	r24, Y+3	; 0x03
     d3e:	28 2f       	mov	r18, r24
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	02 2e       	mov	r0, r18
     d48:	02 c0       	rjmp	.+4      	; 0xd4e <DIO_u8SetPinValue+0xb0>
     d4a:	88 0f       	add	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	0a 94       	dec	r0
     d50:	e2 f7       	brpl	.-8      	; 0xd4a <DIO_u8SetPinValue+0xac>
     d52:	84 2b       	or	r24, r20
     d54:	8c 93       	st	X, r24
     d56:	a4 c0       	rjmp	.+328    	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
				
				case DIO_u8PORTC:
				SET_BIT(PORTC_reg,Copy_u8Pin);
     d58:	a5 e3       	ldi	r26, 0x35	; 53
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	e5 e3       	ldi	r30, 0x35	; 53
     d5e:	f0 e0       	ldi	r31, 0x00	; 0
     d60:	80 81       	ld	r24, Z
     d62:	48 2f       	mov	r20, r24
     d64:	8b 81       	ldd	r24, Y+3	; 0x03
     d66:	28 2f       	mov	r18, r24
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	02 2e       	mov	r0, r18
     d70:	02 c0       	rjmp	.+4      	; 0xd76 <DIO_u8SetPinValue+0xd8>
     d72:	88 0f       	add	r24, r24
     d74:	99 1f       	adc	r25, r25
     d76:	0a 94       	dec	r0
     d78:	e2 f7       	brpl	.-8      	; 0xd72 <DIO_u8SetPinValue+0xd4>
     d7a:	84 2b       	or	r24, r20
     d7c:	8c 93       	st	X, r24
     d7e:	90 c0       	rjmp	.+288    	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
				
				case DIO_u8PORTD:
				SET_BIT(PORTD_reg,Copy_u8Pin);
     d80:	a2 e3       	ldi	r26, 0x32	; 50
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	e2 e3       	ldi	r30, 0x32	; 50
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	80 81       	ld	r24, Z
     d8a:	48 2f       	mov	r20, r24
     d8c:	8b 81       	ldd	r24, Y+3	; 0x03
     d8e:	28 2f       	mov	r18, r24
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	81 e0       	ldi	r24, 0x01	; 1
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	02 2e       	mov	r0, r18
     d98:	02 c0       	rjmp	.+4      	; 0xd9e <DIO_u8SetPinValue+0x100>
     d9a:	88 0f       	add	r24, r24
     d9c:	99 1f       	adc	r25, r25
     d9e:	0a 94       	dec	r0
     da0:	e2 f7       	brpl	.-8      	; 0xd9a <DIO_u8SetPinValue+0xfc>
     da2:	84 2b       	or	r24, r20
     da4:	8c 93       	st	X, r24
     da6:	7c c0       	rjmp	.+248    	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
			
				default:
				Local_u8ErrorState=1;
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	89 83       	std	Y+1, r24	; 0x01
     dac:	79 c0       	rjmp	.+242    	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
			}
		}
		else//value is 0 so we clear the bits
		{
			switch(Copy_u8Port)
     dae:	8a 81       	ldd	r24, Y+2	; 0x02
     db0:	28 2f       	mov	r18, r24
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	3e 83       	std	Y+6, r19	; 0x06
     db6:	2d 83       	std	Y+5, r18	; 0x05
     db8:	8d 81       	ldd	r24, Y+5	; 0x05
     dba:	9e 81       	ldd	r25, Y+6	; 0x06
     dbc:	81 30       	cpi	r24, 0x01	; 1
     dbe:	91 05       	cpc	r25, r1
     dc0:	59 f1       	breq	.+86     	; 0xe18 <DIO_u8SetPinValue+0x17a>
     dc2:	2d 81       	ldd	r18, Y+5	; 0x05
     dc4:	3e 81       	ldd	r19, Y+6	; 0x06
     dc6:	22 30       	cpi	r18, 0x02	; 2
     dc8:	31 05       	cpc	r19, r1
     dca:	2c f4       	brge	.+10     	; 0xdd6 <DIO_u8SetPinValue+0x138>
     dcc:	8d 81       	ldd	r24, Y+5	; 0x05
     dce:	9e 81       	ldd	r25, Y+6	; 0x06
     dd0:	00 97       	sbiw	r24, 0x00	; 0
     dd2:	69 f0       	breq	.+26     	; 0xdee <DIO_u8SetPinValue+0x150>
     dd4:	60 c0       	rjmp	.+192    	; 0xe96 <DIO_u8SetPinValue+0x1f8>
     dd6:	2d 81       	ldd	r18, Y+5	; 0x05
     dd8:	3e 81       	ldd	r19, Y+6	; 0x06
     dda:	22 30       	cpi	r18, 0x02	; 2
     ddc:	31 05       	cpc	r19, r1
     dde:	89 f1       	breq	.+98     	; 0xe42 <DIO_u8SetPinValue+0x1a4>
     de0:	8d 81       	ldd	r24, Y+5	; 0x05
     de2:	9e 81       	ldd	r25, Y+6	; 0x06
     de4:	83 30       	cpi	r24, 0x03	; 3
     de6:	91 05       	cpc	r25, r1
     de8:	09 f4       	brne	.+2      	; 0xdec <DIO_u8SetPinValue+0x14e>
     dea:	40 c0       	rjmp	.+128    	; 0xe6c <DIO_u8SetPinValue+0x1ce>
     dec:	54 c0       	rjmp	.+168    	; 0xe96 <DIO_u8SetPinValue+0x1f8>
			{
				case DIO_u8PORTA:
				CLR_BIT(PORTA_reg,Copy_u8Pin);
     dee:	ab e3       	ldi	r26, 0x3B	; 59
     df0:	b0 e0       	ldi	r27, 0x00	; 0
     df2:	eb e3       	ldi	r30, 0x3B	; 59
     df4:	f0 e0       	ldi	r31, 0x00	; 0
     df6:	80 81       	ld	r24, Z
     df8:	48 2f       	mov	r20, r24
     dfa:	8b 81       	ldd	r24, Y+3	; 0x03
     dfc:	28 2f       	mov	r18, r24
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	02 2e       	mov	r0, r18
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <DIO_u8SetPinValue+0x16e>
     e08:	88 0f       	add	r24, r24
     e0a:	99 1f       	adc	r25, r25
     e0c:	0a 94       	dec	r0
     e0e:	e2 f7       	brpl	.-8      	; 0xe08 <DIO_u8SetPinValue+0x16a>
     e10:	80 95       	com	r24
     e12:	84 23       	and	r24, r20
     e14:	8c 93       	st	X, r24
     e16:	44 c0       	rjmp	.+136    	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
				
				case DIO_u8PORTB:
				CLR_BIT(PORTB_reg,Copy_u8Pin);
     e18:	a8 e3       	ldi	r26, 0x38	; 56
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e8 e3       	ldi	r30, 0x38	; 56
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	48 2f       	mov	r20, r24
     e24:	8b 81       	ldd	r24, Y+3	; 0x03
     e26:	28 2f       	mov	r18, r24
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	02 2e       	mov	r0, r18
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <DIO_u8SetPinValue+0x198>
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	0a 94       	dec	r0
     e38:	e2 f7       	brpl	.-8      	; 0xe32 <DIO_u8SetPinValue+0x194>
     e3a:	80 95       	com	r24
     e3c:	84 23       	and	r24, r20
     e3e:	8c 93       	st	X, r24
     e40:	2f c0       	rjmp	.+94     	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
				
				case DIO_u8PORTC:
				CLR_BIT(PORTC_reg,Copy_u8Pin);
     e42:	a5 e3       	ldi	r26, 0x35	; 53
     e44:	b0 e0       	ldi	r27, 0x00	; 0
     e46:	e5 e3       	ldi	r30, 0x35	; 53
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	80 81       	ld	r24, Z
     e4c:	48 2f       	mov	r20, r24
     e4e:	8b 81       	ldd	r24, Y+3	; 0x03
     e50:	28 2f       	mov	r18, r24
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	81 e0       	ldi	r24, 0x01	; 1
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	02 2e       	mov	r0, r18
     e5a:	02 c0       	rjmp	.+4      	; 0xe60 <DIO_u8SetPinValue+0x1c2>
     e5c:	88 0f       	add	r24, r24
     e5e:	99 1f       	adc	r25, r25
     e60:	0a 94       	dec	r0
     e62:	e2 f7       	brpl	.-8      	; 0xe5c <DIO_u8SetPinValue+0x1be>
     e64:	80 95       	com	r24
     e66:	84 23       	and	r24, r20
     e68:	8c 93       	st	X, r24
     e6a:	1a c0       	rjmp	.+52     	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
				
				case DIO_u8PORTD:
				CLR_BIT(PORTD_reg,Copy_u8Pin);
     e6c:	a2 e3       	ldi	r26, 0x32	; 50
     e6e:	b0 e0       	ldi	r27, 0x00	; 0
     e70:	e2 e3       	ldi	r30, 0x32	; 50
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	80 81       	ld	r24, Z
     e76:	48 2f       	mov	r20, r24
     e78:	8b 81       	ldd	r24, Y+3	; 0x03
     e7a:	28 2f       	mov	r18, r24
     e7c:	30 e0       	ldi	r19, 0x00	; 0
     e7e:	81 e0       	ldi	r24, 0x01	; 1
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	02 2e       	mov	r0, r18
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <DIO_u8SetPinValue+0x1ec>
     e86:	88 0f       	add	r24, r24
     e88:	99 1f       	adc	r25, r25
     e8a:	0a 94       	dec	r0
     e8c:	e2 f7       	brpl	.-8      	; 0xe86 <DIO_u8SetPinValue+0x1e8>
     e8e:	80 95       	com	r24
     e90:	84 23       	and	r24, r20
     e92:	8c 93       	st	X, r24
     e94:	05 c0       	rjmp	.+10     	; 0xea0 <DIO_u8SetPinValue+0x202>
				break;
				
				default:
				Local_u8ErrorState=1;
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	89 83       	std	Y+1, r24	; 0x01
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <DIO_u8SetPinValue+0x202>
			}
		}
	}
	else //incorrect input
	{
		Local_u8ErrorState=1;
     e9c:	81 e0       	ldi	r24, 0x01	; 1
     e9e:	89 83       	std	Y+1, r24	; 0x01
	}	
	return Local_u8ErrorState;
     ea0:	89 81       	ldd	r24, Y+1	; 0x01
}
     ea2:	28 96       	adiw	r28, 0x08	; 8
     ea4:	0f b6       	in	r0, 0x3f	; 63
     ea6:	f8 94       	cli
     ea8:	de bf       	out	0x3e, r29	; 62
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	cd bf       	out	0x3d, r28	; 61
     eae:	cf 91       	pop	r28
     eb0:	df 91       	pop	r29
     eb2:	08 95       	ret

00000eb4 <DIO_u8SetPortValue>:
/******************************************************************************/
/***********************Setting port value*************************************/
/******************************************************************************/

u8 DIO_u8SetPortValue(u8 Copy_u8Port ,u8 Copy_u8Value)
{
     eb4:	df 93       	push	r29
     eb6:	cf 93       	push	r28
     eb8:	00 d0       	rcall	.+0      	; 0xeba <DIO_u8SetPortValue+0x6>
     eba:	00 d0       	rcall	.+0      	; 0xebc <DIO_u8SetPortValue+0x8>
     ebc:	0f 92       	push	r0
     ebe:	cd b7       	in	r28, 0x3d	; 61
     ec0:	de b7       	in	r29, 0x3e	; 62
     ec2:	8a 83       	std	Y+2, r24	; 0x02
     ec4:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;//error state initially zero
     ec6:	19 82       	std	Y+1, r1	; 0x01
		switch(Copy_u8Port)
     ec8:	8a 81       	ldd	r24, Y+2	; 0x02
     eca:	28 2f       	mov	r18, r24
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	3d 83       	std	Y+5, r19	; 0x05
     ed0:	2c 83       	std	Y+4, r18	; 0x04
     ed2:	8c 81       	ldd	r24, Y+4	; 0x04
     ed4:	9d 81       	ldd	r25, Y+5	; 0x05
     ed6:	81 30       	cpi	r24, 0x01	; 1
     ed8:	91 05       	cpc	r25, r1
     eda:	d1 f0       	breq	.+52     	; 0xf10 <DIO_u8SetPortValue+0x5c>
     edc:	2c 81       	ldd	r18, Y+4	; 0x04
     ede:	3d 81       	ldd	r19, Y+5	; 0x05
     ee0:	22 30       	cpi	r18, 0x02	; 2
     ee2:	31 05       	cpc	r19, r1
     ee4:	2c f4       	brge	.+10     	; 0xef0 <DIO_u8SetPortValue+0x3c>
     ee6:	8c 81       	ldd	r24, Y+4	; 0x04
     ee8:	9d 81       	ldd	r25, Y+5	; 0x05
     eea:	00 97       	sbiw	r24, 0x00	; 0
     eec:	61 f0       	breq	.+24     	; 0xf06 <DIO_u8SetPortValue+0x52>
     eee:	1f c0       	rjmp	.+62     	; 0xf2e <DIO_u8SetPortValue+0x7a>
     ef0:	2c 81       	ldd	r18, Y+4	; 0x04
     ef2:	3d 81       	ldd	r19, Y+5	; 0x05
     ef4:	22 30       	cpi	r18, 0x02	; 2
     ef6:	31 05       	cpc	r19, r1
     ef8:	81 f0       	breq	.+32     	; 0xf1a <DIO_u8SetPortValue+0x66>
     efa:	8c 81       	ldd	r24, Y+4	; 0x04
     efc:	9d 81       	ldd	r25, Y+5	; 0x05
     efe:	83 30       	cpi	r24, 0x03	; 3
     f00:	91 05       	cpc	r25, r1
     f02:	81 f0       	breq	.+32     	; 0xf24 <DIO_u8SetPortValue+0x70>
     f04:	14 c0       	rjmp	.+40     	; 0xf2e <DIO_u8SetPortValue+0x7a>
		{
			case DIO_u8PORTA:
			PORTA_reg=Copy_u8Value;
     f06:	eb e3       	ldi	r30, 0x3B	; 59
     f08:	f0 e0       	ldi	r31, 0x00	; 0
     f0a:	8b 81       	ldd	r24, Y+3	; 0x03
     f0c:	80 83       	st	Z, r24
     f0e:	11 c0       	rjmp	.+34     	; 0xf32 <DIO_u8SetPortValue+0x7e>
			break;
			
			case DIO_u8PORTB:
			PORTB_reg=Copy_u8Value;
     f10:	e8 e3       	ldi	r30, 0x38	; 56
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	8b 81       	ldd	r24, Y+3	; 0x03
     f16:	80 83       	st	Z, r24
     f18:	0c c0       	rjmp	.+24     	; 0xf32 <DIO_u8SetPortValue+0x7e>
			break;
			
			case DIO_u8PORTC:
			PORTC_reg=Copy_u8Value;
     f1a:	e5 e3       	ldi	r30, 0x35	; 53
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	8b 81       	ldd	r24, Y+3	; 0x03
     f20:	80 83       	st	Z, r24
     f22:	07 c0       	rjmp	.+14     	; 0xf32 <DIO_u8SetPortValue+0x7e>
			break;
			
			case DIO_u8PORTD:
			PORTD_reg=Copy_u8Value;
     f24:	e2 e3       	ldi	r30, 0x32	; 50
     f26:	f0 e0       	ldi	r31, 0x00	; 0
     f28:	8b 81       	ldd	r24, Y+3	; 0x03
     f2a:	80 83       	st	Z, r24
     f2c:	02 c0       	rjmp	.+4      	; 0xf32 <DIO_u8SetPortValue+0x7e>
			break;
			
			default:
			Local_u8ErrorState=1;
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	89 83       	std	Y+1, r24	; 0x01
			break;
		}
	return Local_u8ErrorState;//incorrect input
     f32:	89 81       	ldd	r24, Y+1	; 0x01
}
     f34:	0f 90       	pop	r0
     f36:	0f 90       	pop	r0
     f38:	0f 90       	pop	r0
     f3a:	0f 90       	pop	r0
     f3c:	0f 90       	pop	r0
     f3e:	cf 91       	pop	r28
     f40:	df 91       	pop	r29
     f42:	08 95       	ret

00000f44 <DIO_u8GetPinValue>:
/******************************************************************************/
/***********************Getting PIN value**************************************/
/******************************************************************************/

u8 DIO_u8GetPinValue(u8 Copy_u8Port ,u8 Copy_u8Pin,u8* Copy_pu8Value)
{
     f44:	df 93       	push	r29
     f46:	cf 93       	push	r28
     f48:	cd b7       	in	r28, 0x3d	; 61
     f4a:	de b7       	in	r29, 0x3e	; 62
     f4c:	27 97       	sbiw	r28, 0x07	; 7
     f4e:	0f b6       	in	r0, 0x3f	; 63
     f50:	f8 94       	cli
     f52:	de bf       	out	0x3e, r29	; 62
     f54:	0f be       	out	0x3f, r0	; 63
     f56:	cd bf       	out	0x3d, r28	; 61
     f58:	8a 83       	std	Y+2, r24	; 0x02
     f5a:	6b 83       	std	Y+3, r22	; 0x03
     f5c:	5d 83       	std	Y+5, r21	; 0x05
     f5e:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;//error state initially zero
     f60:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_pu8Value!=NULL)&&Copy_u8Pin<=DIO_u8PIN_7)//check if ptr not null and correct input pin
     f62:	8c 81       	ldd	r24, Y+4	; 0x04
     f64:	9d 81       	ldd	r25, Y+5	; 0x05
     f66:	00 97       	sbiw	r24, 0x00	; 0
     f68:	09 f4       	brne	.+2      	; 0xf6c <DIO_u8GetPinValue+0x28>
     f6a:	78 c0       	rjmp	.+240    	; 0x105c <DIO_u8GetPinValue+0x118>
     f6c:	8b 81       	ldd	r24, Y+3	; 0x03
     f6e:	88 30       	cpi	r24, 0x08	; 8
     f70:	08 f0       	brcs	.+2      	; 0xf74 <DIO_u8GetPinValue+0x30>
     f72:	74 c0       	rjmp	.+232    	; 0x105c <DIO_u8GetPinValue+0x118>
	{
		switch(Copy_u8Port)
     f74:	8a 81       	ldd	r24, Y+2	; 0x02
     f76:	28 2f       	mov	r18, r24
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	3f 83       	std	Y+7, r19	; 0x07
     f7c:	2e 83       	std	Y+6, r18	; 0x06
     f7e:	4e 81       	ldd	r20, Y+6	; 0x06
     f80:	5f 81       	ldd	r21, Y+7	; 0x07
     f82:	41 30       	cpi	r20, 0x01	; 1
     f84:	51 05       	cpc	r21, r1
     f86:	59 f1       	breq	.+86     	; 0xfde <DIO_u8GetPinValue+0x9a>
     f88:	8e 81       	ldd	r24, Y+6	; 0x06
     f8a:	9f 81       	ldd	r25, Y+7	; 0x07
     f8c:	82 30       	cpi	r24, 0x02	; 2
     f8e:	91 05       	cpc	r25, r1
     f90:	34 f4       	brge	.+12     	; 0xf9e <DIO_u8GetPinValue+0x5a>
     f92:	2e 81       	ldd	r18, Y+6	; 0x06
     f94:	3f 81       	ldd	r19, Y+7	; 0x07
     f96:	21 15       	cp	r18, r1
     f98:	31 05       	cpc	r19, r1
     f9a:	69 f0       	breq	.+26     	; 0xfb6 <DIO_u8GetPinValue+0x72>
     f9c:	5c c0       	rjmp	.+184    	; 0x1056 <DIO_u8GetPinValue+0x112>
     f9e:	4e 81       	ldd	r20, Y+6	; 0x06
     fa0:	5f 81       	ldd	r21, Y+7	; 0x07
     fa2:	42 30       	cpi	r20, 0x02	; 2
     fa4:	51 05       	cpc	r21, r1
     fa6:	79 f1       	breq	.+94     	; 0x1006 <DIO_u8GetPinValue+0xc2>
     fa8:	8e 81       	ldd	r24, Y+6	; 0x06
     faa:	9f 81       	ldd	r25, Y+7	; 0x07
     fac:	83 30       	cpi	r24, 0x03	; 3
     fae:	91 05       	cpc	r25, r1
     fb0:	09 f4       	brne	.+2      	; 0xfb4 <DIO_u8GetPinValue+0x70>
     fb2:	3d c0       	rjmp	.+122    	; 0x102e <DIO_u8GetPinValue+0xea>
     fb4:	50 c0       	rjmp	.+160    	; 0x1056 <DIO_u8GetPinValue+0x112>
		{
			case DIO_u8PORTA:
			*Copy_pu8Value=GET_BIT(PINA_reg,Copy_u8Pin);
     fb6:	e9 e3       	ldi	r30, 0x39	; 57
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	80 81       	ld	r24, Z
     fbc:	28 2f       	mov	r18, r24
     fbe:	30 e0       	ldi	r19, 0x00	; 0
     fc0:	8b 81       	ldd	r24, Y+3	; 0x03
     fc2:	88 2f       	mov	r24, r24
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	a9 01       	movw	r20, r18
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <DIO_u8GetPinValue+0x8a>
     fca:	55 95       	asr	r21
     fcc:	47 95       	ror	r20
     fce:	8a 95       	dec	r24
     fd0:	e2 f7       	brpl	.-8      	; 0xfca <DIO_u8GetPinValue+0x86>
     fd2:	ca 01       	movw	r24, r20
     fd4:	81 70       	andi	r24, 0x01	; 1
     fd6:	ec 81       	ldd	r30, Y+4	; 0x04
     fd8:	fd 81       	ldd	r31, Y+5	; 0x05
     fda:	80 83       	st	Z, r24
     fdc:	41 c0       	rjmp	.+130    	; 0x1060 <DIO_u8GetPinValue+0x11c>
			break;
			
			case DIO_u8PORTB:
			*Copy_pu8Value=GET_BIT(PINB_reg,Copy_u8Pin);
     fde:	e6 e3       	ldi	r30, 0x36	; 54
     fe0:	f0 e0       	ldi	r31, 0x00	; 0
     fe2:	80 81       	ld	r24, Z
     fe4:	28 2f       	mov	r18, r24
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	8b 81       	ldd	r24, Y+3	; 0x03
     fea:	88 2f       	mov	r24, r24
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	a9 01       	movw	r20, r18
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <DIO_u8GetPinValue+0xb2>
     ff2:	55 95       	asr	r21
     ff4:	47 95       	ror	r20
     ff6:	8a 95       	dec	r24
     ff8:	e2 f7       	brpl	.-8      	; 0xff2 <DIO_u8GetPinValue+0xae>
     ffa:	ca 01       	movw	r24, r20
     ffc:	81 70       	andi	r24, 0x01	; 1
     ffe:	ec 81       	ldd	r30, Y+4	; 0x04
    1000:	fd 81       	ldd	r31, Y+5	; 0x05
    1002:	80 83       	st	Z, r24
    1004:	2d c0       	rjmp	.+90     	; 0x1060 <DIO_u8GetPinValue+0x11c>
			break;
			
			case DIO_u8PORTC:
			*Copy_pu8Value=GET_BIT(PINC_reg,Copy_u8Pin);
    1006:	e3 e3       	ldi	r30, 0x33	; 51
    1008:	f0 e0       	ldi	r31, 0x00	; 0
    100a:	80 81       	ld	r24, Z
    100c:	28 2f       	mov	r18, r24
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	8b 81       	ldd	r24, Y+3	; 0x03
    1012:	88 2f       	mov	r24, r24
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	a9 01       	movw	r20, r18
    1018:	02 c0       	rjmp	.+4      	; 0x101e <DIO_u8GetPinValue+0xda>
    101a:	55 95       	asr	r21
    101c:	47 95       	ror	r20
    101e:	8a 95       	dec	r24
    1020:	e2 f7       	brpl	.-8      	; 0x101a <DIO_u8GetPinValue+0xd6>
    1022:	ca 01       	movw	r24, r20
    1024:	81 70       	andi	r24, 0x01	; 1
    1026:	ec 81       	ldd	r30, Y+4	; 0x04
    1028:	fd 81       	ldd	r31, Y+5	; 0x05
    102a:	80 83       	st	Z, r24
    102c:	19 c0       	rjmp	.+50     	; 0x1060 <DIO_u8GetPinValue+0x11c>
			break;
			
			case DIO_u8PORTD:
			*Copy_pu8Value=GET_BIT(PIND_reg,Copy_u8Pin);
    102e:	e0 e3       	ldi	r30, 0x30	; 48
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	80 81       	ld	r24, Z
    1034:	28 2f       	mov	r18, r24
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	8b 81       	ldd	r24, Y+3	; 0x03
    103a:	88 2f       	mov	r24, r24
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	a9 01       	movw	r20, r18
    1040:	02 c0       	rjmp	.+4      	; 0x1046 <DIO_u8GetPinValue+0x102>
    1042:	55 95       	asr	r21
    1044:	47 95       	ror	r20
    1046:	8a 95       	dec	r24
    1048:	e2 f7       	brpl	.-8      	; 0x1042 <DIO_u8GetPinValue+0xfe>
    104a:	ca 01       	movw	r24, r20
    104c:	81 70       	andi	r24, 0x01	; 1
    104e:	ec 81       	ldd	r30, Y+4	; 0x04
    1050:	fd 81       	ldd	r31, Y+5	; 0x05
    1052:	80 83       	st	Z, r24
    1054:	05 c0       	rjmp	.+10     	; 0x1060 <DIO_u8GetPinValue+0x11c>
			break;
			
			default:
			Local_u8ErrorState=1;
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	89 83       	std	Y+1, r24	; 0x01
    105a:	02 c0       	rjmp	.+4      	; 0x1060 <DIO_u8GetPinValue+0x11c>
			break;
		}
	}
	else
	{
		Local_u8ErrorState=1;
    105c:	81 e0       	ldi	r24, 0x01	; 1
    105e:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    1060:	89 81       	ldd	r24, Y+1	; 0x01
}
    1062:	27 96       	adiw	r28, 0x07	; 7
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	f8 94       	cli
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	cd bf       	out	0x3d, r28	; 61
    106e:	cf 91       	pop	r28
    1070:	df 91       	pop	r29
    1072:	08 95       	ret

00001074 <DIO_u8GetPortValue>:
/*not tested*/
u8 DIO_u8GetPortValue(u8 Copy_u8Port ,u8* Copy_pu8Value)//get value of entire port
{
    1074:	df 93       	push	r29
    1076:	cf 93       	push	r28
    1078:	00 d0       	rcall	.+0      	; 0x107a <DIO_u8GetPortValue+0x6>
    107a:	00 d0       	rcall	.+0      	; 0x107c <DIO_u8GetPortValue+0x8>
    107c:	00 d0       	rcall	.+0      	; 0x107e <DIO_u8GetPortValue+0xa>
    107e:	cd b7       	in	r28, 0x3d	; 61
    1080:	de b7       	in	r29, 0x3e	; 62
    1082:	8a 83       	std	Y+2, r24	; 0x02
    1084:	7c 83       	std	Y+4, r23	; 0x04
    1086:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
    1088:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    108a:	8a 81       	ldd	r24, Y+2	; 0x02
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	3e 83       	std	Y+6, r19	; 0x06
    1092:	2d 83       	std	Y+5, r18	; 0x05
    1094:	8d 81       	ldd	r24, Y+5	; 0x05
    1096:	9e 81       	ldd	r25, Y+6	; 0x06
    1098:	81 30       	cpi	r24, 0x01	; 1
    109a:	91 05       	cpc	r25, r1
    109c:	e1 f0       	breq	.+56     	; 0x10d6 <DIO_u8GetPortValue+0x62>
    109e:	2d 81       	ldd	r18, Y+5	; 0x05
    10a0:	3e 81       	ldd	r19, Y+6	; 0x06
    10a2:	22 30       	cpi	r18, 0x02	; 2
    10a4:	31 05       	cpc	r19, r1
    10a6:	2c f4       	brge	.+10     	; 0x10b2 <DIO_u8GetPortValue+0x3e>
    10a8:	8d 81       	ldd	r24, Y+5	; 0x05
    10aa:	9e 81       	ldd	r25, Y+6	; 0x06
    10ac:	00 97       	sbiw	r24, 0x00	; 0
    10ae:	61 f0       	breq	.+24     	; 0x10c8 <DIO_u8GetPortValue+0x54>
    10b0:	27 c0       	rjmp	.+78     	; 0x1100 <DIO_u8GetPortValue+0x8c>
    10b2:	2d 81       	ldd	r18, Y+5	; 0x05
    10b4:	3e 81       	ldd	r19, Y+6	; 0x06
    10b6:	22 30       	cpi	r18, 0x02	; 2
    10b8:	31 05       	cpc	r19, r1
    10ba:	a1 f0       	breq	.+40     	; 0x10e4 <DIO_u8GetPortValue+0x70>
    10bc:	8d 81       	ldd	r24, Y+5	; 0x05
    10be:	9e 81       	ldd	r25, Y+6	; 0x06
    10c0:	83 30       	cpi	r24, 0x03	; 3
    10c2:	91 05       	cpc	r25, r1
    10c4:	b1 f0       	breq	.+44     	; 0x10f2 <DIO_u8GetPortValue+0x7e>
    10c6:	1c c0       	rjmp	.+56     	; 0x1100 <DIO_u8GetPortValue+0x8c>
	{
	case DIO_u8PORTA:
		*Copy_pu8Value=PINA_reg;
    10c8:	e9 e3       	ldi	r30, 0x39	; 57
    10ca:	f0 e0       	ldi	r31, 0x00	; 0
    10cc:	80 81       	ld	r24, Z
    10ce:	eb 81       	ldd	r30, Y+3	; 0x03
    10d0:	fc 81       	ldd	r31, Y+4	; 0x04
    10d2:	80 83       	st	Z, r24
    10d4:	17 c0       	rjmp	.+46     	; 0x1104 <DIO_u8GetPortValue+0x90>
		break;
	case DIO_u8PORTB:
		*Copy_pu8Value=PINB_reg;
    10d6:	e6 e3       	ldi	r30, 0x36	; 54
    10d8:	f0 e0       	ldi	r31, 0x00	; 0
    10da:	80 81       	ld	r24, Z
    10dc:	eb 81       	ldd	r30, Y+3	; 0x03
    10de:	fc 81       	ldd	r31, Y+4	; 0x04
    10e0:	80 83       	st	Z, r24
    10e2:	10 c0       	rjmp	.+32     	; 0x1104 <DIO_u8GetPortValue+0x90>
		break;
	case DIO_u8PORTC:
		*Copy_pu8Value=PINC_reg;
    10e4:	e3 e3       	ldi	r30, 0x33	; 51
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	eb 81       	ldd	r30, Y+3	; 0x03
    10ec:	fc 81       	ldd	r31, Y+4	; 0x04
    10ee:	80 83       	st	Z, r24
    10f0:	09 c0       	rjmp	.+18     	; 0x1104 <DIO_u8GetPortValue+0x90>
		break;
	case DIO_u8PORTD:
		*Copy_pu8Value=PIND_reg;
    10f2:	e0 e3       	ldi	r30, 0x30	; 48
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	80 81       	ld	r24, Z
    10f8:	eb 81       	ldd	r30, Y+3	; 0x03
    10fa:	fc 81       	ldd	r31, Y+4	; 0x04
    10fc:	80 83       	st	Z, r24
    10fe:	02 c0       	rjmp	.+4      	; 0x1104 <DIO_u8GetPortValue+0x90>
		break;
	default:
		Local_u8ErrorState=1;
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    1104:	89 81       	ldd	r24, Y+1	; 0x01
}
    1106:	26 96       	adiw	r28, 0x06	; 6
    1108:	0f b6       	in	r0, 0x3f	; 63
    110a:	f8 94       	cli
    110c:	de bf       	out	0x3e, r29	; 62
    110e:	0f be       	out	0x3f, r0	; 63
    1110:	cd bf       	out	0x3d, r28	; 61
    1112:	cf 91       	pop	r28
    1114:	df 91       	pop	r29
    1116:	08 95       	ret

00001118 <PORT_VoidInit>:
#include"PORT_interface.h"
#include"PORT_config.h"
#include"PORT_private.h"
#include"PORT_register.h"
void PORT_VoidInit()
{
    1118:	df 93       	push	r29
    111a:	cf 93       	push	r28
    111c:	cd b7       	in	r28, 0x3d	; 61
    111e:	de b7       	in	r29, 0x3e	; 62
	DDRA_reg=PORTA_DIR;
    1120:	ea e3       	ldi	r30, 0x3A	; 58
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	80 ef       	ldi	r24, 0xF0	; 240
    1126:	80 83       	st	Z, r24
	DDRB_reg=PORTB_DIR;
    1128:	e7 e3       	ldi	r30, 0x37	; 55
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	8f e0       	ldi	r24, 0x0F	; 15
    112e:	80 83       	st	Z, r24
	DDRC_reg=PORTC_DIR;
    1130:	e4 e3       	ldi	r30, 0x34	; 52
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	8f ef       	ldi	r24, 0xFF	; 255
    1136:	80 83       	st	Z, r24
	DDRD_reg=PORTD_DIR;
    1138:	e1 e3       	ldi	r30, 0x31	; 49
    113a:	f0 e0       	ldi	r31, 0x00	; 0
    113c:	8f ef       	ldi	r24, 0xFF	; 255
    113e:	80 83       	st	Z, r24
	
	PORTA_reg=PORTA_InitValue;
    1140:	eb e3       	ldi	r30, 0x3B	; 59
    1142:	f0 e0       	ldi	r31, 0x00	; 0
    1144:	8f ef       	ldi	r24, 0xFF	; 255
    1146:	80 83       	st	Z, r24
    PORTB_reg=PORTB_InitValue;
    1148:	e8 e3       	ldi	r30, 0x38	; 56
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	10 82       	st	Z, r1
    PORTC_reg=PORTC_InitValue;
    114e:	e5 e3       	ldi	r30, 0x35	; 53
    1150:	f0 e0       	ldi	r31, 0x00	; 0
    1152:	10 82       	st	Z, r1
    PORTD_reg=PORTD_InitValue;
    1154:	e2 e3       	ldi	r30, 0x32	; 50
    1156:	f0 e0       	ldi	r31, 0x00	; 0
    1158:	10 82       	st	Z, r1
}
    115a:	cf 91       	pop	r28
    115c:	df 91       	pop	r29
    115e:	08 95       	ret

00001160 <STEPPER_VoidRotate>:
//speed variation ratio 1/64  meaning we have 2 gears in the stepper smallone that we drive and big one that the small one drives if 
//small gear takes  0.175*64 to make full step in the large gear which is equivalent to 0.175degree in the large gear 

static u8 STEPPER_u8CoilIndex=0;
void STEPPER_VoidRotate(u8 STEPPER_u8RotationDirection,f32 STEPPER_u8Angle)
{
    1160:	0f 93       	push	r16
    1162:	1f 93       	push	r17
    1164:	df 93       	push	r29
    1166:	cf 93       	push	r28
    1168:	cd b7       	in	r28, 0x3d	; 61
    116a:	de b7       	in	r29, 0x3e	; 62
    116c:	cb 57       	subi	r28, 0x7B	; 123
    116e:	d0 40       	sbci	r29, 0x00	; 0
    1170:	0f b6       	in	r0, 0x3f	; 63
    1172:	f8 94       	cli
    1174:	de bf       	out	0x3e, r29	; 62
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	cd bf       	out	0x3d, r28	; 61
    117a:	fe 01       	movw	r30, r28
    117c:	e9 58       	subi	r30, 0x89	; 137
    117e:	ff 4f       	sbci	r31, 0xFF	; 255
    1180:	80 83       	st	Z, r24
    1182:	fe 01       	movw	r30, r28
    1184:	e8 58       	subi	r30, 0x88	; 136
    1186:	ff 4f       	sbci	r31, 0xFF	; 255
    1188:	40 83       	st	Z, r20
    118a:	51 83       	std	Z+1, r21	; 0x01
    118c:	62 83       	std	Z+2, r22	; 0x02
    118e:	73 83       	std	Z+3, r23	; 0x03
	u16 Local_u16StepperSteps=STEPPER_u8Angle/STEPPER_STEP;
    1190:	fe 01       	movw	r30, r28
    1192:	e8 58       	subi	r30, 0x88	; 136
    1194:	ff 4f       	sbci	r31, 0xFF	; 255
    1196:	60 81       	ld	r22, Z
    1198:	71 81       	ldd	r23, Z+1	; 0x01
    119a:	82 81       	ldd	r24, Z+2	; 0x02
    119c:	93 81       	ldd	r25, Z+3	; 0x03
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	44 eb       	ldi	r20, 0xB4	; 180
    11a4:	50 e4       	ldi	r21, 0x40	; 64
    11a6:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    11aa:	dc 01       	movw	r26, r24
    11ac:	cb 01       	movw	r24, r22
    11ae:	bc 01       	movw	r22, r24
    11b0:	cd 01       	movw	r24, r26
    11b2:	20 e0       	ldi	r18, 0x00	; 0
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	40 e0       	ldi	r20, 0x00	; 0
    11b8:	52 e4       	ldi	r21, 0x42	; 66
    11ba:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    11be:	dc 01       	movw	r26, r24
    11c0:	cb 01       	movw	r24, r22
    11c2:	8e 01       	movw	r16, r28
    11c4:	0b 58       	subi	r16, 0x8B	; 139
    11c6:	1f 4f       	sbci	r17, 0xFF	; 255
    11c8:	bc 01       	movw	r22, r24
    11ca:	cd 01       	movw	r24, r26
    11cc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11d0:	dc 01       	movw	r26, r24
    11d2:	cb 01       	movw	r24, r22
    11d4:	f8 01       	movw	r30, r16
    11d6:	91 83       	std	Z+1, r25	; 0x01
    11d8:	80 83       	st	Z, r24
	if(STEPPER_u8RotationDirection==STEPPER_CW)
    11da:	fe 01       	movw	r30, r28
    11dc:	e9 58       	subi	r30, 0x89	; 137
    11de:	ff 4f       	sbci	r31, 0xFF	; 255
    11e0:	80 81       	ld	r24, Z
    11e2:	88 23       	and	r24, r24
    11e4:	09 f0       	breq	.+2      	; 0x11e8 <STEPPER_VoidRotate+0x88>
    11e6:	36 c3       	rjmp	.+1644   	; 0x1854 <STEPPER_VoidRotate+0x6f4>
	{
		for(u16 Local_u16Iterator=1;Local_u16Iterator<=Local_u16StepperSteps;Local_u16Iterator++)
    11e8:	fe 01       	movw	r30, r28
    11ea:	ed 58       	subi	r30, 0x8D	; 141
    11ec:	ff 4f       	sbci	r31, 0xFF	; 255
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	91 83       	std	Z+1, r25	; 0x01
    11f4:	80 83       	st	Z, r24
    11f6:	1e c3       	rjmp	.+1596   	; 0x1834 <STEPPER_VoidRotate+0x6d4>
		{	if(STEPPER_u8CoilIndex==0)
    11f8:	80 91 68 00 	lds	r24, 0x0068
    11fc:	88 23       	and	r24, r24
    11fe:	09 f0       	breq	.+2      	; 0x1202 <STEPPER_VoidRotate+0xa2>
    1200:	cc c0       	rjmp	.+408    	; 0x139a <STEPPER_VoidRotate+0x23a>
			{
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_u8LOW);
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	40 e0       	ldi	r20, 0x00	; 0
    1208:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_u8HIGH);
    120c:	81 e0       	ldi	r24, 0x01	; 1
    120e:	61 e0       	ldi	r22, 0x01	; 1
    1210:	41 e0       	ldi	r20, 0x01	; 1
    1212:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_u8HIGH);
    1216:	81 e0       	ldi	r24, 0x01	; 1
    1218:	63 e0       	ldi	r22, 0x03	; 3
    121a:	41 e0       	ldi	r20, 0x01	; 1
    121c:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_u8HIGH);
    1220:	81 e0       	ldi	r24, 0x01	; 1
    1222:	62 e0       	ldi	r22, 0x02	; 2
    1224:	41 e0       	ldi	r20, 0x01	; 1
    1226:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				STEPPER_u8CoilIndex=1;
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	80 93 68 00 	sts	0x0068, r24
    1230:	fe 01       	movw	r30, r28
    1232:	e3 59       	subi	r30, 0x93	; 147
    1234:	ff 4f       	sbci	r31, 0xFF	; 255
    1236:	80 e0       	ldi	r24, 0x00	; 0
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	a0 e0       	ldi	r26, 0x00	; 0
    123c:	b0 e4       	ldi	r27, 0x40	; 64
    123e:	80 83       	st	Z, r24
    1240:	91 83       	std	Z+1, r25	; 0x01
    1242:	a2 83       	std	Z+2, r26	; 0x02
    1244:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1246:	8e 01       	movw	r16, r28
    1248:	07 59       	subi	r16, 0x97	; 151
    124a:	1f 4f       	sbci	r17, 0xFF	; 255
    124c:	fe 01       	movw	r30, r28
    124e:	e3 59       	subi	r30, 0x93	; 147
    1250:	ff 4f       	sbci	r31, 0xFF	; 255
    1252:	60 81       	ld	r22, Z
    1254:	71 81       	ldd	r23, Z+1	; 0x01
    1256:	82 81       	ldd	r24, Z+2	; 0x02
    1258:	93 81       	ldd	r25, Z+3	; 0x03
    125a:	20 e0       	ldi	r18, 0x00	; 0
    125c:	30 e8       	ldi	r19, 0x80	; 128
    125e:	4b e3       	ldi	r20, 0x3B	; 59
    1260:	55 e4       	ldi	r21, 0x45	; 69
    1262:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1266:	dc 01       	movw	r26, r24
    1268:	cb 01       	movw	r24, r22
    126a:	f8 01       	movw	r30, r16
    126c:	80 83       	st	Z, r24
    126e:	91 83       	std	Z+1, r25	; 0x01
    1270:	a2 83       	std	Z+2, r26	; 0x02
    1272:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1274:	fe 01       	movw	r30, r28
    1276:	e7 59       	subi	r30, 0x97	; 151
    1278:	ff 4f       	sbci	r31, 0xFF	; 255
    127a:	60 81       	ld	r22, Z
    127c:	71 81       	ldd	r23, Z+1	; 0x01
    127e:	82 81       	ldd	r24, Z+2	; 0x02
    1280:	93 81       	ldd	r25, Z+3	; 0x03
    1282:	20 e0       	ldi	r18, 0x00	; 0
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	40 e8       	ldi	r20, 0x80	; 128
    1288:	5f e3       	ldi	r21, 0x3F	; 63
    128a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    128e:	88 23       	and	r24, r24
    1290:	44 f4       	brge	.+16     	; 0x12a2 <STEPPER_VoidRotate+0x142>
		__ticks = 1;
    1292:	fe 01       	movw	r30, r28
    1294:	e9 59       	subi	r30, 0x99	; 153
    1296:	ff 4f       	sbci	r31, 0xFF	; 255
    1298:	81 e0       	ldi	r24, 0x01	; 1
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	91 83       	std	Z+1, r25	; 0x01
    129e:	80 83       	st	Z, r24
    12a0:	64 c0       	rjmp	.+200    	; 0x136a <STEPPER_VoidRotate+0x20a>
	else if (__tmp > 65535)
    12a2:	fe 01       	movw	r30, r28
    12a4:	e7 59       	subi	r30, 0x97	; 151
    12a6:	ff 4f       	sbci	r31, 0xFF	; 255
    12a8:	60 81       	ld	r22, Z
    12aa:	71 81       	ldd	r23, Z+1	; 0x01
    12ac:	82 81       	ldd	r24, Z+2	; 0x02
    12ae:	93 81       	ldd	r25, Z+3	; 0x03
    12b0:	20 e0       	ldi	r18, 0x00	; 0
    12b2:	3f ef       	ldi	r19, 0xFF	; 255
    12b4:	4f e7       	ldi	r20, 0x7F	; 127
    12b6:	57 e4       	ldi	r21, 0x47	; 71
    12b8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    12bc:	18 16       	cp	r1, r24
    12be:	0c f0       	brlt	.+2      	; 0x12c2 <STEPPER_VoidRotate+0x162>
    12c0:	43 c0       	rjmp	.+134    	; 0x1348 <STEPPER_VoidRotate+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12c2:	fe 01       	movw	r30, r28
    12c4:	e3 59       	subi	r30, 0x93	; 147
    12c6:	ff 4f       	sbci	r31, 0xFF	; 255
    12c8:	60 81       	ld	r22, Z
    12ca:	71 81       	ldd	r23, Z+1	; 0x01
    12cc:	82 81       	ldd	r24, Z+2	; 0x02
    12ce:	93 81       	ldd	r25, Z+3	; 0x03
    12d0:	20 e0       	ldi	r18, 0x00	; 0
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	40 e2       	ldi	r20, 0x20	; 32
    12d6:	51 e4       	ldi	r21, 0x41	; 65
    12d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12dc:	dc 01       	movw	r26, r24
    12de:	cb 01       	movw	r24, r22
    12e0:	8e 01       	movw	r16, r28
    12e2:	09 59       	subi	r16, 0x99	; 153
    12e4:	1f 4f       	sbci	r17, 0xFF	; 255
    12e6:	bc 01       	movw	r22, r24
    12e8:	cd 01       	movw	r24, r26
    12ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    12ee:	dc 01       	movw	r26, r24
    12f0:	cb 01       	movw	r24, r22
    12f2:	f8 01       	movw	r30, r16
    12f4:	91 83       	std	Z+1, r25	; 0x01
    12f6:	80 83       	st	Z, r24
    12f8:	1f c0       	rjmp	.+62     	; 0x1338 <STEPPER_VoidRotate+0x1d8>
    12fa:	fe 01       	movw	r30, r28
    12fc:	eb 59       	subi	r30, 0x9B	; 155
    12fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1300:	8c e2       	ldi	r24, 0x2C	; 44
    1302:	91 e0       	ldi	r25, 0x01	; 1
    1304:	91 83       	std	Z+1, r25	; 0x01
    1306:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1308:	fe 01       	movw	r30, r28
    130a:	eb 59       	subi	r30, 0x9B	; 155
    130c:	ff 4f       	sbci	r31, 0xFF	; 255
    130e:	80 81       	ld	r24, Z
    1310:	91 81       	ldd	r25, Z+1	; 0x01
    1312:	01 97       	sbiw	r24, 0x01	; 1
    1314:	f1 f7       	brne	.-4      	; 0x1312 <STEPPER_VoidRotate+0x1b2>
    1316:	fe 01       	movw	r30, r28
    1318:	eb 59       	subi	r30, 0x9B	; 155
    131a:	ff 4f       	sbci	r31, 0xFF	; 255
    131c:	91 83       	std	Z+1, r25	; 0x01
    131e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1320:	de 01       	movw	r26, r28
    1322:	a9 59       	subi	r26, 0x99	; 153
    1324:	bf 4f       	sbci	r27, 0xFF	; 255
    1326:	fe 01       	movw	r30, r28
    1328:	e9 59       	subi	r30, 0x99	; 153
    132a:	ff 4f       	sbci	r31, 0xFF	; 255
    132c:	80 81       	ld	r24, Z
    132e:	91 81       	ldd	r25, Z+1	; 0x01
    1330:	01 97       	sbiw	r24, 0x01	; 1
    1332:	11 96       	adiw	r26, 0x01	; 1
    1334:	9c 93       	st	X, r25
    1336:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1338:	fe 01       	movw	r30, r28
    133a:	e9 59       	subi	r30, 0x99	; 153
    133c:	ff 4f       	sbci	r31, 0xFF	; 255
    133e:	80 81       	ld	r24, Z
    1340:	91 81       	ldd	r25, Z+1	; 0x01
    1342:	00 97       	sbiw	r24, 0x00	; 0
    1344:	d1 f6       	brne	.-76     	; 0x12fa <STEPPER_VoidRotate+0x19a>
    1346:	6b c2       	rjmp	.+1238   	; 0x181e <STEPPER_VoidRotate+0x6be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1348:	8e 01       	movw	r16, r28
    134a:	09 59       	subi	r16, 0x99	; 153
    134c:	1f 4f       	sbci	r17, 0xFF	; 255
    134e:	fe 01       	movw	r30, r28
    1350:	e7 59       	subi	r30, 0x97	; 151
    1352:	ff 4f       	sbci	r31, 0xFF	; 255
    1354:	60 81       	ld	r22, Z
    1356:	71 81       	ldd	r23, Z+1	; 0x01
    1358:	82 81       	ldd	r24, Z+2	; 0x02
    135a:	93 81       	ldd	r25, Z+3	; 0x03
    135c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1360:	dc 01       	movw	r26, r24
    1362:	cb 01       	movw	r24, r22
    1364:	f8 01       	movw	r30, r16
    1366:	91 83       	std	Z+1, r25	; 0x01
    1368:	80 83       	st	Z, r24
    136a:	de 01       	movw	r26, r28
    136c:	ad 59       	subi	r26, 0x9D	; 157
    136e:	bf 4f       	sbci	r27, 0xFF	; 255
    1370:	fe 01       	movw	r30, r28
    1372:	e9 59       	subi	r30, 0x99	; 153
    1374:	ff 4f       	sbci	r31, 0xFF	; 255
    1376:	80 81       	ld	r24, Z
    1378:	91 81       	ldd	r25, Z+1	; 0x01
    137a:	11 96       	adiw	r26, 0x01	; 1
    137c:	9c 93       	st	X, r25
    137e:	8e 93       	st	-X, r24
    1380:	fe 01       	movw	r30, r28
    1382:	ed 59       	subi	r30, 0x9D	; 157
    1384:	ff 4f       	sbci	r31, 0xFF	; 255
    1386:	80 81       	ld	r24, Z
    1388:	91 81       	ldd	r25, Z+1	; 0x01
    138a:	01 97       	sbiw	r24, 0x01	; 1
    138c:	f1 f7       	brne	.-4      	; 0x138a <STEPPER_VoidRotate+0x22a>
    138e:	fe 01       	movw	r30, r28
    1390:	ed 59       	subi	r30, 0x9D	; 157
    1392:	ff 4f       	sbci	r31, 0xFF	; 255
    1394:	91 83       	std	Z+1, r25	; 0x01
    1396:	80 83       	st	Z, r24
    1398:	42 c2       	rjmp	.+1156   	; 0x181e <STEPPER_VoidRotate+0x6be>
				_delay_ms(2);
			}
			else if(STEPPER_u8CoilIndex==1)
    139a:	80 91 68 00 	lds	r24, 0x0068
    139e:	81 30       	cpi	r24, 0x01	; 1
    13a0:	09 f0       	breq	.+2      	; 0x13a4 <STEPPER_VoidRotate+0x244>
    13a2:	cc c0       	rjmp	.+408    	; 0x153c <STEPPER_VoidRotate+0x3dc>
			{
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_u8HIGH);
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	60 e0       	ldi	r22, 0x00	; 0
    13a8:	41 e0       	ldi	r20, 0x01	; 1
    13aa:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_u8LOW);
    13ae:	81 e0       	ldi	r24, 0x01	; 1
    13b0:	61 e0       	ldi	r22, 0x01	; 1
    13b2:	40 e0       	ldi	r20, 0x00	; 0
    13b4:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_u8HIGH);
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	63 e0       	ldi	r22, 0x03	; 3
    13bc:	41 e0       	ldi	r20, 0x01	; 1
    13be:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_u8HIGH);
    13c2:	81 e0       	ldi	r24, 0x01	; 1
    13c4:	62 e0       	ldi	r22, 0x02	; 2
    13c6:	41 e0       	ldi	r20, 0x01	; 1
    13c8:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				STEPPER_u8CoilIndex=2;
    13cc:	82 e0       	ldi	r24, 0x02	; 2
    13ce:	80 93 68 00 	sts	0x0068, r24
    13d2:	fe 01       	movw	r30, r28
    13d4:	e1 5a       	subi	r30, 0xA1	; 161
    13d6:	ff 4f       	sbci	r31, 0xFF	; 255
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	a0 e0       	ldi	r26, 0x00	; 0
    13de:	b0 e4       	ldi	r27, 0x40	; 64
    13e0:	80 83       	st	Z, r24
    13e2:	91 83       	std	Z+1, r25	; 0x01
    13e4:	a2 83       	std	Z+2, r26	; 0x02
    13e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13e8:	8e 01       	movw	r16, r28
    13ea:	05 5a       	subi	r16, 0xA5	; 165
    13ec:	1f 4f       	sbci	r17, 0xFF	; 255
    13ee:	fe 01       	movw	r30, r28
    13f0:	e1 5a       	subi	r30, 0xA1	; 161
    13f2:	ff 4f       	sbci	r31, 0xFF	; 255
    13f4:	60 81       	ld	r22, Z
    13f6:	71 81       	ldd	r23, Z+1	; 0x01
    13f8:	82 81       	ldd	r24, Z+2	; 0x02
    13fa:	93 81       	ldd	r25, Z+3	; 0x03
    13fc:	20 e0       	ldi	r18, 0x00	; 0
    13fe:	30 e8       	ldi	r19, 0x80	; 128
    1400:	4b e3       	ldi	r20, 0x3B	; 59
    1402:	55 e4       	ldi	r21, 0x45	; 69
    1404:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1408:	dc 01       	movw	r26, r24
    140a:	cb 01       	movw	r24, r22
    140c:	f8 01       	movw	r30, r16
    140e:	80 83       	st	Z, r24
    1410:	91 83       	std	Z+1, r25	; 0x01
    1412:	a2 83       	std	Z+2, r26	; 0x02
    1414:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1416:	fe 01       	movw	r30, r28
    1418:	e5 5a       	subi	r30, 0xA5	; 165
    141a:	ff 4f       	sbci	r31, 0xFF	; 255
    141c:	60 81       	ld	r22, Z
    141e:	71 81       	ldd	r23, Z+1	; 0x01
    1420:	82 81       	ldd	r24, Z+2	; 0x02
    1422:	93 81       	ldd	r25, Z+3	; 0x03
    1424:	20 e0       	ldi	r18, 0x00	; 0
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	40 e8       	ldi	r20, 0x80	; 128
    142a:	5f e3       	ldi	r21, 0x3F	; 63
    142c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1430:	88 23       	and	r24, r24
    1432:	44 f4       	brge	.+16     	; 0x1444 <STEPPER_VoidRotate+0x2e4>
		__ticks = 1;
    1434:	fe 01       	movw	r30, r28
    1436:	e7 5a       	subi	r30, 0xA7	; 167
    1438:	ff 4f       	sbci	r31, 0xFF	; 255
    143a:	81 e0       	ldi	r24, 0x01	; 1
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	91 83       	std	Z+1, r25	; 0x01
    1440:	80 83       	st	Z, r24
    1442:	64 c0       	rjmp	.+200    	; 0x150c <STEPPER_VoidRotate+0x3ac>
	else if (__tmp > 65535)
    1444:	fe 01       	movw	r30, r28
    1446:	e5 5a       	subi	r30, 0xA5	; 165
    1448:	ff 4f       	sbci	r31, 0xFF	; 255
    144a:	60 81       	ld	r22, Z
    144c:	71 81       	ldd	r23, Z+1	; 0x01
    144e:	82 81       	ldd	r24, Z+2	; 0x02
    1450:	93 81       	ldd	r25, Z+3	; 0x03
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	3f ef       	ldi	r19, 0xFF	; 255
    1456:	4f e7       	ldi	r20, 0x7F	; 127
    1458:	57 e4       	ldi	r21, 0x47	; 71
    145a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    145e:	18 16       	cp	r1, r24
    1460:	0c f0       	brlt	.+2      	; 0x1464 <STEPPER_VoidRotate+0x304>
    1462:	43 c0       	rjmp	.+134    	; 0x14ea <STEPPER_VoidRotate+0x38a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1464:	fe 01       	movw	r30, r28
    1466:	e1 5a       	subi	r30, 0xA1	; 161
    1468:	ff 4f       	sbci	r31, 0xFF	; 255
    146a:	60 81       	ld	r22, Z
    146c:	71 81       	ldd	r23, Z+1	; 0x01
    146e:	82 81       	ldd	r24, Z+2	; 0x02
    1470:	93 81       	ldd	r25, Z+3	; 0x03
    1472:	20 e0       	ldi	r18, 0x00	; 0
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	40 e2       	ldi	r20, 0x20	; 32
    1478:	51 e4       	ldi	r21, 0x41	; 65
    147a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    147e:	dc 01       	movw	r26, r24
    1480:	cb 01       	movw	r24, r22
    1482:	8e 01       	movw	r16, r28
    1484:	07 5a       	subi	r16, 0xA7	; 167
    1486:	1f 4f       	sbci	r17, 0xFF	; 255
    1488:	bc 01       	movw	r22, r24
    148a:	cd 01       	movw	r24, r26
    148c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1490:	dc 01       	movw	r26, r24
    1492:	cb 01       	movw	r24, r22
    1494:	f8 01       	movw	r30, r16
    1496:	91 83       	std	Z+1, r25	; 0x01
    1498:	80 83       	st	Z, r24
    149a:	1f c0       	rjmp	.+62     	; 0x14da <STEPPER_VoidRotate+0x37a>
    149c:	fe 01       	movw	r30, r28
    149e:	e9 5a       	subi	r30, 0xA9	; 169
    14a0:	ff 4f       	sbci	r31, 0xFF	; 255
    14a2:	8c e2       	ldi	r24, 0x2C	; 44
    14a4:	91 e0       	ldi	r25, 0x01	; 1
    14a6:	91 83       	std	Z+1, r25	; 0x01
    14a8:	80 83       	st	Z, r24
    14aa:	fe 01       	movw	r30, r28
    14ac:	e9 5a       	subi	r30, 0xA9	; 169
    14ae:	ff 4f       	sbci	r31, 0xFF	; 255
    14b0:	80 81       	ld	r24, Z
    14b2:	91 81       	ldd	r25, Z+1	; 0x01
    14b4:	01 97       	sbiw	r24, 0x01	; 1
    14b6:	f1 f7       	brne	.-4      	; 0x14b4 <STEPPER_VoidRotate+0x354>
    14b8:	fe 01       	movw	r30, r28
    14ba:	e9 5a       	subi	r30, 0xA9	; 169
    14bc:	ff 4f       	sbci	r31, 0xFF	; 255
    14be:	91 83       	std	Z+1, r25	; 0x01
    14c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14c2:	de 01       	movw	r26, r28
    14c4:	a7 5a       	subi	r26, 0xA7	; 167
    14c6:	bf 4f       	sbci	r27, 0xFF	; 255
    14c8:	fe 01       	movw	r30, r28
    14ca:	e7 5a       	subi	r30, 0xA7	; 167
    14cc:	ff 4f       	sbci	r31, 0xFF	; 255
    14ce:	80 81       	ld	r24, Z
    14d0:	91 81       	ldd	r25, Z+1	; 0x01
    14d2:	01 97       	sbiw	r24, 0x01	; 1
    14d4:	11 96       	adiw	r26, 0x01	; 1
    14d6:	9c 93       	st	X, r25
    14d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14da:	fe 01       	movw	r30, r28
    14dc:	e7 5a       	subi	r30, 0xA7	; 167
    14de:	ff 4f       	sbci	r31, 0xFF	; 255
    14e0:	80 81       	ld	r24, Z
    14e2:	91 81       	ldd	r25, Z+1	; 0x01
    14e4:	00 97       	sbiw	r24, 0x00	; 0
    14e6:	d1 f6       	brne	.-76     	; 0x149c <STEPPER_VoidRotate+0x33c>
    14e8:	9a c1       	rjmp	.+820    	; 0x181e <STEPPER_VoidRotate+0x6be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14ea:	8e 01       	movw	r16, r28
    14ec:	07 5a       	subi	r16, 0xA7	; 167
    14ee:	1f 4f       	sbci	r17, 0xFF	; 255
    14f0:	fe 01       	movw	r30, r28
    14f2:	e5 5a       	subi	r30, 0xA5	; 165
    14f4:	ff 4f       	sbci	r31, 0xFF	; 255
    14f6:	60 81       	ld	r22, Z
    14f8:	71 81       	ldd	r23, Z+1	; 0x01
    14fa:	82 81       	ldd	r24, Z+2	; 0x02
    14fc:	93 81       	ldd	r25, Z+3	; 0x03
    14fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1502:	dc 01       	movw	r26, r24
    1504:	cb 01       	movw	r24, r22
    1506:	f8 01       	movw	r30, r16
    1508:	91 83       	std	Z+1, r25	; 0x01
    150a:	80 83       	st	Z, r24
    150c:	de 01       	movw	r26, r28
    150e:	ab 5a       	subi	r26, 0xAB	; 171
    1510:	bf 4f       	sbci	r27, 0xFF	; 255
    1512:	fe 01       	movw	r30, r28
    1514:	e7 5a       	subi	r30, 0xA7	; 167
    1516:	ff 4f       	sbci	r31, 0xFF	; 255
    1518:	80 81       	ld	r24, Z
    151a:	91 81       	ldd	r25, Z+1	; 0x01
    151c:	11 96       	adiw	r26, 0x01	; 1
    151e:	9c 93       	st	X, r25
    1520:	8e 93       	st	-X, r24
    1522:	fe 01       	movw	r30, r28
    1524:	eb 5a       	subi	r30, 0xAB	; 171
    1526:	ff 4f       	sbci	r31, 0xFF	; 255
    1528:	80 81       	ld	r24, Z
    152a:	91 81       	ldd	r25, Z+1	; 0x01
    152c:	01 97       	sbiw	r24, 0x01	; 1
    152e:	f1 f7       	brne	.-4      	; 0x152c <STEPPER_VoidRotate+0x3cc>
    1530:	fe 01       	movw	r30, r28
    1532:	eb 5a       	subi	r30, 0xAB	; 171
    1534:	ff 4f       	sbci	r31, 0xFF	; 255
    1536:	91 83       	std	Z+1, r25	; 0x01
    1538:	80 83       	st	Z, r24
    153a:	71 c1       	rjmp	.+738    	; 0x181e <STEPPER_VoidRotate+0x6be>
				_delay_ms(2);
			}
			else if(STEPPER_u8CoilIndex==2)
    153c:	80 91 68 00 	lds	r24, 0x0068
    1540:	82 30       	cpi	r24, 0x02	; 2
    1542:	09 f0       	breq	.+2      	; 0x1546 <STEPPER_VoidRotate+0x3e6>
    1544:	cc c0       	rjmp	.+408    	; 0x16de <STEPPER_VoidRotate+0x57e>
			{
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_u8HIGH);
    1546:	81 e0       	ldi	r24, 0x01	; 1
    1548:	60 e0       	ldi	r22, 0x00	; 0
    154a:	41 e0       	ldi	r20, 0x01	; 1
    154c:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_u8HIGH);
    1550:	81 e0       	ldi	r24, 0x01	; 1
    1552:	61 e0       	ldi	r22, 0x01	; 1
    1554:	41 e0       	ldi	r20, 0x01	; 1
    1556:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_u8LOW);
    155a:	81 e0       	ldi	r24, 0x01	; 1
    155c:	63 e0       	ldi	r22, 0x03	; 3
    155e:	40 e0       	ldi	r20, 0x00	; 0
    1560:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_u8HIGH);
    1564:	81 e0       	ldi	r24, 0x01	; 1
    1566:	62 e0       	ldi	r22, 0x02	; 2
    1568:	41 e0       	ldi	r20, 0x01	; 1
    156a:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				STEPPER_u8CoilIndex=3;
    156e:	83 e0       	ldi	r24, 0x03	; 3
    1570:	80 93 68 00 	sts	0x0068, r24
    1574:	fe 01       	movw	r30, r28
    1576:	ef 5a       	subi	r30, 0xAF	; 175
    1578:	ff 4f       	sbci	r31, 0xFF	; 255
    157a:	80 e0       	ldi	r24, 0x00	; 0
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	a0 e0       	ldi	r26, 0x00	; 0
    1580:	b0 e4       	ldi	r27, 0x40	; 64
    1582:	80 83       	st	Z, r24
    1584:	91 83       	std	Z+1, r25	; 0x01
    1586:	a2 83       	std	Z+2, r26	; 0x02
    1588:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    158a:	8e 01       	movw	r16, r28
    158c:	03 5b       	subi	r16, 0xB3	; 179
    158e:	1f 4f       	sbci	r17, 0xFF	; 255
    1590:	fe 01       	movw	r30, r28
    1592:	ef 5a       	subi	r30, 0xAF	; 175
    1594:	ff 4f       	sbci	r31, 0xFF	; 255
    1596:	60 81       	ld	r22, Z
    1598:	71 81       	ldd	r23, Z+1	; 0x01
    159a:	82 81       	ldd	r24, Z+2	; 0x02
    159c:	93 81       	ldd	r25, Z+3	; 0x03
    159e:	20 e0       	ldi	r18, 0x00	; 0
    15a0:	30 e8       	ldi	r19, 0x80	; 128
    15a2:	4b e3       	ldi	r20, 0x3B	; 59
    15a4:	55 e4       	ldi	r21, 0x45	; 69
    15a6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15aa:	dc 01       	movw	r26, r24
    15ac:	cb 01       	movw	r24, r22
    15ae:	f8 01       	movw	r30, r16
    15b0:	80 83       	st	Z, r24
    15b2:	91 83       	std	Z+1, r25	; 0x01
    15b4:	a2 83       	std	Z+2, r26	; 0x02
    15b6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15b8:	fe 01       	movw	r30, r28
    15ba:	e3 5b       	subi	r30, 0xB3	; 179
    15bc:	ff 4f       	sbci	r31, 0xFF	; 255
    15be:	60 81       	ld	r22, Z
    15c0:	71 81       	ldd	r23, Z+1	; 0x01
    15c2:	82 81       	ldd	r24, Z+2	; 0x02
    15c4:	93 81       	ldd	r25, Z+3	; 0x03
    15c6:	20 e0       	ldi	r18, 0x00	; 0
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	40 e8       	ldi	r20, 0x80	; 128
    15cc:	5f e3       	ldi	r21, 0x3F	; 63
    15ce:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    15d2:	88 23       	and	r24, r24
    15d4:	44 f4       	brge	.+16     	; 0x15e6 <STEPPER_VoidRotate+0x486>
		__ticks = 1;
    15d6:	fe 01       	movw	r30, r28
    15d8:	e5 5b       	subi	r30, 0xB5	; 181
    15da:	ff 4f       	sbci	r31, 0xFF	; 255
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	91 83       	std	Z+1, r25	; 0x01
    15e2:	80 83       	st	Z, r24
    15e4:	64 c0       	rjmp	.+200    	; 0x16ae <STEPPER_VoidRotate+0x54e>
	else if (__tmp > 65535)
    15e6:	fe 01       	movw	r30, r28
    15e8:	e3 5b       	subi	r30, 0xB3	; 179
    15ea:	ff 4f       	sbci	r31, 0xFF	; 255
    15ec:	60 81       	ld	r22, Z
    15ee:	71 81       	ldd	r23, Z+1	; 0x01
    15f0:	82 81       	ldd	r24, Z+2	; 0x02
    15f2:	93 81       	ldd	r25, Z+3	; 0x03
    15f4:	20 e0       	ldi	r18, 0x00	; 0
    15f6:	3f ef       	ldi	r19, 0xFF	; 255
    15f8:	4f e7       	ldi	r20, 0x7F	; 127
    15fa:	57 e4       	ldi	r21, 0x47	; 71
    15fc:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1600:	18 16       	cp	r1, r24
    1602:	0c f0       	brlt	.+2      	; 0x1606 <STEPPER_VoidRotate+0x4a6>
    1604:	43 c0       	rjmp	.+134    	; 0x168c <STEPPER_VoidRotate+0x52c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1606:	fe 01       	movw	r30, r28
    1608:	ef 5a       	subi	r30, 0xAF	; 175
    160a:	ff 4f       	sbci	r31, 0xFF	; 255
    160c:	60 81       	ld	r22, Z
    160e:	71 81       	ldd	r23, Z+1	; 0x01
    1610:	82 81       	ldd	r24, Z+2	; 0x02
    1612:	93 81       	ldd	r25, Z+3	; 0x03
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	40 e2       	ldi	r20, 0x20	; 32
    161a:	51 e4       	ldi	r21, 0x41	; 65
    161c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1620:	dc 01       	movw	r26, r24
    1622:	cb 01       	movw	r24, r22
    1624:	8e 01       	movw	r16, r28
    1626:	05 5b       	subi	r16, 0xB5	; 181
    1628:	1f 4f       	sbci	r17, 0xFF	; 255
    162a:	bc 01       	movw	r22, r24
    162c:	cd 01       	movw	r24, r26
    162e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1632:	dc 01       	movw	r26, r24
    1634:	cb 01       	movw	r24, r22
    1636:	f8 01       	movw	r30, r16
    1638:	91 83       	std	Z+1, r25	; 0x01
    163a:	80 83       	st	Z, r24
    163c:	1f c0       	rjmp	.+62     	; 0x167c <STEPPER_VoidRotate+0x51c>
    163e:	fe 01       	movw	r30, r28
    1640:	e7 5b       	subi	r30, 0xB7	; 183
    1642:	ff 4f       	sbci	r31, 0xFF	; 255
    1644:	8c e2       	ldi	r24, 0x2C	; 44
    1646:	91 e0       	ldi	r25, 0x01	; 1
    1648:	91 83       	std	Z+1, r25	; 0x01
    164a:	80 83       	st	Z, r24
    164c:	fe 01       	movw	r30, r28
    164e:	e7 5b       	subi	r30, 0xB7	; 183
    1650:	ff 4f       	sbci	r31, 0xFF	; 255
    1652:	80 81       	ld	r24, Z
    1654:	91 81       	ldd	r25, Z+1	; 0x01
    1656:	01 97       	sbiw	r24, 0x01	; 1
    1658:	f1 f7       	brne	.-4      	; 0x1656 <STEPPER_VoidRotate+0x4f6>
    165a:	fe 01       	movw	r30, r28
    165c:	e7 5b       	subi	r30, 0xB7	; 183
    165e:	ff 4f       	sbci	r31, 0xFF	; 255
    1660:	91 83       	std	Z+1, r25	; 0x01
    1662:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1664:	de 01       	movw	r26, r28
    1666:	a5 5b       	subi	r26, 0xB5	; 181
    1668:	bf 4f       	sbci	r27, 0xFF	; 255
    166a:	fe 01       	movw	r30, r28
    166c:	e5 5b       	subi	r30, 0xB5	; 181
    166e:	ff 4f       	sbci	r31, 0xFF	; 255
    1670:	80 81       	ld	r24, Z
    1672:	91 81       	ldd	r25, Z+1	; 0x01
    1674:	01 97       	sbiw	r24, 0x01	; 1
    1676:	11 96       	adiw	r26, 0x01	; 1
    1678:	9c 93       	st	X, r25
    167a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    167c:	fe 01       	movw	r30, r28
    167e:	e5 5b       	subi	r30, 0xB5	; 181
    1680:	ff 4f       	sbci	r31, 0xFF	; 255
    1682:	80 81       	ld	r24, Z
    1684:	91 81       	ldd	r25, Z+1	; 0x01
    1686:	00 97       	sbiw	r24, 0x00	; 0
    1688:	d1 f6       	brne	.-76     	; 0x163e <STEPPER_VoidRotate+0x4de>
    168a:	c9 c0       	rjmp	.+402    	; 0x181e <STEPPER_VoidRotate+0x6be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    168c:	8e 01       	movw	r16, r28
    168e:	05 5b       	subi	r16, 0xB5	; 181
    1690:	1f 4f       	sbci	r17, 0xFF	; 255
    1692:	fe 01       	movw	r30, r28
    1694:	e3 5b       	subi	r30, 0xB3	; 179
    1696:	ff 4f       	sbci	r31, 0xFF	; 255
    1698:	60 81       	ld	r22, Z
    169a:	71 81       	ldd	r23, Z+1	; 0x01
    169c:	82 81       	ldd	r24, Z+2	; 0x02
    169e:	93 81       	ldd	r25, Z+3	; 0x03
    16a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16a4:	dc 01       	movw	r26, r24
    16a6:	cb 01       	movw	r24, r22
    16a8:	f8 01       	movw	r30, r16
    16aa:	91 83       	std	Z+1, r25	; 0x01
    16ac:	80 83       	st	Z, r24
    16ae:	de 01       	movw	r26, r28
    16b0:	a9 5b       	subi	r26, 0xB9	; 185
    16b2:	bf 4f       	sbci	r27, 0xFF	; 255
    16b4:	fe 01       	movw	r30, r28
    16b6:	e5 5b       	subi	r30, 0xB5	; 181
    16b8:	ff 4f       	sbci	r31, 0xFF	; 255
    16ba:	80 81       	ld	r24, Z
    16bc:	91 81       	ldd	r25, Z+1	; 0x01
    16be:	11 96       	adiw	r26, 0x01	; 1
    16c0:	9c 93       	st	X, r25
    16c2:	8e 93       	st	-X, r24
    16c4:	fe 01       	movw	r30, r28
    16c6:	e9 5b       	subi	r30, 0xB9	; 185
    16c8:	ff 4f       	sbci	r31, 0xFF	; 255
    16ca:	80 81       	ld	r24, Z
    16cc:	91 81       	ldd	r25, Z+1	; 0x01
    16ce:	01 97       	sbiw	r24, 0x01	; 1
    16d0:	f1 f7       	brne	.-4      	; 0x16ce <STEPPER_VoidRotate+0x56e>
    16d2:	fe 01       	movw	r30, r28
    16d4:	e9 5b       	subi	r30, 0xB9	; 185
    16d6:	ff 4f       	sbci	r31, 0xFF	; 255
    16d8:	91 83       	std	Z+1, r25	; 0x01
    16da:	80 83       	st	Z, r24
    16dc:	a0 c0       	rjmp	.+320    	; 0x181e <STEPPER_VoidRotate+0x6be>
				_delay_ms(2);
			}
			else if(STEPPER_u8CoilIndex==3)
    16de:	80 91 68 00 	lds	r24, 0x0068
    16e2:	83 30       	cpi	r24, 0x03	; 3
    16e4:	09 f0       	breq	.+2      	; 0x16e8 <STEPPER_VoidRotate+0x588>
    16e6:	9b c0       	rjmp	.+310    	; 0x181e <STEPPER_VoidRotate+0x6be>
			{
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_u8HIGH);
    16e8:	81 e0       	ldi	r24, 0x01	; 1
    16ea:	60 e0       	ldi	r22, 0x00	; 0
    16ec:	41 e0       	ldi	r20, 0x01	; 1
    16ee:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_u8HIGH);
    16f2:	81 e0       	ldi	r24, 0x01	; 1
    16f4:	61 e0       	ldi	r22, 0x01	; 1
    16f6:	41 e0       	ldi	r20, 0x01	; 1
    16f8:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_u8HIGH);
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	63 e0       	ldi	r22, 0x03	; 3
    1700:	41 e0       	ldi	r20, 0x01	; 1
    1702:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_u8LOW);
    1706:	81 e0       	ldi	r24, 0x01	; 1
    1708:	62 e0       	ldi	r22, 0x02	; 2
    170a:	40 e0       	ldi	r20, 0x00	; 0
    170c:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				STEPPER_u8CoilIndex=0;
    1710:	10 92 68 00 	sts	0x0068, r1
    1714:	fe 01       	movw	r30, r28
    1716:	ed 5b       	subi	r30, 0xBD	; 189
    1718:	ff 4f       	sbci	r31, 0xFF	; 255
    171a:	80 e0       	ldi	r24, 0x00	; 0
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	a0 e0       	ldi	r26, 0x00	; 0
    1720:	b0 e4       	ldi	r27, 0x40	; 64
    1722:	80 83       	st	Z, r24
    1724:	91 83       	std	Z+1, r25	; 0x01
    1726:	a2 83       	std	Z+2, r26	; 0x02
    1728:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    172a:	8e 01       	movw	r16, r28
    172c:	01 5c       	subi	r16, 0xC1	; 193
    172e:	1f 4f       	sbci	r17, 0xFF	; 255
    1730:	fe 01       	movw	r30, r28
    1732:	ed 5b       	subi	r30, 0xBD	; 189
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	60 81       	ld	r22, Z
    1738:	71 81       	ldd	r23, Z+1	; 0x01
    173a:	82 81       	ldd	r24, Z+2	; 0x02
    173c:	93 81       	ldd	r25, Z+3	; 0x03
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	30 e8       	ldi	r19, 0x80	; 128
    1742:	4b e3       	ldi	r20, 0x3B	; 59
    1744:	55 e4       	ldi	r21, 0x45	; 69
    1746:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    174a:	dc 01       	movw	r26, r24
    174c:	cb 01       	movw	r24, r22
    174e:	f8 01       	movw	r30, r16
    1750:	80 83       	st	Z, r24
    1752:	91 83       	std	Z+1, r25	; 0x01
    1754:	a2 83       	std	Z+2, r26	; 0x02
    1756:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1758:	fe 01       	movw	r30, r28
    175a:	ff 96       	adiw	r30, 0x3f	; 63
    175c:	60 81       	ld	r22, Z
    175e:	71 81       	ldd	r23, Z+1	; 0x01
    1760:	82 81       	ldd	r24, Z+2	; 0x02
    1762:	93 81       	ldd	r25, Z+3	; 0x03
    1764:	20 e0       	ldi	r18, 0x00	; 0
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	40 e8       	ldi	r20, 0x80	; 128
    176a:	5f e3       	ldi	r21, 0x3F	; 63
    176c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1770:	88 23       	and	r24, r24
    1772:	2c f4       	brge	.+10     	; 0x177e <STEPPER_VoidRotate+0x61e>
		__ticks = 1;
    1774:	81 e0       	ldi	r24, 0x01	; 1
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	9e af       	std	Y+62, r25	; 0x3e
    177a:	8d af       	std	Y+61, r24	; 0x3d
    177c:	46 c0       	rjmp	.+140    	; 0x180a <STEPPER_VoidRotate+0x6aa>
	else if (__tmp > 65535)
    177e:	fe 01       	movw	r30, r28
    1780:	ff 96       	adiw	r30, 0x3f	; 63
    1782:	60 81       	ld	r22, Z
    1784:	71 81       	ldd	r23, Z+1	; 0x01
    1786:	82 81       	ldd	r24, Z+2	; 0x02
    1788:	93 81       	ldd	r25, Z+3	; 0x03
    178a:	20 e0       	ldi	r18, 0x00	; 0
    178c:	3f ef       	ldi	r19, 0xFF	; 255
    178e:	4f e7       	ldi	r20, 0x7F	; 127
    1790:	57 e4       	ldi	r21, 0x47	; 71
    1792:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1796:	18 16       	cp	r1, r24
    1798:	64 f5       	brge	.+88     	; 0x17f2 <STEPPER_VoidRotate+0x692>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    179a:	fe 01       	movw	r30, r28
    179c:	ed 5b       	subi	r30, 0xBD	; 189
    179e:	ff 4f       	sbci	r31, 0xFF	; 255
    17a0:	60 81       	ld	r22, Z
    17a2:	71 81       	ldd	r23, Z+1	; 0x01
    17a4:	82 81       	ldd	r24, Z+2	; 0x02
    17a6:	93 81       	ldd	r25, Z+3	; 0x03
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	40 e2       	ldi	r20, 0x20	; 32
    17ae:	51 e4       	ldi	r21, 0x41	; 65
    17b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17b4:	dc 01       	movw	r26, r24
    17b6:	cb 01       	movw	r24, r22
    17b8:	bc 01       	movw	r22, r24
    17ba:	cd 01       	movw	r24, r26
    17bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17c0:	dc 01       	movw	r26, r24
    17c2:	cb 01       	movw	r24, r22
    17c4:	9e af       	std	Y+62, r25	; 0x3e
    17c6:	8d af       	std	Y+61, r24	; 0x3d
    17c8:	0f c0       	rjmp	.+30     	; 0x17e8 <STEPPER_VoidRotate+0x688>
    17ca:	8c e2       	ldi	r24, 0x2C	; 44
    17cc:	91 e0       	ldi	r25, 0x01	; 1
    17ce:	9c af       	std	Y+60, r25	; 0x3c
    17d0:	8b af       	std	Y+59, r24	; 0x3b
    17d2:	8b ad       	ldd	r24, Y+59	; 0x3b
    17d4:	9c ad       	ldd	r25, Y+60	; 0x3c
    17d6:	01 97       	sbiw	r24, 0x01	; 1
    17d8:	f1 f7       	brne	.-4      	; 0x17d6 <STEPPER_VoidRotate+0x676>
    17da:	9c af       	std	Y+60, r25	; 0x3c
    17dc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17de:	8d ad       	ldd	r24, Y+61	; 0x3d
    17e0:	9e ad       	ldd	r25, Y+62	; 0x3e
    17e2:	01 97       	sbiw	r24, 0x01	; 1
    17e4:	9e af       	std	Y+62, r25	; 0x3e
    17e6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17e8:	8d ad       	ldd	r24, Y+61	; 0x3d
    17ea:	9e ad       	ldd	r25, Y+62	; 0x3e
    17ec:	00 97       	sbiw	r24, 0x00	; 0
    17ee:	69 f7       	brne	.-38     	; 0x17ca <STEPPER_VoidRotate+0x66a>
    17f0:	16 c0       	rjmp	.+44     	; 0x181e <STEPPER_VoidRotate+0x6be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17f2:	fe 01       	movw	r30, r28
    17f4:	ff 96       	adiw	r30, 0x3f	; 63
    17f6:	60 81       	ld	r22, Z
    17f8:	71 81       	ldd	r23, Z+1	; 0x01
    17fa:	82 81       	ldd	r24, Z+2	; 0x02
    17fc:	93 81       	ldd	r25, Z+3	; 0x03
    17fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1802:	dc 01       	movw	r26, r24
    1804:	cb 01       	movw	r24, r22
    1806:	9e af       	std	Y+62, r25	; 0x3e
    1808:	8d af       	std	Y+61, r24	; 0x3d
    180a:	8d ad       	ldd	r24, Y+61	; 0x3d
    180c:	9e ad       	ldd	r25, Y+62	; 0x3e
    180e:	9a af       	std	Y+58, r25	; 0x3a
    1810:	89 af       	std	Y+57, r24	; 0x39
    1812:	89 ad       	ldd	r24, Y+57	; 0x39
    1814:	9a ad       	ldd	r25, Y+58	; 0x3a
    1816:	01 97       	sbiw	r24, 0x01	; 1
    1818:	f1 f7       	brne	.-4      	; 0x1816 <STEPPER_VoidRotate+0x6b6>
    181a:	9a af       	std	Y+58, r25	; 0x3a
    181c:	89 af       	std	Y+57, r24	; 0x39
void STEPPER_VoidRotate(u8 STEPPER_u8RotationDirection,f32 STEPPER_u8Angle)
{
	u16 Local_u16StepperSteps=STEPPER_u8Angle/STEPPER_STEP;
	if(STEPPER_u8RotationDirection==STEPPER_CW)
	{
		for(u16 Local_u16Iterator=1;Local_u16Iterator<=Local_u16StepperSteps;Local_u16Iterator++)
    181e:	de 01       	movw	r26, r28
    1820:	ad 58       	subi	r26, 0x8D	; 141
    1822:	bf 4f       	sbci	r27, 0xFF	; 255
    1824:	fe 01       	movw	r30, r28
    1826:	ed 58       	subi	r30, 0x8D	; 141
    1828:	ff 4f       	sbci	r31, 0xFF	; 255
    182a:	80 81       	ld	r24, Z
    182c:	91 81       	ldd	r25, Z+1	; 0x01
    182e:	01 96       	adiw	r24, 0x01	; 1
    1830:	8d 93       	st	X+, r24
    1832:	9c 93       	st	X, r25
    1834:	fe 01       	movw	r30, r28
    1836:	ed 58       	subi	r30, 0x8D	; 141
    1838:	ff 4f       	sbci	r31, 0xFF	; 255
    183a:	de 01       	movw	r26, r28
    183c:	ab 58       	subi	r26, 0x8B	; 139
    183e:	bf 4f       	sbci	r27, 0xFF	; 255
    1840:	20 81       	ld	r18, Z
    1842:	31 81       	ldd	r19, Z+1	; 0x01
    1844:	8d 91       	ld	r24, X+
    1846:	9c 91       	ld	r25, X
    1848:	11 97       	sbiw	r26, 0x01	; 1
    184a:	82 17       	cp	r24, r18
    184c:	93 07       	cpc	r25, r19
    184e:	08 f0       	brcs	.+2      	; 0x1852 <STEPPER_VoidRotate+0x6f2>
    1850:	d3 cc       	rjmp	.-1626   	; 0x11f8 <STEPPER_VoidRotate+0x98>
    1852:	63 c2       	rjmp	.+1222   	; 0x1d1a <STEPPER_VoidRotate+0xbba>
				_delay_ms(2);
			}
		}
	}
	/*COUNTER CLOCKWISE*/
	else if (STEPPER_u8RotationDirection==STEPPER_CCW)
    1854:	fe 01       	movw	r30, r28
    1856:	e9 58       	subi	r30, 0x89	; 137
    1858:	ff 4f       	sbci	r31, 0xFF	; 255
    185a:	80 81       	ld	r24, Z
    185c:	81 30       	cpi	r24, 0x01	; 1
    185e:	09 f0       	breq	.+2      	; 0x1862 <STEPPER_VoidRotate+0x702>
    1860:	5c c2       	rjmp	.+1208   	; 0x1d1a <STEPPER_VoidRotate+0xbba>
	{
		for(u16 Local_u16Iterator=1;Local_u16Iterator<=Local_u16StepperSteps;Local_u16Iterator++)
    1862:	fe 01       	movw	r30, r28
    1864:	ef 58       	subi	r30, 0x8F	; 143
    1866:	ff 4f       	sbci	r31, 0xFF	; 255
    1868:	81 e0       	ldi	r24, 0x01	; 1
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	91 83       	std	Z+1, r25	; 0x01
    186e:	80 83       	st	Z, r24
    1870:	45 c2       	rjmp	.+1162   	; 0x1cfc <STEPPER_VoidRotate+0xb9c>
		{
			if(STEPPER_u8CoilIndex==0)
    1872:	80 91 68 00 	lds	r24, 0x0068
    1876:	88 23       	and	r24, r24
    1878:	09 f0       	breq	.+2      	; 0x187c <STEPPER_VoidRotate+0x71c>
    187a:	8a c0       	rjmp	.+276    	; 0x1990 <STEPPER_VoidRotate+0x830>
			{
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_u8HIGH);
    187c:	81 e0       	ldi	r24, 0x01	; 1
    187e:	60 e0       	ldi	r22, 0x00	; 0
    1880:	41 e0       	ldi	r20, 0x01	; 1
    1882:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_u8HIGH);
    1886:	81 e0       	ldi	r24, 0x01	; 1
    1888:	61 e0       	ldi	r22, 0x01	; 1
    188a:	41 e0       	ldi	r20, 0x01	; 1
    188c:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_u8HIGH);
    1890:	81 e0       	ldi	r24, 0x01	; 1
    1892:	63 e0       	ldi	r22, 0x03	; 3
    1894:	41 e0       	ldi	r20, 0x01	; 1
    1896:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_u8LOW);
    189a:	81 e0       	ldi	r24, 0x01	; 1
    189c:	62 e0       	ldi	r22, 0x02	; 2
    189e:	40 e0       	ldi	r20, 0x00	; 0
    18a0:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				STEPPER_u8CoilIndex=1;
    18a4:	81 e0       	ldi	r24, 0x01	; 1
    18a6:	80 93 68 00 	sts	0x0068, r24
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	90 e0       	ldi	r25, 0x00	; 0
    18ae:	a0 e0       	ldi	r26, 0x00	; 0
    18b0:	b0 e4       	ldi	r27, 0x40	; 64
    18b2:	8d ab       	std	Y+53, r24	; 0x35
    18b4:	9e ab       	std	Y+54, r25	; 0x36
    18b6:	af ab       	std	Y+55, r26	; 0x37
    18b8:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18ba:	6d a9       	ldd	r22, Y+53	; 0x35
    18bc:	7e a9       	ldd	r23, Y+54	; 0x36
    18be:	8f a9       	ldd	r24, Y+55	; 0x37
    18c0:	98 ad       	ldd	r25, Y+56	; 0x38
    18c2:	20 e0       	ldi	r18, 0x00	; 0
    18c4:	30 e8       	ldi	r19, 0x80	; 128
    18c6:	4b e3       	ldi	r20, 0x3B	; 59
    18c8:	55 e4       	ldi	r21, 0x45	; 69
    18ca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18ce:	dc 01       	movw	r26, r24
    18d0:	cb 01       	movw	r24, r22
    18d2:	89 ab       	std	Y+49, r24	; 0x31
    18d4:	9a ab       	std	Y+50, r25	; 0x32
    18d6:	ab ab       	std	Y+51, r26	; 0x33
    18d8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    18da:	69 a9       	ldd	r22, Y+49	; 0x31
    18dc:	7a a9       	ldd	r23, Y+50	; 0x32
    18de:	8b a9       	ldd	r24, Y+51	; 0x33
    18e0:	9c a9       	ldd	r25, Y+52	; 0x34
    18e2:	20 e0       	ldi	r18, 0x00	; 0
    18e4:	30 e0       	ldi	r19, 0x00	; 0
    18e6:	40 e8       	ldi	r20, 0x80	; 128
    18e8:	5f e3       	ldi	r21, 0x3F	; 63
    18ea:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    18ee:	88 23       	and	r24, r24
    18f0:	2c f4       	brge	.+10     	; 0x18fc <STEPPER_VoidRotate+0x79c>
		__ticks = 1;
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	98 ab       	std	Y+48, r25	; 0x30
    18f8:	8f a7       	std	Y+47, r24	; 0x2f
    18fa:	3f c0       	rjmp	.+126    	; 0x197a <STEPPER_VoidRotate+0x81a>
	else if (__tmp > 65535)
    18fc:	69 a9       	ldd	r22, Y+49	; 0x31
    18fe:	7a a9       	ldd	r23, Y+50	; 0x32
    1900:	8b a9       	ldd	r24, Y+51	; 0x33
    1902:	9c a9       	ldd	r25, Y+52	; 0x34
    1904:	20 e0       	ldi	r18, 0x00	; 0
    1906:	3f ef       	ldi	r19, 0xFF	; 255
    1908:	4f e7       	ldi	r20, 0x7F	; 127
    190a:	57 e4       	ldi	r21, 0x47	; 71
    190c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1910:	18 16       	cp	r1, r24
    1912:	4c f5       	brge	.+82     	; 0x1966 <STEPPER_VoidRotate+0x806>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1914:	6d a9       	ldd	r22, Y+53	; 0x35
    1916:	7e a9       	ldd	r23, Y+54	; 0x36
    1918:	8f a9       	ldd	r24, Y+55	; 0x37
    191a:	98 ad       	ldd	r25, Y+56	; 0x38
    191c:	20 e0       	ldi	r18, 0x00	; 0
    191e:	30 e0       	ldi	r19, 0x00	; 0
    1920:	40 e2       	ldi	r20, 0x20	; 32
    1922:	51 e4       	ldi	r21, 0x41	; 65
    1924:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1928:	dc 01       	movw	r26, r24
    192a:	cb 01       	movw	r24, r22
    192c:	bc 01       	movw	r22, r24
    192e:	cd 01       	movw	r24, r26
    1930:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1934:	dc 01       	movw	r26, r24
    1936:	cb 01       	movw	r24, r22
    1938:	98 ab       	std	Y+48, r25	; 0x30
    193a:	8f a7       	std	Y+47, r24	; 0x2f
    193c:	0f c0       	rjmp	.+30     	; 0x195c <STEPPER_VoidRotate+0x7fc>
    193e:	8c e2       	ldi	r24, 0x2C	; 44
    1940:	91 e0       	ldi	r25, 0x01	; 1
    1942:	9e a7       	std	Y+46, r25	; 0x2e
    1944:	8d a7       	std	Y+45, r24	; 0x2d
    1946:	8d a5       	ldd	r24, Y+45	; 0x2d
    1948:	9e a5       	ldd	r25, Y+46	; 0x2e
    194a:	01 97       	sbiw	r24, 0x01	; 1
    194c:	f1 f7       	brne	.-4      	; 0x194a <STEPPER_VoidRotate+0x7ea>
    194e:	9e a7       	std	Y+46, r25	; 0x2e
    1950:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1952:	8f a5       	ldd	r24, Y+47	; 0x2f
    1954:	98 a9       	ldd	r25, Y+48	; 0x30
    1956:	01 97       	sbiw	r24, 0x01	; 1
    1958:	98 ab       	std	Y+48, r25	; 0x30
    195a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    195c:	8f a5       	ldd	r24, Y+47	; 0x2f
    195e:	98 a9       	ldd	r25, Y+48	; 0x30
    1960:	00 97       	sbiw	r24, 0x00	; 0
    1962:	69 f7       	brne	.-38     	; 0x193e <STEPPER_VoidRotate+0x7de>
    1964:	c0 c1       	rjmp	.+896    	; 0x1ce6 <STEPPER_VoidRotate+0xb86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1966:	69 a9       	ldd	r22, Y+49	; 0x31
    1968:	7a a9       	ldd	r23, Y+50	; 0x32
    196a:	8b a9       	ldd	r24, Y+51	; 0x33
    196c:	9c a9       	ldd	r25, Y+52	; 0x34
    196e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1972:	dc 01       	movw	r26, r24
    1974:	cb 01       	movw	r24, r22
    1976:	98 ab       	std	Y+48, r25	; 0x30
    1978:	8f a7       	std	Y+47, r24	; 0x2f
    197a:	8f a5       	ldd	r24, Y+47	; 0x2f
    197c:	98 a9       	ldd	r25, Y+48	; 0x30
    197e:	9c a7       	std	Y+44, r25	; 0x2c
    1980:	8b a7       	std	Y+43, r24	; 0x2b
    1982:	8b a5       	ldd	r24, Y+43	; 0x2b
    1984:	9c a5       	ldd	r25, Y+44	; 0x2c
    1986:	01 97       	sbiw	r24, 0x01	; 1
    1988:	f1 f7       	brne	.-4      	; 0x1986 <STEPPER_VoidRotate+0x826>
    198a:	9c a7       	std	Y+44, r25	; 0x2c
    198c:	8b a7       	std	Y+43, r24	; 0x2b
    198e:	ab c1       	rjmp	.+854    	; 0x1ce6 <STEPPER_VoidRotate+0xb86>
				_delay_ms(2);
			}
			else if(STEPPER_u8CoilIndex==1)
    1990:	80 91 68 00 	lds	r24, 0x0068
    1994:	81 30       	cpi	r24, 0x01	; 1
    1996:	09 f0       	breq	.+2      	; 0x199a <STEPPER_VoidRotate+0x83a>
    1998:	8a c0       	rjmp	.+276    	; 0x1aae <STEPPER_VoidRotate+0x94e>
			{
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_u8HIGH);
    199a:	81 e0       	ldi	r24, 0x01	; 1
    199c:	60 e0       	ldi	r22, 0x00	; 0
    199e:	41 e0       	ldi	r20, 0x01	; 1
    19a0:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_u8HIGH);
    19a4:	81 e0       	ldi	r24, 0x01	; 1
    19a6:	61 e0       	ldi	r22, 0x01	; 1
    19a8:	41 e0       	ldi	r20, 0x01	; 1
    19aa:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_u8LOW);
    19ae:	81 e0       	ldi	r24, 0x01	; 1
    19b0:	63 e0       	ldi	r22, 0x03	; 3
    19b2:	40 e0       	ldi	r20, 0x00	; 0
    19b4:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_u8HIGH);
    19b8:	81 e0       	ldi	r24, 0x01	; 1
    19ba:	62 e0       	ldi	r22, 0x02	; 2
    19bc:	41 e0       	ldi	r20, 0x01	; 1
    19be:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				STEPPER_u8CoilIndex=2;
    19c2:	82 e0       	ldi	r24, 0x02	; 2
    19c4:	80 93 68 00 	sts	0x0068, r24
    19c8:	80 e0       	ldi	r24, 0x00	; 0
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	a0 e0       	ldi	r26, 0x00	; 0
    19ce:	b0 e4       	ldi	r27, 0x40	; 64
    19d0:	8f a3       	std	Y+39, r24	; 0x27
    19d2:	98 a7       	std	Y+40, r25	; 0x28
    19d4:	a9 a7       	std	Y+41, r26	; 0x29
    19d6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19d8:	6f a1       	ldd	r22, Y+39	; 0x27
    19da:	78 a5       	ldd	r23, Y+40	; 0x28
    19dc:	89 a5       	ldd	r24, Y+41	; 0x29
    19de:	9a a5       	ldd	r25, Y+42	; 0x2a
    19e0:	20 e0       	ldi	r18, 0x00	; 0
    19e2:	30 e8       	ldi	r19, 0x80	; 128
    19e4:	4b e3       	ldi	r20, 0x3B	; 59
    19e6:	55 e4       	ldi	r21, 0x45	; 69
    19e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19ec:	dc 01       	movw	r26, r24
    19ee:	cb 01       	movw	r24, r22
    19f0:	8b a3       	std	Y+35, r24	; 0x23
    19f2:	9c a3       	std	Y+36, r25	; 0x24
    19f4:	ad a3       	std	Y+37, r26	; 0x25
    19f6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    19f8:	6b a1       	ldd	r22, Y+35	; 0x23
    19fa:	7c a1       	ldd	r23, Y+36	; 0x24
    19fc:	8d a1       	ldd	r24, Y+37	; 0x25
    19fe:	9e a1       	ldd	r25, Y+38	; 0x26
    1a00:	20 e0       	ldi	r18, 0x00	; 0
    1a02:	30 e0       	ldi	r19, 0x00	; 0
    1a04:	40 e8       	ldi	r20, 0x80	; 128
    1a06:	5f e3       	ldi	r21, 0x3F	; 63
    1a08:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1a0c:	88 23       	and	r24, r24
    1a0e:	2c f4       	brge	.+10     	; 0x1a1a <STEPPER_VoidRotate+0x8ba>
		__ticks = 1;
    1a10:	81 e0       	ldi	r24, 0x01	; 1
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	9a a3       	std	Y+34, r25	; 0x22
    1a16:	89 a3       	std	Y+33, r24	; 0x21
    1a18:	3f c0       	rjmp	.+126    	; 0x1a98 <STEPPER_VoidRotate+0x938>
	else if (__tmp > 65535)
    1a1a:	6b a1       	ldd	r22, Y+35	; 0x23
    1a1c:	7c a1       	ldd	r23, Y+36	; 0x24
    1a1e:	8d a1       	ldd	r24, Y+37	; 0x25
    1a20:	9e a1       	ldd	r25, Y+38	; 0x26
    1a22:	20 e0       	ldi	r18, 0x00	; 0
    1a24:	3f ef       	ldi	r19, 0xFF	; 255
    1a26:	4f e7       	ldi	r20, 0x7F	; 127
    1a28:	57 e4       	ldi	r21, 0x47	; 71
    1a2a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1a2e:	18 16       	cp	r1, r24
    1a30:	4c f5       	brge	.+82     	; 0x1a84 <STEPPER_VoidRotate+0x924>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a32:	6f a1       	ldd	r22, Y+39	; 0x27
    1a34:	78 a5       	ldd	r23, Y+40	; 0x28
    1a36:	89 a5       	ldd	r24, Y+41	; 0x29
    1a38:	9a a5       	ldd	r25, Y+42	; 0x2a
    1a3a:	20 e0       	ldi	r18, 0x00	; 0
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	40 e2       	ldi	r20, 0x20	; 32
    1a40:	51 e4       	ldi	r21, 0x41	; 65
    1a42:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a46:	dc 01       	movw	r26, r24
    1a48:	cb 01       	movw	r24, r22
    1a4a:	bc 01       	movw	r22, r24
    1a4c:	cd 01       	movw	r24, r26
    1a4e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a52:	dc 01       	movw	r26, r24
    1a54:	cb 01       	movw	r24, r22
    1a56:	9a a3       	std	Y+34, r25	; 0x22
    1a58:	89 a3       	std	Y+33, r24	; 0x21
    1a5a:	0f c0       	rjmp	.+30     	; 0x1a7a <STEPPER_VoidRotate+0x91a>
    1a5c:	8c e2       	ldi	r24, 0x2C	; 44
    1a5e:	91 e0       	ldi	r25, 0x01	; 1
    1a60:	98 a3       	std	Y+32, r25	; 0x20
    1a62:	8f 8f       	std	Y+31, r24	; 0x1f
    1a64:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a66:	98 a1       	ldd	r25, Y+32	; 0x20
    1a68:	01 97       	sbiw	r24, 0x01	; 1
    1a6a:	f1 f7       	brne	.-4      	; 0x1a68 <STEPPER_VoidRotate+0x908>
    1a6c:	98 a3       	std	Y+32, r25	; 0x20
    1a6e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a70:	89 a1       	ldd	r24, Y+33	; 0x21
    1a72:	9a a1       	ldd	r25, Y+34	; 0x22
    1a74:	01 97       	sbiw	r24, 0x01	; 1
    1a76:	9a a3       	std	Y+34, r25	; 0x22
    1a78:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a7a:	89 a1       	ldd	r24, Y+33	; 0x21
    1a7c:	9a a1       	ldd	r25, Y+34	; 0x22
    1a7e:	00 97       	sbiw	r24, 0x00	; 0
    1a80:	69 f7       	brne	.-38     	; 0x1a5c <STEPPER_VoidRotate+0x8fc>
    1a82:	31 c1       	rjmp	.+610    	; 0x1ce6 <STEPPER_VoidRotate+0xb86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a84:	6b a1       	ldd	r22, Y+35	; 0x23
    1a86:	7c a1       	ldd	r23, Y+36	; 0x24
    1a88:	8d a1       	ldd	r24, Y+37	; 0x25
    1a8a:	9e a1       	ldd	r25, Y+38	; 0x26
    1a8c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a90:	dc 01       	movw	r26, r24
    1a92:	cb 01       	movw	r24, r22
    1a94:	9a a3       	std	Y+34, r25	; 0x22
    1a96:	89 a3       	std	Y+33, r24	; 0x21
    1a98:	89 a1       	ldd	r24, Y+33	; 0x21
    1a9a:	9a a1       	ldd	r25, Y+34	; 0x22
    1a9c:	9e 8f       	std	Y+30, r25	; 0x1e
    1a9e:	8d 8f       	std	Y+29, r24	; 0x1d
    1aa0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1aa2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1aa4:	01 97       	sbiw	r24, 0x01	; 1
    1aa6:	f1 f7       	brne	.-4      	; 0x1aa4 <STEPPER_VoidRotate+0x944>
    1aa8:	9e 8f       	std	Y+30, r25	; 0x1e
    1aaa:	8d 8f       	std	Y+29, r24	; 0x1d
    1aac:	1c c1       	rjmp	.+568    	; 0x1ce6 <STEPPER_VoidRotate+0xb86>
				_delay_ms(2);
			}
			else if(STEPPER_u8CoilIndex==2)
    1aae:	80 91 68 00 	lds	r24, 0x0068
    1ab2:	82 30       	cpi	r24, 0x02	; 2
    1ab4:	09 f0       	breq	.+2      	; 0x1ab8 <STEPPER_VoidRotate+0x958>
    1ab6:	8a c0       	rjmp	.+276    	; 0x1bcc <STEPPER_VoidRotate+0xa6c>
			{
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_u8HIGH);
    1ab8:	81 e0       	ldi	r24, 0x01	; 1
    1aba:	60 e0       	ldi	r22, 0x00	; 0
    1abc:	41 e0       	ldi	r20, 0x01	; 1
    1abe:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_u8LOW);
    1ac2:	81 e0       	ldi	r24, 0x01	; 1
    1ac4:	61 e0       	ldi	r22, 0x01	; 1
    1ac6:	40 e0       	ldi	r20, 0x00	; 0
    1ac8:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_u8HIGH);
    1acc:	81 e0       	ldi	r24, 0x01	; 1
    1ace:	63 e0       	ldi	r22, 0x03	; 3
    1ad0:	41 e0       	ldi	r20, 0x01	; 1
    1ad2:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_u8HIGH);
    1ad6:	81 e0       	ldi	r24, 0x01	; 1
    1ad8:	62 e0       	ldi	r22, 0x02	; 2
    1ada:	41 e0       	ldi	r20, 0x01	; 1
    1adc:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				STEPPER_u8CoilIndex=3;
    1ae0:	83 e0       	ldi	r24, 0x03	; 3
    1ae2:	80 93 68 00 	sts	0x0068, r24
    1ae6:	80 e0       	ldi	r24, 0x00	; 0
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	a0 e0       	ldi	r26, 0x00	; 0
    1aec:	b0 e4       	ldi	r27, 0x40	; 64
    1aee:	89 8f       	std	Y+25, r24	; 0x19
    1af0:	9a 8f       	std	Y+26, r25	; 0x1a
    1af2:	ab 8f       	std	Y+27, r26	; 0x1b
    1af4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1af6:	69 8d       	ldd	r22, Y+25	; 0x19
    1af8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1afa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1afc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1afe:	20 e0       	ldi	r18, 0x00	; 0
    1b00:	30 e8       	ldi	r19, 0x80	; 128
    1b02:	4b e3       	ldi	r20, 0x3B	; 59
    1b04:	55 e4       	ldi	r21, 0x45	; 69
    1b06:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b0a:	dc 01       	movw	r26, r24
    1b0c:	cb 01       	movw	r24, r22
    1b0e:	8d 8b       	std	Y+21, r24	; 0x15
    1b10:	9e 8b       	std	Y+22, r25	; 0x16
    1b12:	af 8b       	std	Y+23, r26	; 0x17
    1b14:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1b16:	6d 89       	ldd	r22, Y+21	; 0x15
    1b18:	7e 89       	ldd	r23, Y+22	; 0x16
    1b1a:	8f 89       	ldd	r24, Y+23	; 0x17
    1b1c:	98 8d       	ldd	r25, Y+24	; 0x18
    1b1e:	20 e0       	ldi	r18, 0x00	; 0
    1b20:	30 e0       	ldi	r19, 0x00	; 0
    1b22:	40 e8       	ldi	r20, 0x80	; 128
    1b24:	5f e3       	ldi	r21, 0x3F	; 63
    1b26:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1b2a:	88 23       	and	r24, r24
    1b2c:	2c f4       	brge	.+10     	; 0x1b38 <STEPPER_VoidRotate+0x9d8>
		__ticks = 1;
    1b2e:	81 e0       	ldi	r24, 0x01	; 1
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	9c 8b       	std	Y+20, r25	; 0x14
    1b34:	8b 8b       	std	Y+19, r24	; 0x13
    1b36:	3f c0       	rjmp	.+126    	; 0x1bb6 <STEPPER_VoidRotate+0xa56>
	else if (__tmp > 65535)
    1b38:	6d 89       	ldd	r22, Y+21	; 0x15
    1b3a:	7e 89       	ldd	r23, Y+22	; 0x16
    1b3c:	8f 89       	ldd	r24, Y+23	; 0x17
    1b3e:	98 8d       	ldd	r25, Y+24	; 0x18
    1b40:	20 e0       	ldi	r18, 0x00	; 0
    1b42:	3f ef       	ldi	r19, 0xFF	; 255
    1b44:	4f e7       	ldi	r20, 0x7F	; 127
    1b46:	57 e4       	ldi	r21, 0x47	; 71
    1b48:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1b4c:	18 16       	cp	r1, r24
    1b4e:	4c f5       	brge	.+82     	; 0x1ba2 <STEPPER_VoidRotate+0xa42>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b50:	69 8d       	ldd	r22, Y+25	; 0x19
    1b52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b54:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b56:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b58:	20 e0       	ldi	r18, 0x00	; 0
    1b5a:	30 e0       	ldi	r19, 0x00	; 0
    1b5c:	40 e2       	ldi	r20, 0x20	; 32
    1b5e:	51 e4       	ldi	r21, 0x41	; 65
    1b60:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b64:	dc 01       	movw	r26, r24
    1b66:	cb 01       	movw	r24, r22
    1b68:	bc 01       	movw	r22, r24
    1b6a:	cd 01       	movw	r24, r26
    1b6c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b70:	dc 01       	movw	r26, r24
    1b72:	cb 01       	movw	r24, r22
    1b74:	9c 8b       	std	Y+20, r25	; 0x14
    1b76:	8b 8b       	std	Y+19, r24	; 0x13
    1b78:	0f c0       	rjmp	.+30     	; 0x1b98 <STEPPER_VoidRotate+0xa38>
    1b7a:	8c e2       	ldi	r24, 0x2C	; 44
    1b7c:	91 e0       	ldi	r25, 0x01	; 1
    1b7e:	9a 8b       	std	Y+18, r25	; 0x12
    1b80:	89 8b       	std	Y+17, r24	; 0x11
    1b82:	89 89       	ldd	r24, Y+17	; 0x11
    1b84:	9a 89       	ldd	r25, Y+18	; 0x12
    1b86:	01 97       	sbiw	r24, 0x01	; 1
    1b88:	f1 f7       	brne	.-4      	; 0x1b86 <STEPPER_VoidRotate+0xa26>
    1b8a:	9a 8b       	std	Y+18, r25	; 0x12
    1b8c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b8e:	8b 89       	ldd	r24, Y+19	; 0x13
    1b90:	9c 89       	ldd	r25, Y+20	; 0x14
    1b92:	01 97       	sbiw	r24, 0x01	; 1
    1b94:	9c 8b       	std	Y+20, r25	; 0x14
    1b96:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b98:	8b 89       	ldd	r24, Y+19	; 0x13
    1b9a:	9c 89       	ldd	r25, Y+20	; 0x14
    1b9c:	00 97       	sbiw	r24, 0x00	; 0
    1b9e:	69 f7       	brne	.-38     	; 0x1b7a <STEPPER_VoidRotate+0xa1a>
    1ba0:	a2 c0       	rjmp	.+324    	; 0x1ce6 <STEPPER_VoidRotate+0xb86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ba2:	6d 89       	ldd	r22, Y+21	; 0x15
    1ba4:	7e 89       	ldd	r23, Y+22	; 0x16
    1ba6:	8f 89       	ldd	r24, Y+23	; 0x17
    1ba8:	98 8d       	ldd	r25, Y+24	; 0x18
    1baa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bae:	dc 01       	movw	r26, r24
    1bb0:	cb 01       	movw	r24, r22
    1bb2:	9c 8b       	std	Y+20, r25	; 0x14
    1bb4:	8b 8b       	std	Y+19, r24	; 0x13
    1bb6:	8b 89       	ldd	r24, Y+19	; 0x13
    1bb8:	9c 89       	ldd	r25, Y+20	; 0x14
    1bba:	98 8b       	std	Y+16, r25	; 0x10
    1bbc:	8f 87       	std	Y+15, r24	; 0x0f
    1bbe:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bc0:	98 89       	ldd	r25, Y+16	; 0x10
    1bc2:	01 97       	sbiw	r24, 0x01	; 1
    1bc4:	f1 f7       	brne	.-4      	; 0x1bc2 <STEPPER_VoidRotate+0xa62>
    1bc6:	98 8b       	std	Y+16, r25	; 0x10
    1bc8:	8f 87       	std	Y+15, r24	; 0x0f
    1bca:	8d c0       	rjmp	.+282    	; 0x1ce6 <STEPPER_VoidRotate+0xb86>
				_delay_ms(2);
			}
			else if(STEPPER_u8CoilIndex==3)
    1bcc:	80 91 68 00 	lds	r24, 0x0068
    1bd0:	83 30       	cpi	r24, 0x03	; 3
    1bd2:	09 f0       	breq	.+2      	; 0x1bd6 <STEPPER_VoidRotate+0xa76>
    1bd4:	88 c0       	rjmp	.+272    	; 0x1ce6 <STEPPER_VoidRotate+0xb86>
			{
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_u8LOW);
    1bd6:	81 e0       	ldi	r24, 0x01	; 1
    1bd8:	60 e0       	ldi	r22, 0x00	; 0
    1bda:	40 e0       	ldi	r20, 0x00	; 0
    1bdc:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_u8HIGH);
    1be0:	81 e0       	ldi	r24, 0x01	; 1
    1be2:	61 e0       	ldi	r22, 0x01	; 1
    1be4:	41 e0       	ldi	r20, 0x01	; 1
    1be6:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_u8HIGH);
    1bea:	81 e0       	ldi	r24, 0x01	; 1
    1bec:	63 e0       	ldi	r22, 0x03	; 3
    1bee:	41 e0       	ldi	r20, 0x01	; 1
    1bf0:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_u8HIGH);
    1bf4:	81 e0       	ldi	r24, 0x01	; 1
    1bf6:	62 e0       	ldi	r22, 0x02	; 2
    1bf8:	41 e0       	ldi	r20, 0x01	; 1
    1bfa:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				STEPPER_u8CoilIndex=0;
    1bfe:	10 92 68 00 	sts	0x0068, r1
    1c02:	80 e0       	ldi	r24, 0x00	; 0
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	a0 e0       	ldi	r26, 0x00	; 0
    1c08:	b0 e4       	ldi	r27, 0x40	; 64
    1c0a:	8b 87       	std	Y+11, r24	; 0x0b
    1c0c:	9c 87       	std	Y+12, r25	; 0x0c
    1c0e:	ad 87       	std	Y+13, r26	; 0x0d
    1c10:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c12:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c14:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c16:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c18:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c1a:	20 e0       	ldi	r18, 0x00	; 0
    1c1c:	30 e8       	ldi	r19, 0x80	; 128
    1c1e:	4b e3       	ldi	r20, 0x3B	; 59
    1c20:	55 e4       	ldi	r21, 0x45	; 69
    1c22:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c26:	dc 01       	movw	r26, r24
    1c28:	cb 01       	movw	r24, r22
    1c2a:	8f 83       	std	Y+7, r24	; 0x07
    1c2c:	98 87       	std	Y+8, r25	; 0x08
    1c2e:	a9 87       	std	Y+9, r26	; 0x09
    1c30:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1c32:	6f 81       	ldd	r22, Y+7	; 0x07
    1c34:	78 85       	ldd	r23, Y+8	; 0x08
    1c36:	89 85       	ldd	r24, Y+9	; 0x09
    1c38:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c3a:	20 e0       	ldi	r18, 0x00	; 0
    1c3c:	30 e0       	ldi	r19, 0x00	; 0
    1c3e:	40 e8       	ldi	r20, 0x80	; 128
    1c40:	5f e3       	ldi	r21, 0x3F	; 63
    1c42:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1c46:	88 23       	and	r24, r24
    1c48:	2c f4       	brge	.+10     	; 0x1c54 <STEPPER_VoidRotate+0xaf4>
		__ticks = 1;
    1c4a:	81 e0       	ldi	r24, 0x01	; 1
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	9e 83       	std	Y+6, r25	; 0x06
    1c50:	8d 83       	std	Y+5, r24	; 0x05
    1c52:	3f c0       	rjmp	.+126    	; 0x1cd2 <STEPPER_VoidRotate+0xb72>
	else if (__tmp > 65535)
    1c54:	6f 81       	ldd	r22, Y+7	; 0x07
    1c56:	78 85       	ldd	r23, Y+8	; 0x08
    1c58:	89 85       	ldd	r24, Y+9	; 0x09
    1c5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c5c:	20 e0       	ldi	r18, 0x00	; 0
    1c5e:	3f ef       	ldi	r19, 0xFF	; 255
    1c60:	4f e7       	ldi	r20, 0x7F	; 127
    1c62:	57 e4       	ldi	r21, 0x47	; 71
    1c64:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1c68:	18 16       	cp	r1, r24
    1c6a:	4c f5       	brge	.+82     	; 0x1cbe <STEPPER_VoidRotate+0xb5e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c6c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c6e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c70:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c72:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c74:	20 e0       	ldi	r18, 0x00	; 0
    1c76:	30 e0       	ldi	r19, 0x00	; 0
    1c78:	40 e2       	ldi	r20, 0x20	; 32
    1c7a:	51 e4       	ldi	r21, 0x41	; 65
    1c7c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c80:	dc 01       	movw	r26, r24
    1c82:	cb 01       	movw	r24, r22
    1c84:	bc 01       	movw	r22, r24
    1c86:	cd 01       	movw	r24, r26
    1c88:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c8c:	dc 01       	movw	r26, r24
    1c8e:	cb 01       	movw	r24, r22
    1c90:	9e 83       	std	Y+6, r25	; 0x06
    1c92:	8d 83       	std	Y+5, r24	; 0x05
    1c94:	0f c0       	rjmp	.+30     	; 0x1cb4 <STEPPER_VoidRotate+0xb54>
    1c96:	8c e2       	ldi	r24, 0x2C	; 44
    1c98:	91 e0       	ldi	r25, 0x01	; 1
    1c9a:	9c 83       	std	Y+4, r25	; 0x04
    1c9c:	8b 83       	std	Y+3, r24	; 0x03
    1c9e:	8b 81       	ldd	r24, Y+3	; 0x03
    1ca0:	9c 81       	ldd	r25, Y+4	; 0x04
    1ca2:	01 97       	sbiw	r24, 0x01	; 1
    1ca4:	f1 f7       	brne	.-4      	; 0x1ca2 <STEPPER_VoidRotate+0xb42>
    1ca6:	9c 83       	std	Y+4, r25	; 0x04
    1ca8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1caa:	8d 81       	ldd	r24, Y+5	; 0x05
    1cac:	9e 81       	ldd	r25, Y+6	; 0x06
    1cae:	01 97       	sbiw	r24, 0x01	; 1
    1cb0:	9e 83       	std	Y+6, r25	; 0x06
    1cb2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cb4:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb6:	9e 81       	ldd	r25, Y+6	; 0x06
    1cb8:	00 97       	sbiw	r24, 0x00	; 0
    1cba:	69 f7       	brne	.-38     	; 0x1c96 <STEPPER_VoidRotate+0xb36>
    1cbc:	14 c0       	rjmp	.+40     	; 0x1ce6 <STEPPER_VoidRotate+0xb86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cbe:	6f 81       	ldd	r22, Y+7	; 0x07
    1cc0:	78 85       	ldd	r23, Y+8	; 0x08
    1cc2:	89 85       	ldd	r24, Y+9	; 0x09
    1cc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cc6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cca:	dc 01       	movw	r26, r24
    1ccc:	cb 01       	movw	r24, r22
    1cce:	9e 83       	std	Y+6, r25	; 0x06
    1cd0:	8d 83       	std	Y+5, r24	; 0x05
    1cd2:	8d 81       	ldd	r24, Y+5	; 0x05
    1cd4:	9e 81       	ldd	r25, Y+6	; 0x06
    1cd6:	9a 83       	std	Y+2, r25	; 0x02
    1cd8:	89 83       	std	Y+1, r24	; 0x01
    1cda:	89 81       	ldd	r24, Y+1	; 0x01
    1cdc:	9a 81       	ldd	r25, Y+2	; 0x02
    1cde:	01 97       	sbiw	r24, 0x01	; 1
    1ce0:	f1 f7       	brne	.-4      	; 0x1cde <STEPPER_VoidRotate+0xb7e>
    1ce2:	9a 83       	std	Y+2, r25	; 0x02
    1ce4:	89 83       	std	Y+1, r24	; 0x01
		}
	}
	/*COUNTER CLOCKWISE*/
	else if (STEPPER_u8RotationDirection==STEPPER_CCW)
	{
		for(u16 Local_u16Iterator=1;Local_u16Iterator<=Local_u16StepperSteps;Local_u16Iterator++)
    1ce6:	de 01       	movw	r26, r28
    1ce8:	af 58       	subi	r26, 0x8F	; 143
    1cea:	bf 4f       	sbci	r27, 0xFF	; 255
    1cec:	fe 01       	movw	r30, r28
    1cee:	ef 58       	subi	r30, 0x8F	; 143
    1cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf2:	80 81       	ld	r24, Z
    1cf4:	91 81       	ldd	r25, Z+1	; 0x01
    1cf6:	01 96       	adiw	r24, 0x01	; 1
    1cf8:	8d 93       	st	X+, r24
    1cfa:	9c 93       	st	X, r25
    1cfc:	fe 01       	movw	r30, r28
    1cfe:	ef 58       	subi	r30, 0x8F	; 143
    1d00:	ff 4f       	sbci	r31, 0xFF	; 255
    1d02:	de 01       	movw	r26, r28
    1d04:	ab 58       	subi	r26, 0x8B	; 139
    1d06:	bf 4f       	sbci	r27, 0xFF	; 255
    1d08:	20 81       	ld	r18, Z
    1d0a:	31 81       	ldd	r19, Z+1	; 0x01
    1d0c:	8d 91       	ld	r24, X+
    1d0e:	9c 91       	ld	r25, X
    1d10:	11 97       	sbiw	r26, 0x01	; 1
    1d12:	82 17       	cp	r24, r18
    1d14:	93 07       	cpc	r25, r19
    1d16:	08 f0       	brcs	.+2      	; 0x1d1a <STEPPER_VoidRotate+0xbba>
    1d18:	ac cd       	rjmp	.-1192   	; 0x1872 <STEPPER_VoidRotate+0x712>
				STEPPER_u8CoilIndex=0;
				_delay_ms(2);
			}
		}
	}
}
    1d1a:	c5 58       	subi	r28, 0x85	; 133
    1d1c:	df 4f       	sbci	r29, 0xFF	; 255
    1d1e:	0f b6       	in	r0, 0x3f	; 63
    1d20:	f8 94       	cli
    1d22:	de bf       	out	0x3e, r29	; 62
    1d24:	0f be       	out	0x3f, r0	; 63
    1d26:	cd bf       	out	0x3d, r28	; 61
    1d28:	cf 91       	pop	r28
    1d2a:	df 91       	pop	r29
    1d2c:	1f 91       	pop	r17
    1d2e:	0f 91       	pop	r16
    1d30:	08 95       	ret

00001d32 <main>:
#include"DIO_interface.h"
#include"PORT_interface.h"
#include<util/delay.h>
#include"STEPPER_interface.h"
void main()
{
    1d32:	0f 93       	push	r16
    1d34:	1f 93       	push	r17
    1d36:	df 93       	push	r29
    1d38:	cf 93       	push	r28
    1d3a:	cd b7       	in	r28, 0x3d	; 61
    1d3c:	de b7       	in	r29, 0x3e	; 62
    1d3e:	c6 54       	subi	r28, 0x46	; 70
    1d40:	d0 40       	sbci	r29, 0x00	; 0
    1d42:	0f b6       	in	r0, 0x3f	; 63
    1d44:	f8 94       	cli
    1d46:	de bf       	out	0x3e, r29	; 62
    1d48:	0f be       	out	0x3f, r0	; 63
    1d4a:	cd bf       	out	0x3d, r28	; 61
	PORT_VoidInit();
    1d4c:	0e 94 8c 08 	call	0x1118	; 0x1118 <PORT_VoidInit>
	//STEPPER_VoidRotate(STEPPER_CW,45);
while(1)
{ DIO_u8SetPinValue(DIO_u8PORTB,DIO_u8PIN_0,1);
    1d50:	81 e0       	ldi	r24, 0x01	; 1
    1d52:	60 e0       	ldi	r22, 0x00	; 0
    1d54:	41 e0       	ldi	r20, 0x01	; 1
    1d56:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_7,DIO_u8LOW);
    1d5a:	82 e0       	ldi	r24, 0x02	; 2
    1d5c:	67 e0       	ldi	r22, 0x07	; 7
    1d5e:	40 e0       	ldi	r20, 0x00	; 0
    1d60:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_6,DIO_u8HIGH);
    1d64:	82 e0       	ldi	r24, 0x02	; 2
    1d66:	66 e0       	ldi	r22, 0x06	; 6
    1d68:	41 e0       	ldi	r20, 0x01	; 1
    1d6a:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_5,DIO_u8HIGH);
    1d6e:	82 e0       	ldi	r24, 0x02	; 2
    1d70:	65 e0       	ldi	r22, 0x05	; 5
    1d72:	41 e0       	ldi	r20, 0x01	; 1
    1d74:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
	DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_4,DIO_u8HIGH);
    1d78:	82 e0       	ldi	r24, 0x02	; 2
    1d7a:	64 e0       	ldi	r22, 0x04	; 4
    1d7c:	41 e0       	ldi	r20, 0x01	; 1
    1d7e:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
    1d82:	fe 01       	movw	r30, r28
    1d84:	ed 5b       	subi	r30, 0xBD	; 189
    1d86:	ff 4f       	sbci	r31, 0xFF	; 255
    1d88:	80 e0       	ldi	r24, 0x00	; 0
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	a8 ec       	ldi	r26, 0xC8	; 200
    1d8e:	b2 e4       	ldi	r27, 0x42	; 66
    1d90:	80 83       	st	Z, r24
    1d92:	91 83       	std	Z+1, r25	; 0x01
    1d94:	a2 83       	std	Z+2, r26	; 0x02
    1d96:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d98:	8e 01       	movw	r16, r28
    1d9a:	01 5c       	subi	r16, 0xC1	; 193
    1d9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9e:	fe 01       	movw	r30, r28
    1da0:	ed 5b       	subi	r30, 0xBD	; 189
    1da2:	ff 4f       	sbci	r31, 0xFF	; 255
    1da4:	60 81       	ld	r22, Z
    1da6:	71 81       	ldd	r23, Z+1	; 0x01
    1da8:	82 81       	ldd	r24, Z+2	; 0x02
    1daa:	93 81       	ldd	r25, Z+3	; 0x03
    1dac:	20 e0       	ldi	r18, 0x00	; 0
    1dae:	30 e8       	ldi	r19, 0x80	; 128
    1db0:	4b e3       	ldi	r20, 0x3B	; 59
    1db2:	55 e4       	ldi	r21, 0x45	; 69
    1db4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1db8:	dc 01       	movw	r26, r24
    1dba:	cb 01       	movw	r24, r22
    1dbc:	f8 01       	movw	r30, r16
    1dbe:	80 83       	st	Z, r24
    1dc0:	91 83       	std	Z+1, r25	; 0x01
    1dc2:	a2 83       	std	Z+2, r26	; 0x02
    1dc4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dc6:	fe 01       	movw	r30, r28
    1dc8:	ff 96       	adiw	r30, 0x3f	; 63
    1dca:	60 81       	ld	r22, Z
    1dcc:	71 81       	ldd	r23, Z+1	; 0x01
    1dce:	82 81       	ldd	r24, Z+2	; 0x02
    1dd0:	93 81       	ldd	r25, Z+3	; 0x03
    1dd2:	20 e0       	ldi	r18, 0x00	; 0
    1dd4:	30 e0       	ldi	r19, 0x00	; 0
    1dd6:	40 e8       	ldi	r20, 0x80	; 128
    1dd8:	5f e3       	ldi	r21, 0x3F	; 63
    1dda:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1dde:	88 23       	and	r24, r24
    1de0:	2c f4       	brge	.+10     	; 0x1dec <main+0xba>
		__ticks = 1;
    1de2:	81 e0       	ldi	r24, 0x01	; 1
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	9e af       	std	Y+62, r25	; 0x3e
    1de8:	8d af       	std	Y+61, r24	; 0x3d
    1dea:	46 c0       	rjmp	.+140    	; 0x1e78 <main+0x146>
	else if (__tmp > 65535)
    1dec:	fe 01       	movw	r30, r28
    1dee:	ff 96       	adiw	r30, 0x3f	; 63
    1df0:	60 81       	ld	r22, Z
    1df2:	71 81       	ldd	r23, Z+1	; 0x01
    1df4:	82 81       	ldd	r24, Z+2	; 0x02
    1df6:	93 81       	ldd	r25, Z+3	; 0x03
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	3f ef       	ldi	r19, 0xFF	; 255
    1dfc:	4f e7       	ldi	r20, 0x7F	; 127
    1dfe:	57 e4       	ldi	r21, 0x47	; 71
    1e00:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1e04:	18 16       	cp	r1, r24
    1e06:	64 f5       	brge	.+88     	; 0x1e60 <main+0x12e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e08:	fe 01       	movw	r30, r28
    1e0a:	ed 5b       	subi	r30, 0xBD	; 189
    1e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0e:	60 81       	ld	r22, Z
    1e10:	71 81       	ldd	r23, Z+1	; 0x01
    1e12:	82 81       	ldd	r24, Z+2	; 0x02
    1e14:	93 81       	ldd	r25, Z+3	; 0x03
    1e16:	20 e0       	ldi	r18, 0x00	; 0
    1e18:	30 e0       	ldi	r19, 0x00	; 0
    1e1a:	40 e2       	ldi	r20, 0x20	; 32
    1e1c:	51 e4       	ldi	r21, 0x41	; 65
    1e1e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e22:	dc 01       	movw	r26, r24
    1e24:	cb 01       	movw	r24, r22
    1e26:	bc 01       	movw	r22, r24
    1e28:	cd 01       	movw	r24, r26
    1e2a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e2e:	dc 01       	movw	r26, r24
    1e30:	cb 01       	movw	r24, r22
    1e32:	9e af       	std	Y+62, r25	; 0x3e
    1e34:	8d af       	std	Y+61, r24	; 0x3d
    1e36:	0f c0       	rjmp	.+30     	; 0x1e56 <main+0x124>
    1e38:	8c e2       	ldi	r24, 0x2C	; 44
    1e3a:	91 e0       	ldi	r25, 0x01	; 1
    1e3c:	9c af       	std	Y+60, r25	; 0x3c
    1e3e:	8b af       	std	Y+59, r24	; 0x3b
    1e40:	8b ad       	ldd	r24, Y+59	; 0x3b
    1e42:	9c ad       	ldd	r25, Y+60	; 0x3c
    1e44:	01 97       	sbiw	r24, 0x01	; 1
    1e46:	f1 f7       	brne	.-4      	; 0x1e44 <main+0x112>
    1e48:	9c af       	std	Y+60, r25	; 0x3c
    1e4a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e4c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e4e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e50:	01 97       	sbiw	r24, 0x01	; 1
    1e52:	9e af       	std	Y+62, r25	; 0x3e
    1e54:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e56:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e58:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e5a:	00 97       	sbiw	r24, 0x00	; 0
    1e5c:	69 f7       	brne	.-38     	; 0x1e38 <main+0x106>
    1e5e:	16 c0       	rjmp	.+44     	; 0x1e8c <main+0x15a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e60:	fe 01       	movw	r30, r28
    1e62:	ff 96       	adiw	r30, 0x3f	; 63
    1e64:	60 81       	ld	r22, Z
    1e66:	71 81       	ldd	r23, Z+1	; 0x01
    1e68:	82 81       	ldd	r24, Z+2	; 0x02
    1e6a:	93 81       	ldd	r25, Z+3	; 0x03
    1e6c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e70:	dc 01       	movw	r26, r24
    1e72:	cb 01       	movw	r24, r22
    1e74:	9e af       	std	Y+62, r25	; 0x3e
    1e76:	8d af       	std	Y+61, r24	; 0x3d
    1e78:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e7a:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e7c:	9a af       	std	Y+58, r25	; 0x3a
    1e7e:	89 af       	std	Y+57, r24	; 0x39
    1e80:	89 ad       	ldd	r24, Y+57	; 0x39
    1e82:	9a ad       	ldd	r25, Y+58	; 0x3a
    1e84:	01 97       	sbiw	r24, 0x01	; 1
    1e86:	f1 f7       	brne	.-4      	; 0x1e84 <main+0x152>
    1e88:	9a af       	std	Y+58, r25	; 0x3a
    1e8a:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(100);
	DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_7,DIO_u8HIGH);
    1e8c:	82 e0       	ldi	r24, 0x02	; 2
    1e8e:	67 e0       	ldi	r22, 0x07	; 7
    1e90:	41 e0       	ldi	r20, 0x01	; 1
    1e92:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_6,DIO_u8LOW);
    1e96:	82 e0       	ldi	r24, 0x02	; 2
    1e98:	66 e0       	ldi	r22, 0x06	; 6
    1e9a:	40 e0       	ldi	r20, 0x00	; 0
    1e9c:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_5,DIO_u8HIGH);
    1ea0:	82 e0       	ldi	r24, 0x02	; 2
    1ea2:	65 e0       	ldi	r22, 0x05	; 5
    1ea4:	41 e0       	ldi	r20, 0x01	; 1
    1ea6:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
		DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_4,DIO_u8HIGH);
    1eaa:	82 e0       	ldi	r24, 0x02	; 2
    1eac:	64 e0       	ldi	r22, 0x04	; 4
    1eae:	41 e0       	ldi	r20, 0x01	; 1
    1eb0:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
    1eb4:	80 e0       	ldi	r24, 0x00	; 0
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	a8 ec       	ldi	r26, 0xC8	; 200
    1eba:	b2 e4       	ldi	r27, 0x42	; 66
    1ebc:	8d ab       	std	Y+53, r24	; 0x35
    1ebe:	9e ab       	std	Y+54, r25	; 0x36
    1ec0:	af ab       	std	Y+55, r26	; 0x37
    1ec2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ec4:	6d a9       	ldd	r22, Y+53	; 0x35
    1ec6:	7e a9       	ldd	r23, Y+54	; 0x36
    1ec8:	8f a9       	ldd	r24, Y+55	; 0x37
    1eca:	98 ad       	ldd	r25, Y+56	; 0x38
    1ecc:	20 e0       	ldi	r18, 0x00	; 0
    1ece:	30 e8       	ldi	r19, 0x80	; 128
    1ed0:	4b e3       	ldi	r20, 0x3B	; 59
    1ed2:	55 e4       	ldi	r21, 0x45	; 69
    1ed4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ed8:	dc 01       	movw	r26, r24
    1eda:	cb 01       	movw	r24, r22
    1edc:	89 ab       	std	Y+49, r24	; 0x31
    1ede:	9a ab       	std	Y+50, r25	; 0x32
    1ee0:	ab ab       	std	Y+51, r26	; 0x33
    1ee2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1ee4:	69 a9       	ldd	r22, Y+49	; 0x31
    1ee6:	7a a9       	ldd	r23, Y+50	; 0x32
    1ee8:	8b a9       	ldd	r24, Y+51	; 0x33
    1eea:	9c a9       	ldd	r25, Y+52	; 0x34
    1eec:	20 e0       	ldi	r18, 0x00	; 0
    1eee:	30 e0       	ldi	r19, 0x00	; 0
    1ef0:	40 e8       	ldi	r20, 0x80	; 128
    1ef2:	5f e3       	ldi	r21, 0x3F	; 63
    1ef4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ef8:	88 23       	and	r24, r24
    1efa:	2c f4       	brge	.+10     	; 0x1f06 <main+0x1d4>
		__ticks = 1;
    1efc:	81 e0       	ldi	r24, 0x01	; 1
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	98 ab       	std	Y+48, r25	; 0x30
    1f02:	8f a7       	std	Y+47, r24	; 0x2f
    1f04:	3f c0       	rjmp	.+126    	; 0x1f84 <main+0x252>
	else if (__tmp > 65535)
    1f06:	69 a9       	ldd	r22, Y+49	; 0x31
    1f08:	7a a9       	ldd	r23, Y+50	; 0x32
    1f0a:	8b a9       	ldd	r24, Y+51	; 0x33
    1f0c:	9c a9       	ldd	r25, Y+52	; 0x34
    1f0e:	20 e0       	ldi	r18, 0x00	; 0
    1f10:	3f ef       	ldi	r19, 0xFF	; 255
    1f12:	4f e7       	ldi	r20, 0x7F	; 127
    1f14:	57 e4       	ldi	r21, 0x47	; 71
    1f16:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1f1a:	18 16       	cp	r1, r24
    1f1c:	4c f5       	brge	.+82     	; 0x1f70 <main+0x23e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f1e:	6d a9       	ldd	r22, Y+53	; 0x35
    1f20:	7e a9       	ldd	r23, Y+54	; 0x36
    1f22:	8f a9       	ldd	r24, Y+55	; 0x37
    1f24:	98 ad       	ldd	r25, Y+56	; 0x38
    1f26:	20 e0       	ldi	r18, 0x00	; 0
    1f28:	30 e0       	ldi	r19, 0x00	; 0
    1f2a:	40 e2       	ldi	r20, 0x20	; 32
    1f2c:	51 e4       	ldi	r21, 0x41	; 65
    1f2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f32:	dc 01       	movw	r26, r24
    1f34:	cb 01       	movw	r24, r22
    1f36:	bc 01       	movw	r22, r24
    1f38:	cd 01       	movw	r24, r26
    1f3a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f3e:	dc 01       	movw	r26, r24
    1f40:	cb 01       	movw	r24, r22
    1f42:	98 ab       	std	Y+48, r25	; 0x30
    1f44:	8f a7       	std	Y+47, r24	; 0x2f
    1f46:	0f c0       	rjmp	.+30     	; 0x1f66 <main+0x234>
    1f48:	8c e2       	ldi	r24, 0x2C	; 44
    1f4a:	91 e0       	ldi	r25, 0x01	; 1
    1f4c:	9e a7       	std	Y+46, r25	; 0x2e
    1f4e:	8d a7       	std	Y+45, r24	; 0x2d
    1f50:	8d a5       	ldd	r24, Y+45	; 0x2d
    1f52:	9e a5       	ldd	r25, Y+46	; 0x2e
    1f54:	01 97       	sbiw	r24, 0x01	; 1
    1f56:	f1 f7       	brne	.-4      	; 0x1f54 <main+0x222>
    1f58:	9e a7       	std	Y+46, r25	; 0x2e
    1f5a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f5c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1f5e:	98 a9       	ldd	r25, Y+48	; 0x30
    1f60:	01 97       	sbiw	r24, 0x01	; 1
    1f62:	98 ab       	std	Y+48, r25	; 0x30
    1f64:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f66:	8f a5       	ldd	r24, Y+47	; 0x2f
    1f68:	98 a9       	ldd	r25, Y+48	; 0x30
    1f6a:	00 97       	sbiw	r24, 0x00	; 0
    1f6c:	69 f7       	brne	.-38     	; 0x1f48 <main+0x216>
    1f6e:	14 c0       	rjmp	.+40     	; 0x1f98 <main+0x266>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f70:	69 a9       	ldd	r22, Y+49	; 0x31
    1f72:	7a a9       	ldd	r23, Y+50	; 0x32
    1f74:	8b a9       	ldd	r24, Y+51	; 0x33
    1f76:	9c a9       	ldd	r25, Y+52	; 0x34
    1f78:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f7c:	dc 01       	movw	r26, r24
    1f7e:	cb 01       	movw	r24, r22
    1f80:	98 ab       	std	Y+48, r25	; 0x30
    1f82:	8f a7       	std	Y+47, r24	; 0x2f
    1f84:	8f a5       	ldd	r24, Y+47	; 0x2f
    1f86:	98 a9       	ldd	r25, Y+48	; 0x30
    1f88:	9c a7       	std	Y+44, r25	; 0x2c
    1f8a:	8b a7       	std	Y+43, r24	; 0x2b
    1f8c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1f8e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1f90:	01 97       	sbiw	r24, 0x01	; 1
    1f92:	f1 f7       	brne	.-4      	; 0x1f90 <main+0x25e>
    1f94:	9c a7       	std	Y+44, r25	; 0x2c
    1f96:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(100);
		DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_7,DIO_u8HIGH);
    1f98:	82 e0       	ldi	r24, 0x02	; 2
    1f9a:	67 e0       	ldi	r22, 0x07	; 7
    1f9c:	41 e0       	ldi	r20, 0x01	; 1
    1f9e:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
			DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_6,DIO_u8HIGH);
    1fa2:	82 e0       	ldi	r24, 0x02	; 2
    1fa4:	66 e0       	ldi	r22, 0x06	; 6
    1fa6:	41 e0       	ldi	r20, 0x01	; 1
    1fa8:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
			DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_5,DIO_u8LOW);
    1fac:	82 e0       	ldi	r24, 0x02	; 2
    1fae:	65 e0       	ldi	r22, 0x05	; 5
    1fb0:	40 e0       	ldi	r20, 0x00	; 0
    1fb2:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
			DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_4,DIO_u8HIGH);
    1fb6:	82 e0       	ldi	r24, 0x02	; 2
    1fb8:	64 e0       	ldi	r22, 0x04	; 4
    1fba:	41 e0       	ldi	r20, 0x01	; 1
    1fbc:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
    1fc0:	80 e0       	ldi	r24, 0x00	; 0
    1fc2:	90 e0       	ldi	r25, 0x00	; 0
    1fc4:	a8 ec       	ldi	r26, 0xC8	; 200
    1fc6:	b2 e4       	ldi	r27, 0x42	; 66
    1fc8:	8f a3       	std	Y+39, r24	; 0x27
    1fca:	98 a7       	std	Y+40, r25	; 0x28
    1fcc:	a9 a7       	std	Y+41, r26	; 0x29
    1fce:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fd0:	6f a1       	ldd	r22, Y+39	; 0x27
    1fd2:	78 a5       	ldd	r23, Y+40	; 0x28
    1fd4:	89 a5       	ldd	r24, Y+41	; 0x29
    1fd6:	9a a5       	ldd	r25, Y+42	; 0x2a
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	30 e8       	ldi	r19, 0x80	; 128
    1fdc:	4b e3       	ldi	r20, 0x3B	; 59
    1fde:	55 e4       	ldi	r21, 0x45	; 69
    1fe0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fe4:	dc 01       	movw	r26, r24
    1fe6:	cb 01       	movw	r24, r22
    1fe8:	8b a3       	std	Y+35, r24	; 0x23
    1fea:	9c a3       	std	Y+36, r25	; 0x24
    1fec:	ad a3       	std	Y+37, r26	; 0x25
    1fee:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1ff0:	6b a1       	ldd	r22, Y+35	; 0x23
    1ff2:	7c a1       	ldd	r23, Y+36	; 0x24
    1ff4:	8d a1       	ldd	r24, Y+37	; 0x25
    1ff6:	9e a1       	ldd	r25, Y+38	; 0x26
    1ff8:	20 e0       	ldi	r18, 0x00	; 0
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	40 e8       	ldi	r20, 0x80	; 128
    1ffe:	5f e3       	ldi	r21, 0x3F	; 63
    2000:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2004:	88 23       	and	r24, r24
    2006:	2c f4       	brge	.+10     	; 0x2012 <main+0x2e0>
		__ticks = 1;
    2008:	81 e0       	ldi	r24, 0x01	; 1
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	9a a3       	std	Y+34, r25	; 0x22
    200e:	89 a3       	std	Y+33, r24	; 0x21
    2010:	3f c0       	rjmp	.+126    	; 0x2090 <main+0x35e>
	else if (__tmp > 65535)
    2012:	6b a1       	ldd	r22, Y+35	; 0x23
    2014:	7c a1       	ldd	r23, Y+36	; 0x24
    2016:	8d a1       	ldd	r24, Y+37	; 0x25
    2018:	9e a1       	ldd	r25, Y+38	; 0x26
    201a:	20 e0       	ldi	r18, 0x00	; 0
    201c:	3f ef       	ldi	r19, 0xFF	; 255
    201e:	4f e7       	ldi	r20, 0x7F	; 127
    2020:	57 e4       	ldi	r21, 0x47	; 71
    2022:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2026:	18 16       	cp	r1, r24
    2028:	4c f5       	brge	.+82     	; 0x207c <main+0x34a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    202a:	6f a1       	ldd	r22, Y+39	; 0x27
    202c:	78 a5       	ldd	r23, Y+40	; 0x28
    202e:	89 a5       	ldd	r24, Y+41	; 0x29
    2030:	9a a5       	ldd	r25, Y+42	; 0x2a
    2032:	20 e0       	ldi	r18, 0x00	; 0
    2034:	30 e0       	ldi	r19, 0x00	; 0
    2036:	40 e2       	ldi	r20, 0x20	; 32
    2038:	51 e4       	ldi	r21, 0x41	; 65
    203a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    203e:	dc 01       	movw	r26, r24
    2040:	cb 01       	movw	r24, r22
    2042:	bc 01       	movw	r22, r24
    2044:	cd 01       	movw	r24, r26
    2046:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    204a:	dc 01       	movw	r26, r24
    204c:	cb 01       	movw	r24, r22
    204e:	9a a3       	std	Y+34, r25	; 0x22
    2050:	89 a3       	std	Y+33, r24	; 0x21
    2052:	0f c0       	rjmp	.+30     	; 0x2072 <main+0x340>
    2054:	8c e2       	ldi	r24, 0x2C	; 44
    2056:	91 e0       	ldi	r25, 0x01	; 1
    2058:	98 a3       	std	Y+32, r25	; 0x20
    205a:	8f 8f       	std	Y+31, r24	; 0x1f
    205c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    205e:	98 a1       	ldd	r25, Y+32	; 0x20
    2060:	01 97       	sbiw	r24, 0x01	; 1
    2062:	f1 f7       	brne	.-4      	; 0x2060 <main+0x32e>
    2064:	98 a3       	std	Y+32, r25	; 0x20
    2066:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2068:	89 a1       	ldd	r24, Y+33	; 0x21
    206a:	9a a1       	ldd	r25, Y+34	; 0x22
    206c:	01 97       	sbiw	r24, 0x01	; 1
    206e:	9a a3       	std	Y+34, r25	; 0x22
    2070:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2072:	89 a1       	ldd	r24, Y+33	; 0x21
    2074:	9a a1       	ldd	r25, Y+34	; 0x22
    2076:	00 97       	sbiw	r24, 0x00	; 0
    2078:	69 f7       	brne	.-38     	; 0x2054 <main+0x322>
    207a:	14 c0       	rjmp	.+40     	; 0x20a4 <main+0x372>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    207c:	6b a1       	ldd	r22, Y+35	; 0x23
    207e:	7c a1       	ldd	r23, Y+36	; 0x24
    2080:	8d a1       	ldd	r24, Y+37	; 0x25
    2082:	9e a1       	ldd	r25, Y+38	; 0x26
    2084:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2088:	dc 01       	movw	r26, r24
    208a:	cb 01       	movw	r24, r22
    208c:	9a a3       	std	Y+34, r25	; 0x22
    208e:	89 a3       	std	Y+33, r24	; 0x21
    2090:	89 a1       	ldd	r24, Y+33	; 0x21
    2092:	9a a1       	ldd	r25, Y+34	; 0x22
    2094:	9e 8f       	std	Y+30, r25	; 0x1e
    2096:	8d 8f       	std	Y+29, r24	; 0x1d
    2098:	8d 8d       	ldd	r24, Y+29	; 0x1d
    209a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    209c:	01 97       	sbiw	r24, 0x01	; 1
    209e:	f1 f7       	brne	.-4      	; 0x209c <main+0x36a>
    20a0:	9e 8f       	std	Y+30, r25	; 0x1e
    20a2:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(100);
			DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_7,DIO_u8HIGH);
    20a4:	82 e0       	ldi	r24, 0x02	; 2
    20a6:	67 e0       	ldi	r22, 0x07	; 7
    20a8:	41 e0       	ldi	r20, 0x01	; 1
    20aa:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_6,DIO_u8HIGH);
    20ae:	82 e0       	ldi	r24, 0x02	; 2
    20b0:	66 e0       	ldi	r22, 0x06	; 6
    20b2:	41 e0       	ldi	r20, 0x01	; 1
    20b4:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_5,DIO_u8HIGH);
    20b8:	82 e0       	ldi	r24, 0x02	; 2
    20ba:	65 e0       	ldi	r22, 0x05	; 5
    20bc:	41 e0       	ldi	r20, 0x01	; 1
    20be:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
				DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN_4,DIO_u8LOW);
    20c2:	82 e0       	ldi	r24, 0x02	; 2
    20c4:	64 e0       	ldi	r22, 0x04	; 4
    20c6:	40 e0       	ldi	r20, 0x00	; 0
    20c8:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
    20cc:	80 e0       	ldi	r24, 0x00	; 0
    20ce:	90 e0       	ldi	r25, 0x00	; 0
    20d0:	a8 ec       	ldi	r26, 0xC8	; 200
    20d2:	b2 e4       	ldi	r27, 0x42	; 66
    20d4:	89 8f       	std	Y+25, r24	; 0x19
    20d6:	9a 8f       	std	Y+26, r25	; 0x1a
    20d8:	ab 8f       	std	Y+27, r26	; 0x1b
    20da:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20dc:	69 8d       	ldd	r22, Y+25	; 0x19
    20de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    20e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    20e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    20e4:	20 e0       	ldi	r18, 0x00	; 0
    20e6:	30 e8       	ldi	r19, 0x80	; 128
    20e8:	4b e3       	ldi	r20, 0x3B	; 59
    20ea:	55 e4       	ldi	r21, 0x45	; 69
    20ec:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20f0:	dc 01       	movw	r26, r24
    20f2:	cb 01       	movw	r24, r22
    20f4:	8d 8b       	std	Y+21, r24	; 0x15
    20f6:	9e 8b       	std	Y+22, r25	; 0x16
    20f8:	af 8b       	std	Y+23, r26	; 0x17
    20fa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    20fc:	6d 89       	ldd	r22, Y+21	; 0x15
    20fe:	7e 89       	ldd	r23, Y+22	; 0x16
    2100:	8f 89       	ldd	r24, Y+23	; 0x17
    2102:	98 8d       	ldd	r25, Y+24	; 0x18
    2104:	20 e0       	ldi	r18, 0x00	; 0
    2106:	30 e0       	ldi	r19, 0x00	; 0
    2108:	40 e8       	ldi	r20, 0x80	; 128
    210a:	5f e3       	ldi	r21, 0x3F	; 63
    210c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2110:	88 23       	and	r24, r24
    2112:	2c f4       	brge	.+10     	; 0x211e <main+0x3ec>
		__ticks = 1;
    2114:	81 e0       	ldi	r24, 0x01	; 1
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	9c 8b       	std	Y+20, r25	; 0x14
    211a:	8b 8b       	std	Y+19, r24	; 0x13
    211c:	3f c0       	rjmp	.+126    	; 0x219c <main+0x46a>
	else if (__tmp > 65535)
    211e:	6d 89       	ldd	r22, Y+21	; 0x15
    2120:	7e 89       	ldd	r23, Y+22	; 0x16
    2122:	8f 89       	ldd	r24, Y+23	; 0x17
    2124:	98 8d       	ldd	r25, Y+24	; 0x18
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	3f ef       	ldi	r19, 0xFF	; 255
    212a:	4f e7       	ldi	r20, 0x7F	; 127
    212c:	57 e4       	ldi	r21, 0x47	; 71
    212e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2132:	18 16       	cp	r1, r24
    2134:	4c f5       	brge	.+82     	; 0x2188 <main+0x456>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2136:	69 8d       	ldd	r22, Y+25	; 0x19
    2138:	7a 8d       	ldd	r23, Y+26	; 0x1a
    213a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    213c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	40 e2       	ldi	r20, 0x20	; 32
    2144:	51 e4       	ldi	r21, 0x41	; 65
    2146:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    214a:	dc 01       	movw	r26, r24
    214c:	cb 01       	movw	r24, r22
    214e:	bc 01       	movw	r22, r24
    2150:	cd 01       	movw	r24, r26
    2152:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2156:	dc 01       	movw	r26, r24
    2158:	cb 01       	movw	r24, r22
    215a:	9c 8b       	std	Y+20, r25	; 0x14
    215c:	8b 8b       	std	Y+19, r24	; 0x13
    215e:	0f c0       	rjmp	.+30     	; 0x217e <main+0x44c>
    2160:	8c e2       	ldi	r24, 0x2C	; 44
    2162:	91 e0       	ldi	r25, 0x01	; 1
    2164:	9a 8b       	std	Y+18, r25	; 0x12
    2166:	89 8b       	std	Y+17, r24	; 0x11
    2168:	89 89       	ldd	r24, Y+17	; 0x11
    216a:	9a 89       	ldd	r25, Y+18	; 0x12
    216c:	01 97       	sbiw	r24, 0x01	; 1
    216e:	f1 f7       	brne	.-4      	; 0x216c <main+0x43a>
    2170:	9a 8b       	std	Y+18, r25	; 0x12
    2172:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2174:	8b 89       	ldd	r24, Y+19	; 0x13
    2176:	9c 89       	ldd	r25, Y+20	; 0x14
    2178:	01 97       	sbiw	r24, 0x01	; 1
    217a:	9c 8b       	std	Y+20, r25	; 0x14
    217c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    217e:	8b 89       	ldd	r24, Y+19	; 0x13
    2180:	9c 89       	ldd	r25, Y+20	; 0x14
    2182:	00 97       	sbiw	r24, 0x00	; 0
    2184:	69 f7       	brne	.-38     	; 0x2160 <main+0x42e>
    2186:	14 c0       	rjmp	.+40     	; 0x21b0 <main+0x47e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2188:	6d 89       	ldd	r22, Y+21	; 0x15
    218a:	7e 89       	ldd	r23, Y+22	; 0x16
    218c:	8f 89       	ldd	r24, Y+23	; 0x17
    218e:	98 8d       	ldd	r25, Y+24	; 0x18
    2190:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2194:	dc 01       	movw	r26, r24
    2196:	cb 01       	movw	r24, r22
    2198:	9c 8b       	std	Y+20, r25	; 0x14
    219a:	8b 8b       	std	Y+19, r24	; 0x13
    219c:	8b 89       	ldd	r24, Y+19	; 0x13
    219e:	9c 89       	ldd	r25, Y+20	; 0x14
    21a0:	98 8b       	std	Y+16, r25	; 0x10
    21a2:	8f 87       	std	Y+15, r24	; 0x0f
    21a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    21a6:	98 89       	ldd	r25, Y+16	; 0x10
    21a8:	01 97       	sbiw	r24, 0x01	; 1
    21aa:	f1 f7       	brne	.-4      	; 0x21a8 <main+0x476>
    21ac:	98 8b       	std	Y+16, r25	; 0x10
    21ae:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(100);
			//	_delay_ms(1000);
				DIO_u8SetPinValue(DIO_u8PORTB,DIO_u8PIN_0,0);
    21b0:	81 e0       	ldi	r24, 0x01	; 1
    21b2:	60 e0       	ldi	r22, 0x00	; 0
    21b4:	40 e0       	ldi	r20, 0x00	; 0
    21b6:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_u8SetPinValue>
    21ba:	80 e0       	ldi	r24, 0x00	; 0
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	a8 ec       	ldi	r26, 0xC8	; 200
    21c0:	b2 e4       	ldi	r27, 0x42	; 66
    21c2:	8b 87       	std	Y+11, r24	; 0x0b
    21c4:	9c 87       	std	Y+12, r25	; 0x0c
    21c6:	ad 87       	std	Y+13, r26	; 0x0d
    21c8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    21cc:	7c 85       	ldd	r23, Y+12	; 0x0c
    21ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    21d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    21d2:	20 e0       	ldi	r18, 0x00	; 0
    21d4:	30 e8       	ldi	r19, 0x80	; 128
    21d6:	4b e3       	ldi	r20, 0x3B	; 59
    21d8:	55 e4       	ldi	r21, 0x45	; 69
    21da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21de:	dc 01       	movw	r26, r24
    21e0:	cb 01       	movw	r24, r22
    21e2:	8f 83       	std	Y+7, r24	; 0x07
    21e4:	98 87       	std	Y+8, r25	; 0x08
    21e6:	a9 87       	std	Y+9, r26	; 0x09
    21e8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    21ea:	6f 81       	ldd	r22, Y+7	; 0x07
    21ec:	78 85       	ldd	r23, Y+8	; 0x08
    21ee:	89 85       	ldd	r24, Y+9	; 0x09
    21f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    21f2:	20 e0       	ldi	r18, 0x00	; 0
    21f4:	30 e0       	ldi	r19, 0x00	; 0
    21f6:	40 e8       	ldi	r20, 0x80	; 128
    21f8:	5f e3       	ldi	r21, 0x3F	; 63
    21fa:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    21fe:	88 23       	and	r24, r24
    2200:	2c f4       	brge	.+10     	; 0x220c <main+0x4da>
		__ticks = 1;
    2202:	81 e0       	ldi	r24, 0x01	; 1
    2204:	90 e0       	ldi	r25, 0x00	; 0
    2206:	9e 83       	std	Y+6, r25	; 0x06
    2208:	8d 83       	std	Y+5, r24	; 0x05
    220a:	3f c0       	rjmp	.+126    	; 0x228a <main+0x558>
	else if (__tmp > 65535)
    220c:	6f 81       	ldd	r22, Y+7	; 0x07
    220e:	78 85       	ldd	r23, Y+8	; 0x08
    2210:	89 85       	ldd	r24, Y+9	; 0x09
    2212:	9a 85       	ldd	r25, Y+10	; 0x0a
    2214:	20 e0       	ldi	r18, 0x00	; 0
    2216:	3f ef       	ldi	r19, 0xFF	; 255
    2218:	4f e7       	ldi	r20, 0x7F	; 127
    221a:	57 e4       	ldi	r21, 0x47	; 71
    221c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2220:	18 16       	cp	r1, r24
    2222:	4c f5       	brge	.+82     	; 0x2276 <main+0x544>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2224:	6b 85       	ldd	r22, Y+11	; 0x0b
    2226:	7c 85       	ldd	r23, Y+12	; 0x0c
    2228:	8d 85       	ldd	r24, Y+13	; 0x0d
    222a:	9e 85       	ldd	r25, Y+14	; 0x0e
    222c:	20 e0       	ldi	r18, 0x00	; 0
    222e:	30 e0       	ldi	r19, 0x00	; 0
    2230:	40 e2       	ldi	r20, 0x20	; 32
    2232:	51 e4       	ldi	r21, 0x41	; 65
    2234:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2238:	dc 01       	movw	r26, r24
    223a:	cb 01       	movw	r24, r22
    223c:	bc 01       	movw	r22, r24
    223e:	cd 01       	movw	r24, r26
    2240:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2244:	dc 01       	movw	r26, r24
    2246:	cb 01       	movw	r24, r22
    2248:	9e 83       	std	Y+6, r25	; 0x06
    224a:	8d 83       	std	Y+5, r24	; 0x05
    224c:	0f c0       	rjmp	.+30     	; 0x226c <main+0x53a>
    224e:	8c e2       	ldi	r24, 0x2C	; 44
    2250:	91 e0       	ldi	r25, 0x01	; 1
    2252:	9c 83       	std	Y+4, r25	; 0x04
    2254:	8b 83       	std	Y+3, r24	; 0x03
    2256:	8b 81       	ldd	r24, Y+3	; 0x03
    2258:	9c 81       	ldd	r25, Y+4	; 0x04
    225a:	01 97       	sbiw	r24, 0x01	; 1
    225c:	f1 f7       	brne	.-4      	; 0x225a <main+0x528>
    225e:	9c 83       	std	Y+4, r25	; 0x04
    2260:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2262:	8d 81       	ldd	r24, Y+5	; 0x05
    2264:	9e 81       	ldd	r25, Y+6	; 0x06
    2266:	01 97       	sbiw	r24, 0x01	; 1
    2268:	9e 83       	std	Y+6, r25	; 0x06
    226a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    226c:	8d 81       	ldd	r24, Y+5	; 0x05
    226e:	9e 81       	ldd	r25, Y+6	; 0x06
    2270:	00 97       	sbiw	r24, 0x00	; 0
    2272:	69 f7       	brne	.-38     	; 0x224e <main+0x51c>
    2274:	6d cd       	rjmp	.-1318   	; 0x1d50 <main+0x1e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2276:	6f 81       	ldd	r22, Y+7	; 0x07
    2278:	78 85       	ldd	r23, Y+8	; 0x08
    227a:	89 85       	ldd	r24, Y+9	; 0x09
    227c:	9a 85       	ldd	r25, Y+10	; 0x0a
    227e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2282:	dc 01       	movw	r26, r24
    2284:	cb 01       	movw	r24, r22
    2286:	9e 83       	std	Y+6, r25	; 0x06
    2288:	8d 83       	std	Y+5, r24	; 0x05
    228a:	8d 81       	ldd	r24, Y+5	; 0x05
    228c:	9e 81       	ldd	r25, Y+6	; 0x06
    228e:	9a 83       	std	Y+2, r25	; 0x02
    2290:	89 83       	std	Y+1, r24	; 0x01
    2292:	89 81       	ldd	r24, Y+1	; 0x01
    2294:	9a 81       	ldd	r25, Y+2	; 0x02
    2296:	01 97       	sbiw	r24, 0x01	; 1
    2298:	f1 f7       	brne	.-4      	; 0x2296 <main+0x564>
    229a:	9a 83       	std	Y+2, r25	; 0x02
    229c:	89 83       	std	Y+1, r24	; 0x01
    229e:	58 cd       	rjmp	.-1360   	; 0x1d50 <main+0x1e>

000022a0 <__prologue_saves__>:
    22a0:	2f 92       	push	r2
    22a2:	3f 92       	push	r3
    22a4:	4f 92       	push	r4
    22a6:	5f 92       	push	r5
    22a8:	6f 92       	push	r6
    22aa:	7f 92       	push	r7
    22ac:	8f 92       	push	r8
    22ae:	9f 92       	push	r9
    22b0:	af 92       	push	r10
    22b2:	bf 92       	push	r11
    22b4:	cf 92       	push	r12
    22b6:	df 92       	push	r13
    22b8:	ef 92       	push	r14
    22ba:	ff 92       	push	r15
    22bc:	0f 93       	push	r16
    22be:	1f 93       	push	r17
    22c0:	cf 93       	push	r28
    22c2:	df 93       	push	r29
    22c4:	cd b7       	in	r28, 0x3d	; 61
    22c6:	de b7       	in	r29, 0x3e	; 62
    22c8:	ca 1b       	sub	r28, r26
    22ca:	db 0b       	sbc	r29, r27
    22cc:	0f b6       	in	r0, 0x3f	; 63
    22ce:	f8 94       	cli
    22d0:	de bf       	out	0x3e, r29	; 62
    22d2:	0f be       	out	0x3f, r0	; 63
    22d4:	cd bf       	out	0x3d, r28	; 61
    22d6:	09 94       	ijmp

000022d8 <__epilogue_restores__>:
    22d8:	2a 88       	ldd	r2, Y+18	; 0x12
    22da:	39 88       	ldd	r3, Y+17	; 0x11
    22dc:	48 88       	ldd	r4, Y+16	; 0x10
    22de:	5f 84       	ldd	r5, Y+15	; 0x0f
    22e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    22e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    22e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    22e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    22e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    22ea:	b9 84       	ldd	r11, Y+9	; 0x09
    22ec:	c8 84       	ldd	r12, Y+8	; 0x08
    22ee:	df 80       	ldd	r13, Y+7	; 0x07
    22f0:	ee 80       	ldd	r14, Y+6	; 0x06
    22f2:	fd 80       	ldd	r15, Y+5	; 0x05
    22f4:	0c 81       	ldd	r16, Y+4	; 0x04
    22f6:	1b 81       	ldd	r17, Y+3	; 0x03
    22f8:	aa 81       	ldd	r26, Y+2	; 0x02
    22fa:	b9 81       	ldd	r27, Y+1	; 0x01
    22fc:	ce 0f       	add	r28, r30
    22fe:	d1 1d       	adc	r29, r1
    2300:	0f b6       	in	r0, 0x3f	; 63
    2302:	f8 94       	cli
    2304:	de bf       	out	0x3e, r29	; 62
    2306:	0f be       	out	0x3f, r0	; 63
    2308:	cd bf       	out	0x3d, r28	; 61
    230a:	ed 01       	movw	r28, r26
    230c:	08 95       	ret

0000230e <_exit>:
    230e:	f8 94       	cli

00002310 <__stop_program>:
    2310:	ff cf       	rjmp	.-2      	; 0x2310 <__stop_program>
